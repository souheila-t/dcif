resultFilename :RNG005-2.C2i1
nethod:SOLAR-Inc
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:
timout :600000
>>>>>>>>>>>> Solving at depth : 4( real 4)
>>>>>>>>>>>> Solve - measure : [599872, 2271232, 52141, 223001, 1079958, 0, 0, 0]
SolveToClause Finished!
5655 CHARACTERISTIC CLAUSES

[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_2,_2,add(_1,c)), -product(add(_1,c),_2,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_0,c), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_0,_0,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_0,_1)]
[-product(d,d,c), -product(_0,d,d), -product(_1,d,additive_identity), -product(_0,_1,_0), -product(_0,d,_1)]
[-product(_0,c,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,d), -product(d,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_inverse(_2),d)]
[-product(_0,d,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,d), -product(_1,_0,add(additive_identity,additive_identity)), -product(c,_1,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(d,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_3,_0,_2), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_3,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_0), -product(c,_1,d), -product(_1,_0,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_0), -product(_0,_2,_4), -product(_4,_3,d), -product(_3,add(_0,_1),_5), -product(_2,_5,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_0,d,d), -product(_0,_0,add(d,_0)), -product(_0,c,additive_identity)]
[-product(d,c,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(d,_0,_1), -product(_1,d,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_3,_0), -product(_2,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_5,add(_3,c),_6), -product(_7,_5,d), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_0,additive_identity,d), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_5,d), -product(_5,_6,add(_4,c)), -product(d,_6,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(c,_0,add(_0,d)), -product(add(_0,d),c,c), -product(add(_0,d),c,additive_identity)]
[-product(d,_0,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),d), -product(add(d,_0),d,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_2,add(c,_1),_0), -product(_0,_2,_0)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_1,_0,_0)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(_0,_0,add(_0,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(c,c,c), -product(_0,d,d)]
[-product(d,d,c), -product(c,d,d), -product(d,add(c,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_2,_0,_4), -product(_4,_3,d), -product(_4,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(additive_identity,additive_identity,_1), -product(additive_identity,_1,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(additive_identity,_0),additive_identity), -product(c,add(additive_identity,_0),d)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,add(additive_identity,_0),c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,_1,add(d,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,d), -product(additive_identity,_1,_0)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_1,_0,_2), -product(_3,_1,add(_0,additive_identity)), -product(_3,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_2), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_4,_0,_2), -product(_4,additive_identity,d), -product(_0,_3,add(_3,c))]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,c,_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_4,_2), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(c,_1,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(_1,_0,additive_identity), -product(add(additive_identity,_0),_1,_2), -product(_2,_0,d), -product(_1,add(additive_identity,_0),add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,additive_identity,_2), -product(d,_3,d), -product(_4,_0,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(c,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,additive_identity), -product(c,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(c,c,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_0,d), -product(_0,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(c,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,add(additive_identity,c)), -product(add(additive_identity,c),_0,d)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_1), -product(_2,additive_identity,_0), -product(_2,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(add(d,d),add(d,d),_0), -product(add(d,d),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,add(d,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,_3,add(_2,_0)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_0,_1), -product(_1,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,c), -product(_0,c,d), -product(_2,add(_2,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_0,_5), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_1), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,add(_0,c),_2), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(add(additive_identity,c),d,d), -product(d,d,additive_identity), -product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(add(c,_0),add(c,_0),c), -product(c,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,add(_1,_1),_2), -product(_0,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_1,_0,additive_identity), -product(_2,_1,add(_0,_0)), -product(_2,additive_identity,d), -product(_1,add(_0,_0),add(_0,_0))]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,c), -product(_1,c,d), -product(_0,add(_0,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_3,d), -product(_2,add(_4,_1),_5), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,_0), -product(_1,_1,additive_identity), -product(additive_identity,_1,d), -product(_1,_0,_1)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_1), -product(c,_1,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_1,_0,_3), -product(_2,_3,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d), -product(_1,_1,add(additive_identity,c))]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,_1)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_1,_2,add(c,c)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,c,d), -product(_2,_3,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_1,d), -product(_1,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_0,_2,_5), -product(_5,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,d,additive_identity), -product(c,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(c,_4,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_0,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(d,add(_1,_0),_1), -product(c,d,additive_identity), -product(additive_identity,add(_1,_0),d)]
[-product(_0,c,_0), -product(c,_0,_1), -product(_1,c,c), -product(c,additive_identity,d), -product(_1,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(d,c,d), -product(_1,d,additive_identity), -product(additive_identity,c,d), -product(_1,d,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_inverse(_1)), -product(c,_2,d)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(add(c,c),additive_identity,d)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(c,_2,_1), -product(_0,c,additive_identity), -product(additive_identity,_2,d)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,_2), -product(c,_1,c), -product(_0,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(_2,add(_0,d),add(_0,d)), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_2,_0,_0), -product(_0,_2,_3), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(c,add(_2,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_2,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_6,add(_5,c)), -product(d,_6,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,add(d,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(add(_1,_1),add(_1,_1),c), -product(add(_1,_1),c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,d), -product(c,c,_1), -product(_1,d,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_4), -product(_4,add(_1,_2),c), -product(_3,_1,d), -product(_5,_4,_3), -product(_5,c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,add(_2,c),_2), -product(c,_1,_3), -product(_3,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,add(d,d),_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(add(_1,c),add(_1,c),_2), -product(add(_1,c),_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(additive_identity,_0,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_0,_4,add(_0,c)), -product(_0,_4,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,_1,_1), -product(_4,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d)]
[-product(c,d,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_1,d), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_4,_3), -product(_2,add(_3,c),additive_identity), -product(additive_identity,_4,d)]
[-product(_0,additive_inverse(_1),c), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(_2,_0,c), -product(_2,c,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_2,c),_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),_2,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),c,c)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_0,additive_identity), -product(d,_1,_2), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,_2,d), -product(c,_1,c), -product(_0,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_1), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_3,_0), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_0,_1),_1), -product(_2,_0,d), -product(d,add(_0,_1),c), -product(_3,_0,_2), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,_3,d), -product(_3,_3,add(additive_identity,c))]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,add(_0,c),add(_0,c)), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,add(_3,_0),_5), -product(c,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(d,d,d), -product(d,d,_0), -product(_1,d,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,d), -product(_2,additive_identity,d), -product(d,_2,d)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_inverse(_0)), -product(additive_inverse(_0),_0,c), -product(_1,additive_inverse(_0),_0), -product(_1,c,d)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_4,d), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(_2,d,_0), -product(_1,_2,_1), -product(_3,d,_1), -product(_3,c,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_2,d,_3), -product(_2,_3,additive_identity)]
[-product(c,_0,c), -product(_0,add(_1,_0),_1), -product(c,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,d,c), -product(d,d,additive_identity), -product(c,d,d), -product(d,c,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,c),_0,_0), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(additive_identity,add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,additive_identity,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,_4,d), -product(_5,_0,add(_4,_2)), -product(_3,_5,_3)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,additive_identity,_1), -product(_0,_1,d), -product(additive_identity,_2,c), -product(_1,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(add(d,_0),_1,_2), -product(_2,_1,additive_identity)]
[-product(c,additive_identity,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_0,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,_0,_0)]
[-product(_0,d,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_1,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,c,_2), -product(_2,_3,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_5,_2,_2), -product(_5,_4,d), -product(_3,_6,add(_3,c)), -product(_4,_6,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_0), -product(_1,c,c), -product(_1,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(_0,_0,add(_0,_1))]
[-product(_0,_1,additive_identity), -product(d,_0,d), -product(d,_1,c), -product(_1,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_4,_5,add(d,_2)), -product(_3,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_0,_5), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_4,d), -product(_2,_5,add(_3,_1)), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,_2), -product(c,additive_identity,_1), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(add(_0,_0),_0,c), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,c,d), -product(_2,_1,add(_0,_0)), -product(_2,add(_0,_0),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(add(_0,c),add(_0,c),_2), -product(_2,_0,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_4,add(d,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,d), -product(additive_identity,_1,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_2,add(_3,c),_4), -product(_1,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,_1), -product(d,c,c), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(additive_identity,_5,_2), -product(d,_5,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,_0), -product(_0,c,c), -product(_1,_2,add(_1,d)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(_0,_5,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,_2,d), -product(_2,_2,_1)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_3,add(additive_identity,c)), -product(_2,_4,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(add(_0,c),_3,_0), -product(add(_0,c),_3,d), -product(_4,_2,_2), -product(_4,add(_0,c),additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,d,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(additive_identity,d,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_4,_5,add(_2,c)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,c,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,_4,d), -product(_5,add(_4,_2),_0), -product(_3,_5,_3)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,add(_2,c)), -product(_0,_1,c), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,_3,add(_2,d)), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_0,_0,_1), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,d,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(add(_0,c),add(_0,c),_2), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,d,d), -product(_2,_2,_0), -product(_1,_3,add(d,c)), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_1), -product(_1,_1,c), -product(c,_1,d), -product(_1,additive_identity,_1)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,c,additive_identity), -product(d,d,_0), -product(d,additive_identity,d), -product(_0,c,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,d), -product(_2,_2,d), -product(d,add(d,c),_3), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_4,_0), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,d,c), -product(c,additive_identity,additive_identity), -product(d,c,_0), -product(d,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_0,add(_3,c)), -product(add(_3,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,c), -product(_0,add(_3,_1),d), -product(c,d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_3,_1,_1), -product(_3,add(c,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_3,_4,add(_2,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,c,_2)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,_3), -product(_3,_0,c), -product(_2,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_1,_0,additive_identity), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,c), -product(c,add(_3,_1),d), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,c,_0), -product(_2,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,additive_identity,d), -product(_1,_4,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,add(additive_identity,c),_3), -product(_0,_4,_2)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(d,additive_identity,_0), -product(c,d,additive_identity), -product(d,_1,d)]
[-product(d,_0,additive_identity), -product(c,d,d), -product(d,_0,c), -product(_0,d,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_2,d,add(_1,additive_identity))]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,add(_1,d),_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,d), -product(_2,_3,c)]
[-product(_0,c,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,c,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(additive_identity,add(d,additive_identity),c), -product(_0,d,d), -product(_0,_0,add(d,additive_identity))]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_1,_2,add(c,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_1,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_0,c), -product(_4,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,d,add(_0,additive_identity))]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,add(d,_0),c), -product(_3,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_0,add(_3,_1),_6), -product(c,_6,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_0,_4,add(c,c)), -product(_0,_4,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_0,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,c,_5), -product(_2,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_0,_4,add(c,c)), -product(_3,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,d,_3), -product(_3,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_7,c), -product(_2,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_0,additive_identity,d), -product(_2,c,d), -product(_1,_2,c)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_1,_0,add(_0,_0)), -product(_2,_1,add(_0,_0)), -product(_2,add(_0,_0),d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(add(c,_0),add(c,_0),c), -product(c,add(c,_0),d), -product(add(c,_0),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,_0,additive_identity), -product(_1,d,c), -product(_1,additive_identity,d), -product(c,_0,_0), -product(_1,_2,_0)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0)]
[-product(additive_identity,_0,_0), -product(_1,additive_identity,d), -product(d,_0,c), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_0), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(_0,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,d,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,additive_identity,_2), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_2,_1,_1), -product(_2,_0,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_2,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,c,add(c,_1)), -product(add(c,_1),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_0,d), -product(_1,_1,_0)]
[-product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,additive_identity,d), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_1,_4,add(_2,c)), -product(c,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,d,additive_identity), -product(_1,_2,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,_0,add(c,_0)), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(c,d,additive_identity), -product(d,c,d), -product(d,d,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_1,c), -product(_4,_2,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(d,d,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_3), -product(d,_1,_4), -product(_4,_2,d), -product(_2,add(_3,_0),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(_0,add(_2,_1),c), -product(_0,_3,d), -product(c,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,add(c,_1)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_2,d), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,d), -product(_0,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,add(_0,_1)), -product(_0,_2,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,add(c,c),c), -product(add(c,c),_0,_0), -product(add(c,c),_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(d,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_3,add(d,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,add(additive_identity,c),_2), -product(_2,_3,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(c,c,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(add(_0,_2),add(_0,_2),_3), -product(add(_0,_2),_3,additive_identity)]
[-product(_0,c,c), -product(d,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,d,_0)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_1,_1,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,add(_3,c),_3), -product(_2,d,additive_identity), -product(additive_identity,add(_3,c),d), -product(_2,additive_identity,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,add(d,c),_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,c), -product(_3,_5,_2)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(additive_identity,_3,_2), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,additive_identity,add(c,c))]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,additive_inverse(d),c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,d), -product(_1,additive_identity,_1), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,additive_identity,_0)]
[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,_0,_1), -product(_1,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,additive_identity,_1), -product(d,_1,d), -product(_1,c,_2), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,add(_0,_0),additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_1), -product(_1,_0,d), -product(_1,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,_0), -product(_5,_3,additive_identity)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_2,_3,_5), -product(_5,additive_identity,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(add(_0,_1),_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_1,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(d,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,c,add(_0,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_1,_1,_2), -product(_2,_0,d), -product(_0,additive_identity,_1)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,add(c,_0),c), -product(_2,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(_0,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(d,_0,c), -product(_1,_1,additive_inverse(_0)), -product(d,_1,d)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(_0,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_1,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(add(_3,c),add(_3,c),_1), -product(add(_3,c),_1,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(add(d,_0),d,d), -product(add(d,_0),add(d,_0),c), -product(c,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_1,_2,add(c,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,c), -product(c,add(c,_0),d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_0,d), -product(c,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_1,_6,add(_4,_1)), -product(c,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,_0,add(c,_0)), -product(add(c,_0),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,c,_2), -product(_2,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,add(_2,additive_identity),c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,add(d,additive_identity),additive_identity), -product(_0,_0,d), -product(d,add(d,additive_identity),c), -product(_0,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,add(additive_identity,_0),_2)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,c)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,d,_0), -product(c,_2,c), -product(_0,_3,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_1,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(_0,_5,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(_0,_1,_1)]
[-product(c,c,c), -product(add(_0,c),_1,_0), -product(c,add(_0,c),_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,add(_2,c)), -product(_3,_1,_0), -product(_3,add(_2,c),d), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(c,_0,d)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_1), -product(_2,_0,_0), -product(_2,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_1,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_0,_4,add(_2,c)), -product(_0,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,c,c), -product(_1,_0,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,add(_1,_2)), -product(add(_1,_2),_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_1,_1,c), -product(_2,_0,d), -product(_0,_2,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,d), -product(c,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,additive_identity,add(_3,c))]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_2), -product(_2,add(c,c),d), -product(_3,_2,_1), -product(_3,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_0,_1,c), -product(_0,_3,d), -product(_1,add(_2,additive_identity),_0)]
[-product(_0,_1,c), -product(_1,_2,add(_2,_1)), -product(_3,_1,_0), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,add(_2,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),_3,d), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_3,_0,c), -product(_3,additive_identity,d), -product(_1,add(_2,c),_2)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,_1)]
[-product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,c), -product(c,_3,d), -product(_1,_3,_4), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_2,c,add(c,_1)), -product(c,_2,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(d,d,add(additive_identity,c))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(c,add(_0,c),additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_2,d,c), -product(d,_2,additive_identity)]
[-product(_0,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_2), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(_1,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,additive_identity,d), -product(_4,_0,_3)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(_1,_2,add(d,c)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(c,c),c), -product(d,_0,_0), -product(d,_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,add(_0,d),add(_0,d)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),add(d,c),d), -product(d,add(d,c),add(d,c)), -product(add(d,c),d,additive_identity)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,c,_0), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_0,_6), -product(_6,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,c), -product(_4,add(_3,_1),d), -product(c,_2,_5), -product(_5,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,d,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_0,_3,add(d,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,c,_2), -product(_1,_3,_0)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_0,additive_identity,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_4,_1), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(_1,c),_1), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_3,_1), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(c,additive_inverse(_0),c), -product(additive_inverse(_0),_0,_1), -product(c,_1,d)]
[-product(add(_0,c),_1,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(add(_0,c),_2,d), -product(_3,c,c), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_3), -product(_4,_1,d), -product(_4,_3,d), -product(_3,add(_2,_0),_5), -product(_4,_5,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,add(d,c)), -product(c,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(d,additive_identity),d,d), -product(add(d,additive_identity),add(d,additive_identity),_0), -product(_0,add(d,additive_identity),_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_1,d), -product(_4,_3,_2), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_1,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,c), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_inverse(c),_1), -product(_0,_1,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,add(_1,additive_identity),_1), -product(c,_0,_2), -product(_2,add(_1,additive_identity),d), -product(d,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_3,add(_1,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_1,add(_4,_2),_5), -product(_0,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_1,_2,_1)]
[-product(add(d,c),_0,c), -product(add(d,c),add(d,c),add(d,c)), -product(add(d,c),add(d,c),d), -product(d,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_inverse(_1)), -product(c,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_4), -product(_5,add(_3,c),_2), -product(_5,_4,d), -product(_6,_5,_2), -product(_6,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_4,_0,_0), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(d,_0)), -product(d,_1,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,_1,_2), -product(_0,_2,d), -product(_1,_3,add(_1,c)), -product(_2,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_0,_2,c), -product(_0,additive_identity,d), -product(_3,d,_1), -product(c,_3,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(add(d,c),add(d,c),_1), -product(add(d,c),_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_2,_0,_1)]
[-product(d,add(_0,additive_identity),additive_identity), -product(d,d,_0), -product(_0,add(_0,additive_identity),c), -product(d,d,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,additive_identity,d), -product(_1,_3,_1)]
[-product(additive_inverse(c),_0,c), -product(_1,additive_inverse(c),additive_inverse(c)), -product(_1,_1,_2), -product(_2,additive_inverse(c),d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_4), -product(_4,_0,d), -product(_5,additive_identity,_3), -product(_1,_5,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_0,_0,_2), -product(_2,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_1,_4), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(d,add(d,_0),_0), -product(d,d,d), -product(d,add(d,_0),c), -product(d,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,add(_2,additive_identity),_1), -product(_0,_3,_0)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,_2,d), -product(add(d,_0),_1,_1), -product(_3,_0,add(d,_0)), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,_0), -product(_1,additive_identity,_2), -product(_2,additive_identity,c), -product(_1,_2,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,d), -product(_1,_3,c)]
[-product(d,_0,c), -product(d,d,d), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,c)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,c,c), -product(_1,_0,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),_0), -product(_4,_3,d), -product(_5,_4,_0), -product(_5,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,c,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_2,_2,add(c,c)), -product(add(c,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_1,d), -product(c,c,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_3,_2), -product(_2,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(c,c,add(_3,_1)), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_1,c,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,c), -product(c,_4,d), -product(_2,_2,_5), -product(_5,_3,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(add(_1,c),_2,_1), -product(c,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_1,_0,_0), -product(additive_identity,_1,d)]
[-product(_0,_0,additive_inverse(d)), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(additive_identity,_3,_1), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,d), -product(_3,_1,_0)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(c,_0,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(_0,additive_inverse(_0),c), -product(_1,_0,additive_inverse(_0)), -product(_1,c,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,c,add(_0,additive_identity))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(add(additive_identity,d),_0,additive_identity), -product(additive_identity,_0,c), -product(add(additive_identity,d),add(additive_identity,d),_0), -product(add(additive_identity,d),add(additive_identity,d),add(additive_identity,d))]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_1,add(_0,additive_identity)), -product(_2,_3,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,additive_identity,_2), -product(_1,c,c), -product(_1,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_2,add(_1,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_3,_4,add(_2,d)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_0), -product(_0,_2,d), -product(_1,_0,add(_3,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(add(_2,c),_3,_2), -product(_0,add(_2,c),_4), -product(_4,_3,d), -product(_0,_4,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,_2), -product(_2,d,c), -product(_1,_3,d), -product(_0,_1,_1)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_0,_1), -product(d,_0,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_4), -product(_4,additive_identity,d), -product(_1,_2,_1), -product(_5,_0,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_3), -product(c,c,_2), -product(c,_3,d), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(add(c,c),add(c,c),_0), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(add(_5,_2),add(_5,_2),_3), -product(add(_5,_2),_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,d), -product(_2,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(c,_0,d), -product(c,additive_identity,d), -product(d,c,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_2,additive_identity,_0), -product(c,_2,c), -product(_1,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_5,_1), -product(_1,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(d,d,c), -product(additive_identity,c,additive_identity), -product(d,additive_identity,d), -product(_0,c,c), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_4,c), -product(_2,_6,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(c,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),add(_0,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,_6,_1), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,c,add(_2,_0)), -product(add(_2,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_0,c,d), -product(_2,_3,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(d,add(c,c),c), -product(_0,d,d), -product(_0,d,additive_identity), -product(additive_identity,add(c,c),d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_1,_1,_1), -product(_1,_1,_0)]
[-product(_0,_1,additive_identity), -product(_0,_0,c), -product(c,_1,c), -product(c,_0,d), -product(_0,c,_0)]
[-product(_0,_1,c), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_2,_0), -product(_3,_1,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(_2,_2,_3), -product(_3,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(d,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,c)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_inverse(_1),additive_inverse(_1),c), -product(additive_inverse(_1),c,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),_1,d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,add(_0,_1),_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(d,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,add(_0,additive_identity),_1), -product(_0,_3,_2)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,additive_identity), -product(_4,_3,d)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(c,_1,d), -product(add(_0,c),c,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(d,_0)), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_2,c,c), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,d,_1), -product(_2,_3,_1)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(c,add(d,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_0,_3,_2), -product(_0,additive_identity,d), -product(_4,c,d), -product(_3,_4,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,_4), -product(_4,_3,d), -product(_5,_2,_2), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,d), -product(additive_identity,additive_identity,_1), -product(_1,_0,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(_0,add(additive_identity,d),_0), -product(add(additive_identity,d),_0,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_0,_5,_1), -product(c,_5,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,d), -product(d,_0,c), -product(_1,d,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,_2,add(_0,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_0,d,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,_1,_2), -product(c,additive_identity,_2), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_0,_3,_0)]
[-product(additive_identity,additive_identity,d), -product(add(_0,d),additive_identity,_0), -product(_0,additive_identity,c), -product(add(_0,d),add(_0,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,additive_identity), -product(additive_identity,_0,c), -product(_2,additive_identity,d), -product(_2,_0,_2)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(d,_2,d), -product(d,d,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(c,additive_identity,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_1,d,c)]
[-product(add(_0,_1),c,_1), -product(c,add(_0,_1),_2), -product(_2,c,c), -product(c,_0,d), -product(_2,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,c,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_0), -product(_0,_0,c), -product(d,d,d)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d), -product(_2,_3,c)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(add(_0,additive_identity),_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,additive_identity), -product(_2,_2,_3), -product(_3,c,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,add(_1,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,c), -product(c,additive_identity,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,c)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_1,add(d,additive_identity)), -product(_2,_3,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_3)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_4,d), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_0), -product(_2,add(_2,_1),_0), -product(_2,_0,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_1,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_2,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,d,add(additive_identity,c)), -product(d,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,c), -product(_8,_7,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(_1,_0,d), -product(_1,c,d), -product(c,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,additive_identity,add(_2,c)), -product(d,_4,d)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_2,_1), -product(additive_inverse(_1),_2,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_2), -product(_4,_3,d), -product(additive_identity,_5,c), -product(_3,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,_1)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(additive_identity,d,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,add(_2,d),additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,add(c,c),_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_0), -product(_0,_1,c), -product(c,_2,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(add(c,_0),add(c,_0),c), -product(add(c,_0),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,add(_0,_1)), -product(_2,_0,_0), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_0,_2), -product(_3,_1,_2)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_0,_4,add(_2,_0)), -product(c,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,_0,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(additive_identity,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_3,add(_5,_2),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),c), -product(_2,_0,c), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,_0,add(_1,d))]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,add(_2,d),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,c,_2), -product(c,_3,c)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,add(_2,_0),_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_1,d), -product(_0,_2,additive_identity), -product(additive_identity,_1,d), -product(_0,c,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,c,d), -product(c,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(d,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(add(_1,c),add(_1,c),_0), -product(add(_1,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_3,_3,_0), -product(_3,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,d,additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(_0,_4,_2)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_3,_4,add(_1,_2)), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,_0),c,_0), -product(c,add(c,_0),c), -product(c,c,c), -product(c,add(c,_0),d), -product(c,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,c)), -product(d,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(_0,add(c,d),c), -product(c,_0,add(c,d)), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,d), -product(_2,_3,additive_identity), -product(additive_identity,_1,d), -product(_4,c,_3), -product(_2,_4,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_2,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_2,d), -product(add(additive_identity,c),add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,c,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,_1,add(c,_0)), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),add(_0,d),_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(d,d,d), -product(d,d,_0), -product(_1,additive_identity,_0), -product(_0,_1,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,add(additive_identity,_0),_1), -product(_1,_2,d)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,additive_identity,c), -product(_0,_2,_0), -product(_1,_3,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(c,_3,c)]
[-product(d,_0,c), -product(add(_1,c),d,d), -product(_2,d,_1), -product(add(_1,c),_2,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,d,c)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(add(c,_0),_0,c), -product(add(c,_0),add(c,_0),_1), -product(_1,_0,d), -product(_2,add(c,_0),add(c,_0)), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,_1), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_0,_2), -product(_4,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_0), -product(c,additive_identity,d), -product(_2,d,c), -product(_0,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_2,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,add(_3,c),_3), -product(_0,_2,_0), -product(_0,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,add(_3,c),_3)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_0,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,c,_0), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(add(_3,_1),add(_3,_1),c), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,d), -product(_1,_2,_2), -product(_3,d,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_4), -product(_4,_3,d), -product(_3,_5,c), -product(additive_identity,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_2,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_3,_0,_0), -product(_3,d,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(c,c,add(_2,d)), -product(add(_2,d),c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(_0,c,c), -product(c,d,additive_identity), -product(_0,c,_0), -product(_0,additive_identity,d), -product(c,d,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_1,_2,_0), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_1,add(c,c),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(add(d,_0),_0,c), -product(add(d,_0),add(d,_0),d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(c,_0),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,_2), -product(d,_2,d), -product(_2,add(_1,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,d), -product(_3,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(c,_2,c)]
[-product(_0,_0,additive_inverse(_0)), -product(additive_inverse(_0),_0,c), -product(_1,_0,_0), -product(_1,additive_inverse(_0),d)]
[-product(c,_0,c), -product(c,_1,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(add(c,_1),add(c,_1),c), -product(add(c,_1),additive_identity,d)]
[-product(_0,_1,c), -product(_2,add(_2,_1),_2), -product(_0,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,_3), -product(_3,add(_2,c),d), -product(_3,_3,d), -product(_3,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,c,additive_identity), -product(d,_1,_0), -product(d,additive_identity,d), -product(_2,c,c), -product(_0,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,_1), -product(c,_0,c), -product(_0,add(_1,d),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_0,_1,add(c,d)), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_1,_1,_0), -product(_1,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(_1,_0,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,d), -product(_0,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_1,_2)]
[-product(_0,_1,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_2,add(c,_1),c), -product(c,_2,c)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_0,d), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,_0,d), -product(c,c,_1), -product(_1,_0,c), -product(_0,add(_0,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_2), -product(_2,_0,d), -product(c,c,_1)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,c,additive_identity), -product(_0,_0,_0), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(c,_1),c), -product(c,_2,add(c,_1)), -product(add(c,_1),add(c,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,_3,_5), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_0,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_0,add(_2,additive_identity))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,c), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,add(c,_0)), -product(_0,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(_1,add(c,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,d), -product(d,_1,c), -product(c,c,c), -product(_1,add(d,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(d,_0,d), -product(d,c,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,c), -product(_1,_1,_0), -product(_0,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_0,_5,_2), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,d,d), -product(_0,_0,additive_identity)]
[-product(c,add(_0,_1),_1), -product(_2,c,additive_identity), -product(additive_identity,add(_0,_1),c), -product(_2,_0,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,_1,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(_0,_5,_2)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,_4), -product(_0,_3,add(_2,c)), -product(_0,_4,d), -product(_0,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_3,c), -product(c,_3,additive_identity)]
[-product(_0,d,c), -product(_1,d,c), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,_0,_1), -product(_0,d,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_6,add(_5,_2),_7), -product(_8,_6,_3), -product(_8,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_3,_0), -product(_2,_4,_2), -product(_5,_1,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_4,_5,add(_3,c)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_3,_2), -product(c,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(additive_identity,_0,d), -product(_1,additive_identity,d), -product(d,_0,c), -product(_1,_1,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,d), -product(_0,_0,c), -product(_0,add(d,additive_identity),_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,_0,add(_0,_0)), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_0,add(_4,_1)), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,c), -product(c,_3,d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(c,_0,_3), -product(_3,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(add(c,c),_0,c), -product(c,add(c,c),add(c,c)), -product(_0,c,c), -product(add(c,c),c,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,_4,add(_0,c)), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,additive_identity,c), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,additive_identity), -product(_0,_1,d)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),add(_0,_0)), -product(_2,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(d,_0,additive_identity), -product(c,d,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(add(c,_1),add(c,_1),_0), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(c,d,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(d,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,c), -product(c,_1,d), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(_1,c,additive_identity), -product(_0,_1,_0)]
[-product(_0,additive_identity,c), -product(_0,_0,additive_identity), -product(additive_identity,additive_identity,d)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,_0,_1), -product(_5,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_0,add(d,additive_identity)), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(c,add(additive_identity,d),_0), -product(add(additive_identity,d),c,c)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,c,additive_identity), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,_1)]
[-product(_0,add(d,c),c), -product(c,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),c), -product(_0,c,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,d), -product(c,_0,_0), -product(additive_identity,d,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_1), -product(_1,_0,d), -product(_0,_2,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_0,_2,c), -product(_0,_1,d), -product(c,d,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,c,_0), -product(c,_0,d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,d,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,c,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,add(c,_1)), -product(add(c,_1),_1,d), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(c,c,d), -product(c,additive_identity,d), -product(c,_2,c)]
[-product(_0,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,c,d), -product(additive_identity,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,add(d,additive_identity),_0), -product(_0,_2,c)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_1,_4), -product(additive_identity,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_1,_1,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_1,additive_identity), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,c,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,add(c,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,add(c,_0),additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_3,_1,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_0,_2), -product(_6,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),c), -product(c,c,additive_identity)]
[-product(_0,_0,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,d,_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,c,d), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,c,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,_3,add(_1,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(c,_0,d)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_3,c),_3), -product(_2,_3,additive_identity), -product(additive_identity,add(_3,c),d), -product(_2,_3,_2)]
[-product(_0,additive_identity,c), -product(_1,d,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_3,_4,add(c,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_0)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,d), -product(_0,_0,_0)]
[-product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,add(c,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,_2), -product(_2,_0,d), -product(_1,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(c,_0,additive_identity), -product(d,c,d), -product(d,_0,c), -product(_0,_0,add(c,additive_identity))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,c)), -product(c,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_4,_1), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,additive_identity), -product(additive_identity,add(c,_0),d), -product(add(c,_0),add(c,_0),add(c,_0))]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,d,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(_0,_2,add(_0,c)), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_0), -product(_0,_2,d), -product(_1,_0,_3)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,c,_0), -product(_1,_0,d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_2,_2,add(c,c)), -product(add(c,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(add(c,c),d,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(d,c,c), -product(c,d,d), -product(add(_0,c),d,_0), -product(c,add(_0,c),c), -product(d,c,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(d,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,add(d,_1),_1), -product(_2,_0,d), -product(d,add(d,_1),c), -product(_2,_2,_2), -product(_3,_0,_2), -product(_3,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,_0,additive_identity), -product(_1,_3,_1), -product(_4,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_2,_2,add(_4,c)), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,additive_identity), -product(_0,_2,_1), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(additive_identity,_1,add(_1,c))]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(_2,_0,c), -product(_2,_1,d), -product(d,_2,c)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,add(c,additive_identity),c), -product(c,d,add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,d,_0), -product(d,_2,_3), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_2,additive_identity), -product(_2,c,_3), -product(_3,_2,d), -product(_2,_2,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_1,_3,add(d,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_0,_0,_0), -product(_0,add(_2,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(c,c,add(d,_1)), -product(add(d,_1),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(d,additive_identity,d), -product(_1,d,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(d,d,_0), -product(d,_0,d), -product(_1,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(add(d,_0),d,d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),add(d,_0),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_0,_5,add(_3,c)), -product(_0,_5,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,c), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,add(c,_1)), -product(add(c,_1),_0,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_0,_5), -product(_5,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(d,d,c), -product(add(c,c),d,d), -product(add(c,c),d,add(c,c)), -product(add(c,c),add(c,c),_0), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,d), -product(_1,_2,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(_1,add(_0,_0),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,_2), -product(_2,add(_2,c),_3), -product(_3,_2,d), -product(add(_2,c),_3,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,c), -product(d,d,d), -product(c,additive_identity,additive_identity)]
[-product(add(d,_0),_1,_0), -product(d,add(d,_0),_2), -product(_2,_1,c), -product(d,d,d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_0,add(d,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,c), -product(_0,_2,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_0,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,add(d,additive_identity),_0), -product(_0,_3,_0)]
[-product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,additive_identity), -product(_2,_3,_2), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(c,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_0,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,additive_identity,d), -product(_1,d,c), -product(additive_identity,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_0,add(c,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_3,d), -product(_1,_4,_3), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,c,c), -product(c,_0,d)]
[-product(_0,_0,c), -product(c,c,additive_identity), -product(_0,c,_0), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_0,_1,_5), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(_1,_1)), -product(c,_2,c)]
[-product(add(_0,c),_0,c), -product(c,add(_0,c),add(_0,c)), -product(_0,add(_0,c),c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_4,add(_3,c),_5), -product(_6,_4,_1), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(_0,_3,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_2,add(additive_identity,_1))]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,_1,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(c,_1,d), -product(c,c,_0)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,additive_identity,d), -product(c,_2,add(_2,_1))]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,add(_1,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(c,c,_0), -product(c,additive_identity,d), -product(c,c,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(add(_2,c),add(_2,c),c), -product(add(_2,c),c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),d), -product(add(d,_0),d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,add(c,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(c,add(_0,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_4,d,c), -product(_2,_4,_3)]
[-product(_0,_0,additive_inverse(d)), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,add(c,c))]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,add(_0,_1),_0), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_0,_1,_3), -product(_3,additive_identity,d), -product(_0,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(add(_2,c),_2,_3), -product(_0,add(_2,c),_0), -product(_0,_3,d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,d), -product(_1,_0,d), -product(_0,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_1,add(c,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_0,_1),_0), -product(_0,_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_1,add(_4,additive_identity)), -product(_2,_5,_0)]
[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(d,add(_0,d),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,additive_identity), -product(_0,_1,d), -product(_1,_0,_2), -product(_0,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,d,d), -product(_2,_2,_1), -product(_1,_1,_3), -product(_3,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(add(_1,_1),add(_1,_1),c), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(add(_1,c),_1,_2), -product(_0,add(_1,c),c), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,d), -product(d,d,c), -product(d,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(_0,d,add(d,d)), -product(add(d,d),_0,add(d,d)), -product(_0,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(_2,add(_2,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_0,add(_0,_1)), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,d), -product(d,c,c), -product(d,d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,add(_2,_0),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,d), -product(additive_identity,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,add(_2,c),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_1,add(additive_identity,c),_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_0,_4,add(d,_1)), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_0,add(_0,_1),_3), -product(c,_3,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,add(_0,_2),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_3,_7,add(_5,c)), -product(_6,_7,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_inverse(_1),d)]
[-product(add(additive_identity,d),add(additive_identity,d),d), -product(_0,add(additive_identity,d),additive_identity), -product(additive_identity,add(additive_identity,d),c), -product(_0,_0,add(additive_identity,d))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(additive_identity,c),_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_1,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(additive_identity,d,_2), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(c,additive_identity,d), -product(_1,d,c), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_2,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,_1,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,add(_2,_1),_2), -product(_0,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,c)), -product(_0,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,c), -product(c,c,_0), -product(_0,_1,d)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,c,d), -product(_4,_0,_2), -product(_3,_4,_3)]
[-product(d,_0,c), -product(_1,_0,additive_identity), -product(d,_1,_0), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,add(_0,d),additive_identity)]
[-product(_0,d,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,c,c), -product(_0,_2,_1)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),add(_0,d),_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,additive_identity), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,d,_0), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,add(c,_0),add(c,_0)), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,add(additive_identity,_0),_1), -product(_1,_2,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(add(additive_identity,c),_0,c), -product(d,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),d,d)]
[-product(_0,_1,c), -product(_1,_2,_0), -product(c,_2,d), -product(_2,add(_0,_1),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d)]
[-product(additive_identity,c,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_0,c)]
[-product(c,additive_identity,c), -product(_0,_1,_1), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,d,additive_identity)]
[-product(c,c,additive_inverse(_0)), -product(c,c,c), -product(c,_1,_0), -product(additive_inverse(_0),_1,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,_1), -product(_2,_0,_0), -product(_2,_1,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(_1,_0,_0), -product(_1,c,d), -product(_0,additive_identity,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,add(_2,_0),_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,c,_7), -product(_8,_6,_2), -product(_8,_7,additive_identity)]
[-product(_0,c,c), -product(_1,c,additive_identity), -product(_0,_1,_2), -product(_2,c,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_2), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(d,_0,additive_identity), -product(additive_identity,_0,c), -product(d,_1,d), -product(_1,_0,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,_1), -product(_4,_3,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,d,c), -product(_1,_3,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(add(c,_1),add(c,_1),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(d,d,c), -product(_2,_3,c)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(d,d,d), -product(d,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,c,d), -product(c,_3,add(_1,c)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_0,d), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(c,_2,c), -product(c,_3,d), -product(_2,_4,_1), -product(c,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,_3,d), -product(c,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_0), -product(_0,_5,_0)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_2,_0), -product(_0,_3,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_2,_0), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(c,c,c)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,c,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,c,add(d,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_0,c)), -product(add(_0,c),_0,d), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_3,add(_0,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(_5,_1,add(_0,_1)), -product(_5,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,c), -product(c,_2,d), -product(_1,_1,_1), -product(_4,_2,c)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(d,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),_2), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_0), -product(d,_1,d), -product(d,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,add(_1,additive_identity),c), -product(c,_2,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_4,_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_inverse(c)), -product(_2,_3,_5), -product(_5,_4,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(d,c,_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_2,_2,_1), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,additive_identity,_3)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_4,d), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_0,c,d), -product(additive_identity,_0,_1), -product(c,_1,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),_0), -product(_0,add(_0,d),c), -product(c,c,add(_0,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(_0,d,additive_identity), -product(additive_identity,_0,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,_0), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,c,d), -product(c,add(_0,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,_1), -product(_1,_0,c), -product(c,c,_0), -product(_0,add(_1,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,d), -product(d,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_2,_1),_2), -product(c,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,_2,add(c,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,_0,d), -product(_0,_0,add(additive_identity,d))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,_0,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(c,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_0,add(_2,additive_identity)), -product(c,_5,_0)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(add(c,c),add(c,c),_0), -product(_0,add(c,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_0,c,_3), -product(_2,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(additive_identity,_0,_3), -product(_3,_1,c), -product(additive_identity,_4,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,add(additive_identity,_1)), -product(add(additive_identity,_1),_1,d)]
[-product(_0,_1,additive_identity), -product(c,_0,_0), -product(_0,_1,c), -product(c,_2,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_0,_3,_2), -product(_0,additive_identity,d), -product(_4,d,c), -product(_2,_4,_3)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_2,_3,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,_0,_1), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_1,add(d,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,add(d,_1),d), -product(_0,_2,_2), -product(_3,_2,_0), -product(_3,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_1,_0), -product(c,add(_0,additive_identity),c), -product(c,_1,d)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,add(additive_identity,_0))]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,c), -product(_0,c,d), -product(_1,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(d,c,c), -product(c,_0,d), -product(_0,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,_4,add(_3,c)), -product(_3,_4,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_4,_1), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(d,_0,add(_0,d)), -product(add(_0,d),d,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_1,add(_1,_0))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,_1), -product(_0,_1,_0), -product(_0,_1,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_2,d), -product(_3,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,c), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,add(_0,_2)), -product(add(_0,_2),_3,additive_identity)]
[-product(d,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(_2,_0,add(_1,additive_identity)), -product(d,_2,d)]
[-product(d,additive_identity,c), -product(_0,d,d), -product(_0,_0,d), -product(d,d,_1), -product(_0,_1,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,_0), -product(c,c,d)]
[-product(c,additive_identity,c), -product(c,c,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_1,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,c,_1), -product(_2,_0,c), -product(_2,_1,d)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_0,c), -product(_0,_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,_1), -product(additive_identity,_0,_0), -product(additive_identity,_1,d), -product(_1,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,add(d,_0))]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,add(_4,additive_identity),_1), -product(_0,_5,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,d), -product(_3,add(c,c),_0), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),_3), -product(_3,add(_2,c),d), -product(add(_2,c),_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,add(_1,c),_1), -product(c,_0,_2), -product(_2,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d), -product(add(additive_identity,c),_1,_1)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(add(_1,d),add(_1,d),_0), -product(add(_1,d),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(add(_2,c),_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,additive_identity,d), -product(additive_identity,_0,_1), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_0,_0,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,add(_0,additive_identity))]
[-product(_0,_0,additive_identity), -product(_1,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_0,c), -product(_1,_2,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_0,_0,add(additive_identity,c))]
[-product(_0,_1,_2), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_1,_3,add(d,_2)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,add(_0,additive_identity))]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,add(_3,_0),_5), -product(_0,_5,additive_identity)]
[-product(d,c,c), -product(_0,d,d), -product(_1,d,additive_identity), -product(_0,_1,_0), -product(_2,d,_0), -product(_2,c,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(d,add(c,c),additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_1,_0), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(c,c,add(_3,_1)), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_1,_2), -product(additive_identity,_0,d), -product(d,_1,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,_0), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,add(_4,c),_4)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,c), -product(_0,d,d), -product(c,_0,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,add(_0,_1),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_4,_0), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,_0), -product(_0,_2,d), -product(_0,c,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,additive_identity,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_2,_4,add(_3,_1)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,add(c,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,add(_4,_1),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,add(c,_0),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,c), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(_2,c,add(c,_1))]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,additive_identity,add(_3,c)), -product(_1,_6,_1)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(add(c,c),add(c,c),c)]
[-product(_0,_1,c), -product(add(_1,c),_0,_0), -product(_2,_0,add(_1,c)), -product(_2,c,d), -product(add(_1,c),_2,_3), -product(_3,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_3), -product(_3,_1,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_0,additive_identity), -product(d,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_2), -product(_2,_3,_2), -product(_2,_2,d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_5,_3,_2), -product(_5,add(_4,c),d), -product(_6,_5,_2), -product(_6,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_2), -product(_1,_0,_2), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(c,d,c), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(_0,c))]
[-product(_0,d,c), -product(_1,d,c), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,_1,_0), -product(_0,d,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_4,_5,_4), -product(d,_5,additive_identity)]
[-product(_0,add(c,c),c), -product(d,_0,_0), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,d), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_2), -product(_4,_3,_2), -product(_4,_2,d), -product(additive_identity,c,_5), -product(_3,_5,additive_identity)]
[-product(d,_0,c), -product(_1,d,additive_identity), -product(d,_1,_2), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,d,c), -product(d,_1,c), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,c,_0), -product(_0,d,d), -product(_0,d,c), -product(_0,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(d,d,d), -product(d,_1,_0), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,c,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_3,_4,add(_2,d)), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,d), -product(_0,_2,add(_1,_0)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_3,_3,_0), -product(_3,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_0), -product(_2,add(_2,_1),_0), -product(_2,_0,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,additive_identity,c), -product(c,_1,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,c,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_4,_5,add(_2,c)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(add(_1,_0),_2,_1), -product(c,add(_1,_0),_3), -product(_3,_2,d), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,c), -product(_1,_1,_0), -product(_0,add(_1,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,add(_2,_1)), -product(_0,add(_2,_1),_0), -product(_0,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,additive_identity,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_0,_1), -product(c,add(_1,d),_0), -product(_2,c,c), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,_3,d), -product(_0,_1,add(_3,additive_identity))]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(_0,_5,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,add(_3,c),additive_identity), -product(_1,_6,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,_1,additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(c,_0,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,c,_0), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(c,d,c), -product(d,d,_0), -product(c,d,additive_identity), -product(additive_identity,d,d)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_2,additive_identity), -product(d,_3,d), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,add(_0,_1),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_3,add(_0,_1),c), -product(_3,_2,d), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(_3,additive_identity,d), -product(c,_3,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(d,additive_identity,_0), -product(_0,d,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_4,_2), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,additive_identity,_2), -product(_3,_0,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(c,_0)), -product(c,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_5,_6,add(_5,_2)), -product(d,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_4,_5,add(_3,c)), -product(_1,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(additive_identity,_2,_0), -product(_1,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,c,_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,add(_3,c)), -product(_4,_0,_2), -product(_4,add(_3,c),d), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,d,_0), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,add(d,additive_identity))]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(add(d,c),d,d), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,c,d), -product(c,_2,c), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_3,_4,add(d,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),d,d)]
[-product(_0,_1,c), -product(add(d,c),_0,_0), -product(add(d,c),add(d,c),d), -product(add(d,c),add(d,c),add(d,c)), -product(d,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,add(_4,c)), -product(add(_4,c),_3,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_0,_0,_2), -product(_2,add(additive_identity,_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_5,add(d,c),_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_3,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_3,d), -product(add(additive_identity,c),_2,_2)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_3), -product(_3,add(_1,_2),c), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,additive_identity,_2), -product(_0,c,_0), -product(_0,_2,d), -product(_0,_0,additive_identity)]
[-product(d,d,additive_inverse(_0)), -product(additive_inverse(_0),d,c), -product(_1,_1,_0), -product(d,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,add(_4,c))]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_3,add(_1,_0)), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_1,_2), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,c,d), -product(c,add(_0,c),_1), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_0,add(d,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(c,_2,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(_2,c,c), -product(_2,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_5,_6,add(_3,c)), -product(d,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,_2), -product(_2,_0,d), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_6,_3,add(_5,c)), -product(_2,_6,_2)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,add(c,_0),c)]
[-product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(c,additive_identity,c), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_1,c), -product(_5,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,add(d,additive_identity),d), -product(c,_0,_0), -product(d,_0,c)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(additive_identity,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_4,add(_2,c),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,add(_0,d),additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d)]
[-product(d,d,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_2,c), -product(_2,c,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_0), -product(_4,_2,_0), -product(_4,_0,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_4,_3), -product(_2,add(_3,c),_5), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_1,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,_3,additive_identity), -product(_1,_6,_1), -product(_7,_0,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_3,_0), -product(_0,_5,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,c), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,c)]
[-product(_0,d,additive_identity), -product(d,_0,_0), -product(_0,d,c), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_2,c)), -product(_3,_2,_2), -product(_3,add(_2,c),d), -product(add(_2,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(add(c,_1),_0,d), -product(add(c,_1),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,additive_identity,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(c,_3,c), -product(_4,_2,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,additive_identity,_3), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,c,d), -product(_3,_5,_2), -product(_4,_6,c)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,additive_identity,_1), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,_0,d), -product(d,additive_identity,d), -product(_1,d,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,additive_identity,d), -product(_4,_0,_2), -product(_3,_4,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,c,d), -product(d,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(_2,d,d), -product(d,add(_2,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,_2,d), -product(c,add(additive_identity,_1),_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,d), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2), -product(_3,c,c)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,add(_3,_0),_1)]
[-product(_0,add(_0,_1),_1), -product(d,_0,_2), -product(_2,add(_0,_1),c), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,c), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_2,_0), -product(_2,_0,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,add(c,_1)), -product(_0,_2,_0)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_3,d), -product(_3,add(_3,_2),_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_1,_0), -product(_5,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(add(c,_1),_0,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,add(additive_identity,c),d), -product(_2,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(c,_2,add(_1,c)), -product(d,_2,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(add(c,_0),add(c,_0),c), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,_2,add(_0,_1)), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,_1,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_0,add(d,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,add(_3,c),_3), -product(d,_2,add(_3,c)), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,c,add(_1,additive_identity))]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,additive_identity,_0), -product(_0,_4,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,_2,c), -product(c,_3,c)]
[-product(add(_0,_0),_0,c), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,c,d), -product(add(_0,_0),_1,_2), -product(_2,add(_0,_0),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(additive_identity,_1,c), -product(_0,_1,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,d,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,_3,c), -product(_2,_5,_2)]
[-product(c,additive_identity,c), -product(additive_identity,_0,c), -product(c,c,d), -product(_0,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_1,d),_0,_1), -product(_0,add(_1,d),_0), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_0,c)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,add(_2,additive_identity),_1)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_2,c,additive_identity), -product(d,_2,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_1,d), -product(_1,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,add(_0,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,d), -product(d,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_3,additive_identity,_1), -product(_3,_2,d), -product(_1,_3,_1), -product(_4,_0,_1)]
[-product(d,d,d), -product(_0,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,d)]
[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(add(_2,c),_2,d), -product(_1,add(_2,c),_1), -product(_3,_1,_1), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),d,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,c,_0), -product(add(c,c),_0,d), -product(_0,add(c,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),d,additive_identity)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(_2,c,_1), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(c,d,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_2,_3,add(_1,c)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_0), -product(c,_1,_2), -product(_2,_0,d), -product(_0,_1,c)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),d,_0), -product(c,d,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,c), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(_2,add(c,_1),c)]
[-product(_0,d,c), -product(c,_1,d), -product(_0,c,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_0), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_1,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,d), -product(_0,_0,d), -product(d,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,_1), -product(c,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,add(d,_0),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_2,add(_1,c),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(add(c,c),add(c,c),_0), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,d)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(c,c,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,c), -product(c,_0,add(_0,c)), -product(c,add(_0,c),d), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_5,_2), -product(additive_identity,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(c,c,add(d,_1)), -product(add(d,_1),c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,c,add(c,_0)), -product(add(c,_0),c,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_0), -product(_0,_5,_0)]
[-product(_0,_0,additive_identity), -product(_0,_0,d), -product(d,_0,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(c,_5,_2)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_1), -product(add(_0,c),c,d), -product(add(_0,c),_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0), -product(_2,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,_2)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_2,add(_1,c),_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,add(_1,c),_1), -product(c,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(c,add(_2,d),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(_1,_0,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_1,add(_0,_0),c)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,_2), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(add(_4,c),add(_4,c),_2), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0), -product(_3,_2,_1)]
[-product(additive_identity,c,c), -product(c,additive_identity,additive_identity), -product(c,c,_0), -product(_0,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,d,d), -product(additive_identity,d,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_0,_3,add(c,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_2,_4,add(_3,_1)), -product(_3,_4,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(_0,d,add(_0,additive_identity))]
[-product(_0,_1,c), -product(_0,_0,_1), -product(_1,_1,c), -product(_0,additive_identity,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,add(_1,d),_0), -product(c,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_4,_2), -product(additive_identity,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,add(d,d),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_0,_5,add(_4,c)), -product(_0,_5,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_0,d), -product(c,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,add(additive_identity,c),d)]
[-product(_0,add(d,_1),_1), -product(_2,_0,d), -product(d,add(d,_1),c), -product(_2,_2,_2), -product(_3,d,_2), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_2,_1,_0), -product(_2,additive_identity,additive_identity)]
[-product(c,d,d), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,_0,d), -product(_0,additive_identity,_0)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),_0,add(_0,c)), -product(_1,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_5,_1), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,additive_identity), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,add(_1,additive_identity),d), -product(d,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,d), -product(_2,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,add(d,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,_5,_2), -product(c,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_3,d), -product(_3,_0,add(_3,_2))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_1,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(d,d,c), -product(d,d,d), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,d,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,c), -product(c,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_3,_0,_2), -product(_1,_3,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(c,additive_identity,d), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(c,_5,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,_0),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,d), -product(_4,_3,d), -product(_3,c,_5), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_1,c), -product(_1,c,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,add(additive_identity,c)), -product(_3,_2,_1), -product(_3,add(additive_identity,c),d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_3,c), -product(_2,_4,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(add(_2,c),add(_2,c),_0), -product(add(_2,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_0,additive_identity,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,add(d,d),add(d,d)), -product(_0,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(c,_2,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,add(_4,c),additive_identity), -product(_1,_6,_1)]
[-product(_0,_1,c), -product(_2,_2,additive_identity), -product(_0,_2,_1), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_0,add(_2,additive_identity)), -product(_0,_5,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,_0)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,d)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_5,c), -product(c,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,c,d)]
[-product(add(_0,_1),_1,c), -product(_2,_0,add(_0,_1)), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_0), -product(c,additive_identity,d), -product(_2,c,d), -product(_1,_2,_0)]
[-product(d,additive_inverse(_0),c), -product(_1,_1,_0), -product(d,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_0,c), -product(_0,_0,add(c,_0)), -product(add(c,_0),_0,d), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,_1), -product(c,_3,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_1,add(d,d)), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,d)]
[-product(d,_0,c), -product(_1,_2,add(_2,_0)), -product(add(_2,_0),_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,d,c), -product(d,_0,_0), -product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,d), -product(_1,_0,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,c), -product(c,_1,c), -product(_2,c,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_1), -product(_2,_1,_0), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_0,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(d,_0,d), -product(_1,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_1,add(_4,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,add(_1,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_0,_1,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,d), -product(d,d,c), -product(_0,_0,d)]
[-product(_0,_1,_2), -product(_3,_0,add(_4,_2)), -product(add(_4,_2),_1,c), -product(_3,_4,d), -product(_3,_3,_5), -product(_5,_0,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,additive_identity,c), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,additive_identity), -product(additive_identity,_0,c), -product(c,c,_0), -product(_0,d,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,c), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(c,_5,_2)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_0)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_2,_1), -product(d,_2,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_5,c), -product(c,_5,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(_2,_0,_1), -product(d,_2,d)]
[-product(d,add(d,c),c), -product(d,d,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(d,c),d), -product(_2,_2,_2), -product(_2,d,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_0,_0,_1), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_3,d), -product(_1,_4,_2), -product(c,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(c,c,add(d,c)), -product(add(d,c),c,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(add(additive_identity,_1),add(additive_identity,_1),_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,add(_1,d),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,d), -product(_0,_0,d), -product(_1,additive_identity,d), -product(d,_1,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,add(_3,c)), -product(add(_3,c),_2,d), -product(_1,_1,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,c,_3), -product(_0,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_3,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(c,_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(c,_1,d), -product(add(_1,_2),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_1,_2,add(d,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,d), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,add(additive_identity,c),additive_identity), -product(_1,_3,_1)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,add(_0,c),add(_0,c)), -product(_1,c,d), -product(_1,add(_0,c),additive_identity)]
[-product(d,_0,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_1,d,_0), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_1,_2,add(_1,c)), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,d,additive_identity), -product(c,_0,d), -product(d,d,c), -product(c,c,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_0), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,_0), -product(d,c,c), -product(d,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,_0)]
[-product(_0,add(_1,_2),_2), -product(d,_0,_1), -product(_1,add(_1,_2),c), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(_0,add(_0,c),c), -product(c,_0,_0), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(c,_0,c)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,c,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_2,c)]
[-product(c,c,d), -product(d,c,c), -product(add(_0,d),_0,c), -product(c,add(_0,d),c), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,_2,d), -product(_2,add(_2,additive_identity),_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,additive_identity,_2), -product(_2,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,_1), -product(_1,_0,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_1,_2), -product(_4,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(_0,_1,c), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(_1,d,d), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(_0,additive_identity,_3), -product(_3,_1,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,add(_3,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_0,_2,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),d,_0), -product(add(_0,c),d,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),_3,d), -product(_2,add(d,c),add(d,c)), -product(_4,_2,_2), -product(_4,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_0,_1,_2), -product(_2,d,d), -product(_1,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_2), -product(_2,d,d), -product(_1,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_3,_4,add(c,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(add(_1,_0),_1,_2), -product(_0,add(_1,_0),c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(additive_identity,_0,d), -product(_1,additive_identity,d), -product(d,_0,c), -product(_1,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(_2,add(d,_0),add(d,_0)), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(additive_identity,d,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_2,add(additive_identity,c)), -product(d,_3,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_0,_1,_1), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),_2), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,add(_3,additive_identity),_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,additive_identity,d), -product(additive_identity,add(_1,c),_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,c,d), -product(additive_identity,_3,d), -product(_4,_3,c)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,add(d,_0),additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_2), -product(add(_0,c),_2,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,_2), -product(_1,_4,add(d,c)), -product(c,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_2,add(d,_0),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,add(c,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_2,c), -product(d,_3,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_5,_1), -product(_1,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,_2), -product(_1,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_0,_0,d), -product(_0,d,d), -product(_0,c,additive_identity)]
[-product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,add(_0,_0),_2), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(c,_0,d), -product(c,additive_identity,d), -product(d,d,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_0,_1),_0), -product(c,_0,additive_identity), -product(additive_identity,add(_0,_1),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_0,_1,_1), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_1,c), -product(_1,c,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,c,additive_identity), -product(_2,_4,_2), -product(_5,_3,c)]
[-product(_0,_1,d), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d)]
[-product(c,_0,additive_identity), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(additive_identity,_5,_3), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,d,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(add(_3,c),add(_3,c),_0), -product(add(_3,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_2,_2,add(_4,c)), -product(add(_4,c),_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_2,_0), -product(_2,_3,_2), -product(_2,_2,d), -product(d,add(_0,c),additive_identity)]
[-product(add(d,_0),_0,c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(add(d,_0),_1,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),_2), -product(_3,add(d,c),_2), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(_1,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,c,_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_0,_0,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_1,additive_identity,d), -product(d,_0,c), -product(_0,_1,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_1,_2,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_2,_0), -product(add(_0,_1),_1,additive_identity), -product(additive_identity,_2,d), -product(add(_0,_1),add(_0,_1),add(_0,_1))]
[-product(d,d,c), -product(d,d,d), -product(d,d,add(c,d)), -product(add(c,d),d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,d,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,c),additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_0,_4,d), -product(_1,_5,add(_4,_2)), -product(_2,_5,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_0,_4,add(_0,_2)), -product(d,_4,additive_identity)]
[-product(add(_0,_0),_0,c), -product(_0,add(_0,_0),add(_0,_0)), -product(_0,c,d), -product(c,add(_0,_0),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,_2), -product(_3,_0,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,add(_0,_1))]
[-product(add(additive_identity,additive_identity),add(additive_identity,additive_identity),additive_identity), -product(additive_identity,add(additive_identity,additive_identity),c), -product(add(additive_identity,additive_identity),add(additive_identity,additive_identity),_0), -product(_0,add(additive_identity,additive_identity),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_4,_5,add(d,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(additive_identity,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,add(_1,_0),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_6,_2), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,additive_identity,d), -product(_3,add(_2,_1),_2), -product(_0,_3,c)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_2,d), -product(_1,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,add(_2,_0),_2), -product(c,_1,c), -product(c,add(_2,_0),d), -product(_0,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_1), -product(_1,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,c,additive_identity), -product(_0,_2,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,c,additive_identity), -product(c,c,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,c), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,_0,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(_1,_2,c), -product(c,_1,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_0), -product(_2,_1,c), -product(_2,_0,d), -product(c,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(d,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(_3,c,c), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(_3,_2,add(_2,c)), -product(_3,d,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),d,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,add(_0,d))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_0,add(_2,additive_identity))]
[-product(_0,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(d,add(_3,c),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(d,add(_0,_0),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,_3,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,add(_2,_1)), -product(c,add(_2,_1),c), -product(c,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_3,_1), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_2,add(_1,_1)), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(c,_3,c)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_2,d), -product(c,_3,add(_1,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(_0,_1,d)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,d,additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,additive_identity,_0), -product(c,_1,c), -product(c,_0,d), -product(_0,d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,c), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,_0), -product(_0,c,c), -product(additive_identity,_1,d), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_3,add(d,_1)), -product(_1,_3,additive_identity)]
[-product(_0,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,c,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,additive_identity), -product(c,_2,_3), -product(_3,_0,d), -product(c,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(d,d,additive_identity), -product(additive_identity,_2,d), -product(_2,c,d), -product(_3,_2,c)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_1,_4), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,c,d), -product(additive_identity,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,add(_1,d)), -product(add(_1,d),_1,c), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,d,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_1,add(_0,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_1,_1,add(_2,d)), -product(add(_2,d),_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(_0,_3,_1)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_1,additive_identity,_0), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_3,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(c,add(d,_1),additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_0,add(_3,_2)), -product(add(_3,_2),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,c,additive_identity), -product(additive_identity,_2,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,add(_2,_1)), -product(_0,add(_2,_1),_0), -product(_0,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(additive_identity,c),additive_identity), -product(_0,add(additive_identity,c),d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_0,_0,_4), -product(_4,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,_2), -product(additive_identity,_1,_0), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(_3,add(_2,c),d), -product(d,add(_2,c),_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,c), -product(additive_identity,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(c,c,add(_4,_1)), -product(add(_4,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,_2), -product(_3,c,c), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_1,d,_0), -product(c,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,additive_identity,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_4,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_0,_2,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_4,c,_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,_3,c), -product(additive_identity,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_inverse(c)), -product(additive_inverse(c),_2,d)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_3,c,_0), -product(_3,additive_identity,d), -product(_1,_2,add(_2,_1))]
[-product(_0,_0,c), -product(c,c,additive_identity), -product(_0,c,add(additive_identity,_0)), -product(add(additive_identity,_0),c,d)]
[-product(_0,c,c), -product(c,_1,d), -product(_2,add(d,c),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(add(_1,c),_2,_1), -product(c,add(_1,c),_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_0,_2,add(_1,c)), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,d,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,c),_2), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,add(_0,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_1,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(c,add(_1,_0),d), -product(c,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,d), -product(_2,_3,additive_identity), -product(additive_identity,_3,d), -product(_4,_3,c), -product(_2,_4,_2)]
[-product(_0,add(additive_identity,c),c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_2,_0,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,d), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,add(_2,_1),_2), -product(_0,_0,_0), -product(_0,add(_2,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_0), -product(_3,_4,_3)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_0,d), -product(_0,d,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(_0,_2,_1), -product(_1,_0,d), -product(_0,_2,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_0,_3,add(_2,d)), -product(_2,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_4), -product(_4,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,additive_identity,_3), -product(_0,_5,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(_5,c,c), -product(_5,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,add(_3,c)), -product(_1,_2,c), -product(_1,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_2,c,_4), -product(_3,_4,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(d,_0,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),d,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,c,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,_2), -product(_2,_0,c), -product(_1,_3,d), -product(_3,_0,_3)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,add(_0,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(c,_0,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(d,_0,_0)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_2,_1,additive_identity)]
[-product(add(d,_0),_1,_0), -product(add(d,_0),add(d,_0),d), -product(d,_1,c), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(add(_0,additive_identity),add(_0,additive_identity),_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,add(d,d),additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,c,add(c,_0))]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,add(_1,additive_identity)), -product(_2,_0,d), -product(_2,add(_1,additive_identity),d), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(_0,add(d,d),_1), -product(_2,_0,c), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,additive_identity,d), -product(c,_1,c), -product(_0,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_1,_0), -product(_5,_3,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),c), -product(_2,add(d,_1),c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_1,add(_2,_1),d), -product(_3,_0,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_3,_2,_1), -product(_3,c,d), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_0,add(_1,c),_4), -product(_3,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(additive_identity,_0),additive_identity), -product(_0,add(additive_identity,_0),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(c,_4,c), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,additive_identity,c), -product(_1,_0,d), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(c,_1,d), -product(c,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(add(_4,c),add(_4,c),_2), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,c), -product(_2,add(_2,_1),c), -product(_2,c,d), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,d,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,additive_identity,_2), -product(_3,_0,_2)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,add(c,c),add(c,c)), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,_2), -product(_3,_2,d), -product(_4,d,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(_3,c),_3), -product(_2,_2,_2), -product(_2,add(_3,c),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,additive_identity,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_0,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(d,d,additive_identity), -product(_1,d,_1), -product(d,d,add(additive_identity,c))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,d,additive_identity), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,c,add(_1,_0)), -product(add(_1,_0),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,c), -product(_1,_0,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_2,_3,add(_1,_1)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,_0,additive_identity), -product(_1,_4,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_2,add(_3,c),_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(c,additive_inverse(_0),c), -product(_1,c,c), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(add(additive_identity,_0),c,additive_identity), -product(_0,c,d), -product(add(additive_identity,_0),_0,add(additive_identity,_0))]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,_2), -product(_3,_4,add(d,c)), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,d,additive_identity), -product(c,d,d), -product(_0,c,c)]
[-product(_0,add(_0,additive_identity),additive_identity), -product(_0,_0,d), -product(d,add(_0,additive_identity),c)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_2,additive_identity), -product(_3,_0,_2)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,_2,add(_2,c)), -product(c,_3,_1)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,c),additive_identity)]
[-product(_0,c,d), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,_1,_0), -product(_1,c,_1)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_0,_3,add(_2,_0)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_2,_3,add(_0,_1)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_1,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,add(_0,_1)), -product(c,add(_0,_1),d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,c,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,add(_1,_0),_0), -product(_2,_0,additive_identity), -product(additive_identity,add(_1,_0),c), -product(_2,_1,d), -product(_2,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(_0,_1,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_0,_2,d), -product(_1,_0,add(_2,_0))]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(additive_identity,d,c), -product(d,d,d), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,add(additive_identity,c)), -product(_1,_2,_1), -product(_1,add(additive_identity,c),d)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,add(_1,_0),_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,d,add(_1,additive_identity)), -product(d,_3,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),add(_0,d),add(_0,d)), -product(_0,add(_0,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,_3,c), -product(_2,_5,_2), -product(_6,_4,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,c), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,add(_4,_1),_5), -product(_0,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_2,d,c), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_2), -product(_2,add(_4,c),d), -product(_2,_4,additive_identity)]
[-product(_0,c,c), -product(c,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,d)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,d), -product(d,_1,_1), -product(_2,add(d,_0),_3), -product(_1,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_1,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(_5,add(_0,_1),c), -product(_5,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,_0), -product(_0,_0,add(d,additive_identity))]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(_0,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_1,_2,_0), -product(add(_0,additive_identity),_1,_3), -product(_3,_2,d)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_4), -product(_4,add(_1,_2),c), -product(_3,_1,d), -product(_5,_0,_3), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_0,_0,_3), -product(_3,add(d,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(_0,_1,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_0,_2,d), -product(_1,add(_2,_0),_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,_0,_3), -product(_3,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_1,_2,add(c,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(_0,d,_1), -product(c,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(_0,_0,c), -product(_0,_1,d), -product(_0,d,c), -product(_0,additive_identity,additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(_0,c,d)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,_0), -product(_0,_1,c)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_4,add(_2,_0)), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_0,add(d,_1),_3), -product(_0,_3,additive_identity)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_1,_1,_0), -product(_1,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,d), -product(c,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(c,_0,_3), -product(_3,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(add(d,_2),_0,d), -product(d,_1,c), -product(add(d,_2),add(d,_2),add(d,_2)), -product(_3,add(d,_2),add(d,_2)), -product(_3,add(d,_2),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,c),_4), -product(_0,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_0), -product(_0,add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,c,c), -product(_0,add(d,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_0,_3,add(_0,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,additive_identity,add(_2,c))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(_2,_0,c), -product(_2,_1,d), -product(_2,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_5,_2,_6), -product(_7,_5,_3), -product(_7,_6,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_0,_1,_1), -product(_0,_1,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,_0), -product(d,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,_5,add(_2,_0)), -product(_0,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,add(additive_identity,c))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,_2,additive_identity), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),c), -product(_4,_3,d), -product(_5,_4,c), -product(_5,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,_5,add(d,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(c,c,d)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_2,_0,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_1,_0,d), -product(c,_1,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_1,d,add(_2,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_5,c), -product(d,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_3,_4,add(_0,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,c,d)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_1,additive_identity,c), -product(_0,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_0,_2), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_1,_1,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_0,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_1,c,c), -product(_1,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,d,add(d,additive_identity))]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,add(_2,_0),_2), -product(d,_1,add(_2,_0)), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_2,_5,add(_3,_1)), -product(_0,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(_1,add(_1,_0),_2), -product(d,_2,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,c), -product(c,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,_2,_1), -product(_3,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(add(_2,d),add(_2,d),c), -product(add(_2,d),c,additive_identity)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(d,add(d,c),c), -product(_0,d,d), -product(_1,d,_0), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(d,c,d), -product(c,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(d,d,c), -product(_0,_1,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,add(_0,additive_identity)), -product(_2,_1,c), -product(_2,add(_0,additive_identity),d), -product(c,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_6,add(_5,c),_3), -product(_2,_6,_2)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(_4,c,c), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(additive_identity,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_0,_1,c), -product(_0,_3,d), -product(_1,_2,_0)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,d,d), -product(c,d,additive_identity)]
[-product(d,add(_0,c),c), -product(_0,d,d), -product(_1,d,_0), -product(_0,_1,_0), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,_3,c), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(add(_2,c),add(_2,c),_2), -product(add(_2,c),additive_identity,d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,_2), -product(_3,_2,d), -product(d,d,_4), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(d,d,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,_0),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,add(_1,c),c), -product(c,_0,_0), -product(add(_1,c),_1,_2), -product(_0,_2,d), -product(_3,_0,c), -product(_3,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,_2,add(_1,c)), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_inverse(c),_2), -product(_3,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,additive_identity,d), -product(_1,_1,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,_0), -product(_5,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_0,c,_4), -product(_0,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,_1), -product(_1,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,additive_identity,add(_2,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(c,add(_4,_1),additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_3,d), -product(add(_2,_1),_0,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,c,add(_2,additive_identity))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_4,add(_0,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(c,_0,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,additive_identity,_3), -product(_1,_6,_1), -product(_7,_0,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,d), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,d,_2), -product(_3,c,c)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,add(c,c)), -product(add(c,c),_1,d), -product(_2,_2,_3), -product(_3,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_4,_5,add(_1,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_1,d), -product(_2,_0,d)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,d,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,d,c), -product(_2,_3,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_2,d), -product(_1,_3,add(_1,_0)), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_0,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(c,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,c,_1)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),c), -product(add(_3,_1),c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(d,_0,_1), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,d), -product(d,_0,c), -product(_1,d,c)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(additive_identity,additive_identity,c)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_0,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(_3,c),_3), -product(_0,add(_3,c),d), -product(_4,_0,_2), -product(_4,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,_2,add(_0,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_0,add(d,additive_identity)), -product(c,_3,_0)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(d,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(c,_4,c)]
[-product(_0,add(_1,additive_identity),additive_identity), -product(_0,_0,_1), -product(_1,add(_1,additive_identity),c), -product(_1,_0,d)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),c), -product(_0,add(additive_identity,_0),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(additive_identity,c,_3), -product(additive_identity,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_1,additive_identity), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,d), -product(c,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_1,_1,_0)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_2,d), -product(_1,_2,_0), -product(_2,_1,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_2,additive_identity)]
[-product(c,_0,c), -product(_0,add(d,_0),d), -product(c,_0,_0), -product(c,d,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(_2,d,_0), -product(_1,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(c,_4,_1), -product(_3,_5,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,add(_1,additive_identity),d), -product(d,_2,d)]
[-product(_0,_1,_0), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_2,_2), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_0,_6,add(_4,_1)), -product(c,_6,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,c), -product(d,_0,d), -product(d,d,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_1,c,c), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,add(d,additive_identity),_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_1,additive_identity), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,additive_identity,_1)]
[-product(d,c,c), -product(_0,d,d), -product(_1,additive_identity,d), -product(_0,_1,_0), -product(_2,d,_0), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_1), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_1,d,_0), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_2,_3,c), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,add(_0,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,additive_identity,_2), -product(_0,_5,_0)]
[-product(add(additive_identity,c),_0,c), -product(d,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d), -product(d,d,add(additive_identity,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,c,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,c,add(d,additive_identity)), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,add(_5,c),_6), -product(_2,_6,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,add(c,_0),c), -product(c,_1,_2), -product(_2,add(c,_0),d), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(_1,additive_inverse(_0),_1), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,d), -product(_3,additive_identity,c), -product(d,_3,d)]
[-product(_0,_1,d), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_1,_1,_1), -product(_3,_0,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_1), -product(_1,_2,d)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(d,_0,d), -product(_0,d,_2), -product(_2,_0,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(_2,_0,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_0,additive_identity,d), -product(_2,d,c), -product(c,_2,_1)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,add(additive_identity,_0),d)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(d,_0,_1), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,c,c), -product(_3,d,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,_2,c), -product(_0,add(_0,_1),d), -product(_3,_0,add(_0,_1)), -product(_3,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,d,d), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,add(_1,_0),_1), -product(additive_identity,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,c,_0)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,add(_2,c),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,add(d,d)), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,additive_inverse(_0)), -product(_2,_0,d), -product(d,_1,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_3,c,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,add(_1,additive_identity),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,add(c,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(c,c,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,_1), -product(_1,additive_identity,_1), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,d,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,_1,additive_identity), -product(_2,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,_2,_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(c,_1,_2), -product(_2,c,additive_identity)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(add(_0,additive_identity),_0,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,add(additive_identity,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,additive_inverse(_2)), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_2,d)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_2,c,additive_identity), -product(_1,_2,c)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,add(c,c),_1), -product(d,_1,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(d,add(d,d),additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(d,d,add(_3,c)), -product(add(_3,c),d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_1,d), -product(_0,_0,_0)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(d,_1,_1), -product(_2,_3,_1)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,d,d), -product(_1,c,_0), -product(_0,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_1,d), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_1,_2,_3), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,d,add(_2,additive_identity))]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_0,_7,add(_5,c)), -product(_0,_7,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_1,_0),_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,_0), -product(_2,additive_identity,d), -product(_0,_1,_1)]
[-product(add(d,_0),_0,_0), -product(_0,add(d,_0),d), -product(d,_0,c), -product(_0,_0,_0), -product(add(d,_0),d,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_2,_3,add(d,c)), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_2,_4,add(_3,c)), -product(_1,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,add(_0,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,additive_identity), -product(additive_identity,_2,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,_0,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(c,_4,c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,additive_identity,_2), -product(d,_4,d), -product(_5,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,additive_identity,_0)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_3,_1), -product(_2,_0,_2), -product(_2,_3,d), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,d,_1), -product(_0,_4,_2), -product(_3,_5,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(c,_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(d,d)), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,_0,_0), -product(_1,additive_identity,c), -product(_1,_0,d), -product(c,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_2,add(additive_identity,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_1,add(_0,additive_identity),_2), -product(_2,_1,c), -product(_1,_0,d), -product(_1,_1,add(_0,additive_identity))]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(c,_0,c), -product(_1,add(_2,_0),_2), -product(c,_1,_0), -product(_0,add(_2,_0),d), -product(c,d,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(c,_0,_2), -product(_2,_1,d), -product(d,_2,c)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_4,add(_3,_2),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,c,_1), -product(_0,_1,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,add(c,d),_0), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(add(c,d),add(c,d),_0), -product(add(c,d),_0,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(additive_identity,d,c), -product(d,d,d), -product(d,d,_0)]
[-product(_0,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d)]
[-product(c,additive_identity,c), -product(additive_identity,_0,c), -product(c,additive_identity,_1), -product(_1,_0,d), -product(_0,_1,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,_0,add(_2,c)), -product(add(_2,c),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,add(_2,d),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_1,add(d,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1), -product(_3,_5,_2)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_2), -product(_3,_1,d), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(_2,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,_2), -product(_2,c,d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,add(_1,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(c,c)), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_0,_1,_5), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_3,c,_6), -product(_5,_6,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_4), -product(_4,_3,d), -product(_3,c,_5), -product(_4,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_2,add(_3,c),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,additive_inverse(d),d), -product(_0,_0,_1), -product(_1,additive_inverse(d),c)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,_0)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_1,_2,add(d,_0)), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_0,_1,_2), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_0,_6,add(_3,_1)), -product(c,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,additive_identity,add(_2,c)), -product(d,_3,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_1,d), -product(_2,_1,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_0,_2,c), -product(_0,additive_identity,d), -product(_3,_1,d), -product(_2,_3,c)]
[-product(c,additive_identity,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(additive_identity,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(_2,_1,_1), -product(_2,c,d), -product(_1,additive_identity,_1), -product(_1,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_0), -product(_0,add(_3,_1),d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_3,d), -product(_2,_1,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2), -product(_4,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,additive_identity), -product(c,_2,c), -product(c,c,d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,add(d,c),c), -product(d,_0,_0), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(add(c,d),add(c,d),c), -product(add(c,d),c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(c,c,_0), -product(_0,add(d,d),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,_2), -product(_2,add(_1,_0),d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_1,_4,add(_3,c)), -product(c,_4,additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_1), -product(_1,_0,d), -product(add(c,c),_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,add(_0,c)), -product(_2,_3,_2)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0), -product(_3,_5,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(add(_0,d),additive_identity,_0), -product(c,add(_0,d),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(d,d,additive_identity), -product(_1,d,_1), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,additive_identity), -product(d,d,c), -product(c,additive_identity,c), -product(d,d,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,_4,add(d,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_2), -product(additive_identity,c,_2), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,c), -product(d,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(_0,add(c,d),add(c,d)), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_1,c,additive_identity), -product(c,c,d), -product(_1,_0,_0)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(_1,d,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,add(_0,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(add(c,_0),add(c,_0),_0), -product(add(c,_0),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_2,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,d,additive_identity), -product(additive_identity,_1,c)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(c,add(additive_identity,c),_0)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_0,c,_1)]
[-product(c,c,d), -product(d,c,c), -product(_0,_1,c), -product(c,_0,c), -product(c,add(_1,d),_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(c,_1,additive_identity)]
[-product(c,_0,c), -product(_1,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(_0,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0), -product(_3,_5,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_1,_2,_3), -product(_3,additive_identity,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_0,_1), -product(_2,_1,d), -product(d,c,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_1,_1,_1), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,c,d), -product(_4,_2,_0), -product(_3,_4,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_3,_4,add(_2,_1)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,add(_1,_0),_1), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(c,c,add(_1,_1)), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_1,_2), -product(c,_3,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,c,c), -product(c,d,d), -product(add(_0,c),_0,d), -product(c,add(_0,c),c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_3,c,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_0,_0,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,additive_inverse(_0),_1), -product(c,_1,d)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,additive_identity,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_1,_3,add(d,_1)), -product(c,_3,additive_identity)]
[-product(c,d,c), -product(d,additive_identity,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(_1,_2,add(c,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_4,_1), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,additive_identity), -product(_0,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(_0,_0,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,c,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(_0,_0),additive_identity)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_0,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,add(_0,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(c,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_0), -product(_0,add(_1,_2),c), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_0), -product(_4,_2,_0), -product(_4,_0,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,add(d,additive_identity),c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_1,d), -product(_1,d,_0)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,additive_identity), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,add(_2,c),_2), -product(c,_1,_0), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,c), -product(c,_3,d), -product(_2,_1,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(_2,_0,add(d,_0)), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,c,additive_identity), -product(_0,_2,_3), -product(_3,c,d), -product(_2,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,_1)]
[-product(_0,additive_inverse(d),c), -product(_1,_2,d), -product(_0,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_2,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_2,d), -product(_2,_2,add(additive_identity,c))]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(add(_0,c),_3,_0), -product(add(_0,c),_3,d), -product(_2,_2,_4), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,d,additive_identity), -product(_1,_4,_1), -product(_5,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_3,_0), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d), -product(_1,add(c,additive_identity),_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(d,_1),d), -product(_0,_2,_2), -product(_3,_2,_0), -product(_3,d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(_3,_0,d), -product(_3,_2,d), -product(_2,_1,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,_1,d), -product(_2,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(c,c,_2), -product(_2,_1,d), -product(_1,_0,add(_0,additive_identity))]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_4,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,_1), -product(_1,c,c), -product(_0,c,d), -product(c,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_1,_1,_2)]
[-product(d,_0,_1), -product(d,d,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(d,d,d)]
[-product(add(additive_identity,c),add(additive_identity,c),c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),c,additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_4,add(additive_identity,c)), -product(_2,_6,_3)]
[-product(_0,additive_identity,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(d,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(_0,_1,add(_3,c)), -product(add(_3,c),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,_1), -product(_1,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,c,d), -product(additive_identity,_3,d), -product(_2,_4,c)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_1,_0), -product(_3,_2,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,add(c,c),add(c,c)), -product(_0,add(c,c),additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_inverse(c),additive_inverse(c),_2), -product(additive_inverse(c),_2,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_0,_0,_2), -product(_2,add(additive_identity,_1),d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,_4), -product(_5,_3,add(_2,c)), -product(_5,_4,d), -product(add(_2,c),_5,_6), -product(_6,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(add(_5,c),add(_5,c),_2), -product(add(_5,c),_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(c,_5,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),d), -product(d,add(d,_0),c), -product(_0,_0,_0), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,d), -product(_2,d,d), -product(d,add(_2,c),_3), -product(_2,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,_0,additive_identity), -product(add(_0,_0),_0,add(_0,_0)), -product(add(_0,_0),additive_identity,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_1), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_inverse(c)), -product(_1,_2,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,additive_identity,_1), -product(_4,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_1,_3,_2), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(additive_identity,_5,_2), -product(c,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_0,_4,add(_0,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(_3,_1,c), -product(_3,c,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_0,add(_3,additive_identity)), -product(c,_5,_0)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_2,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_3,_0,c), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,_3,d), -product(_3,_3,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,_0),_3), -product(d,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,_0,additive_identity)]
[-product(add(_0,c),_0,c), -product(c,add(_0,c),add(_0,c)), -product(c,add(_0,c),c), -product(c,c,d), -product(d,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_4,additive_identity,_3), -product(_1,_4,_1)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(d,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(d,add(c,d),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_4,add(_2,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_3,_4,add(_0,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,d,_0), -product(_0,_2,d)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_3,add(_1,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(add(d,_2),_0,d), -product(d,_1,c), -product(add(d,_2),add(d,_2),add(d,_2)), -product(add(d,_2),add(d,_2),_3), -product(_3,add(d,_2),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,_2,_1)]
[-product(d,d,c), -product(d,d,d), -product(add(c,d),add(c,d),d), -product(add(c,d),d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_1,add(c,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(d,d,d), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,_0,_2), -product(_2,_1,d), -product(_1,add(c,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_0,_0,_3), -product(_3,add(d,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(c,_0,_3), -product(_3,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,_2), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,add(c,_1),_2), -product(c,_2,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(c,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,_2,d), -product(_2,_2,_0)]
[-product(d,_0,additive_identity), -product(d,d,d), -product(d,_0,c), -product(d,add(d,additive_identity),_0)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,_0,d), -product(_2,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_1,_0), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_0), -product(d,_1,d), -product(d,_0,d), -product(_0,additive_identity,d)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_1,_0), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_5,_3,_2), -product(_5,add(_4,c),d), -product(_2,_3,_6), -product(_6,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,add(c,d)), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,add(_3,c)), -product(_2,add(_3,c),_2), -product(_2,add(_3,c),d), -product(d,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,additive_identity,d), -product(c,_1,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_4,_1,additive_identity), -product(_1,_4,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_0,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,additive_identity,_1), -product(_1,_0,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),_1,d), -product(add(additive_identity,c),add(additive_identity,c),_1)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,additive_identity), -product(c,_2,_1), -product(_1,c,d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_2,_3,add(_1,_1)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,d), -product(_0,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(add(_0,c),_0,c), -product(d,add(_0,c),add(_0,c)), -product(c,add(_0,c),d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,_1)]
[-product(_0,_1,additive_identity), -product(c,_0,d), -product(d,_1,c), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,add(_0,_0),_1), -product(d,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,c,add(_1,_0)), -product(add(_1,_0),c,additive_identity)]
[-product(d,d,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,d,_1), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(_0,add(d,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,additive_identity,c), -product(_2,_1,_0), -product(_2,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,add(_2,c)), -product(add(_2,c),_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_1,additive_identity)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_1,_0),_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,d,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(d,d,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_1), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_2,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_3), -product(_4,c,_2), -product(_4,_3,d), -product(_5,_4,_2), -product(_5,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_2,additive_identity), -product(_3,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,_1,add(c,d)), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_2), -product(_2,_1,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,c,c), -product(c,add(d,c),d), -product(_1,c,_0), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_2,c,d), -product(additive_identity,_2,d)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_1,_1,_0)]
[-product(_0,c,c), -product(d,c,_0), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_1,_1,add(_3,c)), -product(add(_3,c),_1,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(add(d,additive_identity),_0,d), -product(c,add(d,additive_identity),add(d,additive_identity)), -product(add(d,additive_identity),c,c)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_0,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_1,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_3,_0,_0), -product(_3,additive_identity,d), -product(_0,add(_2,c),_2)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(d,_0,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,c,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,additive_identity,_0), -product(_1,_4,_1)]
[-product(_0,additive_identity,c), -product(_1,d,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(add(_0,c),add(_0,c),d), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,c), -product(_4,add(_3,_1),d), -product(_5,_4,c), -product(_5,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,c,d), -product(_2,_3,_1)]
[-product(d,d,c), -product(_0,d,d), -product(d,d,additive_identity), -product(_0,d,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_1), -product(_1,_3,d), -product(c,c,_4), -product(_4,_2,additive_identity)]
[-product(_0,c,c), -product(d,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_0), -product(c,_0,_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,additive_identity,c), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(c,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,c,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(d,_0,c)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,c,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(c,d,_0), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,additive_identity,_0)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_1,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(d,c,_0), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(additive_identity,_1,c), -product(_1,_1,d), -product(_1,_0,d), -product(_1,_1,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_3,d), -product(_1,_4,_3), -product(c,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(add(_0,_1),add(_0,_1),add(_0,_1)), -product(add(_0,_1),_2,d), -product(add(_0,_1),_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(_0,_2,_0)]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,_1), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,additive_identity,_2), -product(_2,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,_5,add(d,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(add(d,c),add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_3,_4,add(_1,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,_3), -product(_3,_3,d), -product(c,_2,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_0), -product(_0,_0,d), -product(additive_identity,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,d), -product(d,_0,c), -product(d,d,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,add(c,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_0,_3,c)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,additive_identity,d), -product(_0,c,c), -product(c,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,d), -product(_1,_1,d), -product(d,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,_0,additive_identity), -product(d,c,d), -product(d,_0,c), -product(_0,_0,c)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_0,add(c,c),additive_identity)]
[-product(c,_0,c), -product(_0,add(_1,_0),_1), -product(c,_0,_2), -product(_2,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(d,d,additive_inverse(_0)), -product(additive_inverse(_0),d,c), -product(_1,_0,_1), -product(_2,_1,d)]
[-product(_0,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,d), -product(_1,_3,_0)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,_3,add(_1,_0)), -product(_0,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_1,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,_1), -product(_1,_0,d)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(additive_identity,_2,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_2,_1), -product(c,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),c,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,c,d), -product(c,c,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_0,_2,_4), -product(_3,_4,additive_identity)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(d,d,d), -product(d,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,_0,add(_0,additive_identity)), -product(c,_1,_0)]
[-product(_0,c,d), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,_0,_1), -product(_1,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_2,_1,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_0,_1,_0), -product(_0,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,d,d), -product(d,add(_0,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,add(_2,additive_identity),_0), -product(_0,_5,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_1,d), -product(_1,d,add(_0,additive_identity))]
[-product(_0,_1,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d)]
[-product(_0,additive_identity,c), -product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,_4,add(_2,c)), -product(_0,_4,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),d), -product(d,add(d,_0),c), -product(c,c,c), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,_0)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(c,_0)), -product(c,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(_0,c,_1), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,d,_0), -product(_1,c,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,add(_1,additive_identity),_0)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_3,add(_1,_2)), -product(c,_3,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,c), -product(d,additive_identity,d), -product(additive_identity,_2,_4), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,_2), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(c,additive_identity,d), -product(_1,c,d), -product(additive_identity,_1,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,additive_identity,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_0,_6,add(_5,_2)), -product(_4,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,add(_3,additive_identity),_0), -product(_0,_5,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(d,_2,d), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_1,_2,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,add(_0,additive_identity),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,d), -product(d,d,c), -product(_1,d,c), -product(_1,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_inverse(_0),_1), -product(_0,_1,d)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,add(_0,c)), -product(_3,_2,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,add(c,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_0,_3), -product(_2,_4,_2), -product(_5,_1,_3)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,_2,add(_0,c)), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_1), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,_1,d)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_0,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(d,d,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(additive_identity,_3,c), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(add(_0,_1),_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_4,_5,c), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_0,_0,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,additive_identity,d), -product(_0,c,c), -product(d,_0,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,add(d,d)), -product(add(d,d),c,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),_0,_2), -product(_0,add(_0,_1),add(_0,_1)), -product(_0,_2,d), -product(_2,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_0,_1), -product(_1,d,d), -product(d,add(c,_0),_2), -product(_1,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_1,_1,_2), -product(_2,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(_1,c,c), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,c,c), -product(d,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,c)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,additive_identity), -product(d,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,_0,add(d,additive_identity))]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_0,_2), -product(d,_1,d), -product(d,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,c), -product(_0,_2,d), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,d), -product(d,_0,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,_0), -product(_0,_1,c), -product(c,_2,d), -product(_1,add(_2,additive_identity),_1)]
[-product(_0,_1,d), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,c),_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,additive_identity), -product(_2,_3,_4), -product(_4,_1,d), -product(_2,_0,_3)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,d,c), -product(c,_4,_2)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,c,d), -product(_1,_3,add(_1,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,_4,add(d,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(c,_3,_1), -product(_2,c,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,add(_0,_0),c), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(_3,c,c), -product(_3,additive_identity,d), -product(_0,add(_2,_1),_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,c), -product(_0,c,d), -product(_1,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(c,c,_0)]
[-product(d,_0,c), -product(c,d,d), -product(_0,add(d,c),_1), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(c,_4,c)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_1,_4,add(_3,_1)), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,_0), -product(_3,_5,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_1,_0), -product(_4,_2,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(_0,add(d,c),c), -product(_0,c,additive_identity)]
[-product(additive_identity,add(c,c),c), -product(d,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,_4,add(_3,_1)), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_0,d), -product(_2,c,d), -product(c,add(_1,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,additive_identity,_0), -product(d,_0,d), -product(c,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,c,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(d,add(additive_identity,c),d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,add(d,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_1,add(_2,_0),_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),c), -product(add(_4,_1),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(c,add(_0,d),add(_0,d)), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,add(d,additive_identity),_0), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_0,_1,d), -product(_1,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(_3,additive_identity,d), -product(_4,add(_2,c),_2), -product(additive_identity,_4,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,add(_1,additive_identity),c)]
[-product(c,c,d), -product(d,c,c), -product(add(_0,d),c,_0), -product(c,add(_0,d),c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_0,add(_1,d)), -product(add(_1,d),_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_0,_2,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_0,_3,add(c,c)), -product(_0,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,add(_1,c),_1), -product(c,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,c), -product(c,c,d), -product(_2,add(_2,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(c,_4,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_0,add(d,additive_identity)), -product(_0,_3,_0)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_0), -product(_0,_1,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,c,add(_1,additive_identity))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,_0,c), -product(_0,additive_identity,d), -product(_0,_1,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,add(_1,c),_2), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,additive_identity,d), -product(_0,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,c), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,_1,add(_1,c))]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,_3,_2), -product(c,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,d,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_4), -product(_4,c,d), -product(_5,_3,_2), -product(_5,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(_1,_2,_3), -product(_0,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_5,add(_2,_0)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(c,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,d), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_0,c), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(add(c,c),add(c,c),_2), -product(add(c,c),_2,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(d,_1,c), -product(c,_2,_0)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(d,d,_0), -product(d,d,d), -product(_0,add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,d,add(_1,additive_identity)), -product(d,_2,d)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_1,d), -product(_2,c,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(c,_0,_0), -product(add(_0,c),_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(d,add(_1,_0),_3), -product(_3,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(add(_1,_0),add(_1,_0),c), -product(add(_1,_0),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,_0), -product(_0,_0,d), -product(additive_identity,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_1), -product(_2,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(c,_3,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,add(_3,c)), -product(_0,_2,_0), -product(_0,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,d),_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_0,_1), -product(c,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(c,_2,c), -product(c,add(_3,_1),d), -product(c,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_0,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_0,_2,_5), -product(_5,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(c,_2,c), -product(c,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_2), -product(_2,_3,d), -product(_3,c,_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,_1), -product(d,additive_identity,d), -product(_2,_0,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,_2), -product(_0,_1,d), -product(_1,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(c,_4,c)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,add(additive_identity,c),d), -product(d,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,c,additive_identity), -product(c,c,d), -product(_2,_1,_0), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(add(c,c),add(c,c),_2), -product(add(c,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(c,c,add(_2,c)), -product(add(_2,c),c,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_1,_2,add(d,_0)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_1,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_0,_1), -product(d,_2,_3), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,add(_0,_1)), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_0,_1),_0), -product(_0,_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_0,_1,_2), -product(_2,d,d), -product(_1,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_2), -product(_2,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,add(_2,c),_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,_0,add(_2,d)), -product(add(_2,d),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,d), -product(_0,_0,c), -product(_0,d,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_4,_5,add(_2,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,add(_4,c))]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(_1,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(d,d,additive_identity), -product(_2,d,c), -product(_2,additive_identity,d), -product(c,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_3,d,_1), -product(c,_3,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_1,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(c,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,c), -product(c,_2,c), -product(c,c,d), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,c,_3), -product(_2,_5,_2), -product(_6,_4,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_0,add(_0,_0)), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(additive_identity,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,_1,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,add(c,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_4,_5,add(_0,_2)), -product(_3,_4,_6), -product(_6,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,c,d), -product(_2,_4,c)]
[-product(_0,_1,c), -product(_1,additive_identity,_1), -product(_0,_1,_0), -product(_0,_1,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,_0,_2), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(d,_1),d), -product(_0,_0,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,add(c,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(_1,_1)), -product(_0,_2,_0)]
[-product(d,c,c), -product(d,c,d), -product(d,d,additive_identity), -product(additive_identity,c,d), -product(c,d,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,d,additive_identity), -product(_0,additive_identity,d), -product(_1,_0,d), -product(c,_1,c), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_4,_5,add(_3,c)), -product(_1,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_0,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,_3), -product(_4,c,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_2,_3,_2), -product(_2,add(_4,c),d), -product(_2,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(_0,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_2,d,_0), -product(_2,additive_identity,d), -product(_0,_1,_1), -product(_2,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(c,_2,c)]
[-product(add(c,_0),_0,c), -product(add(c,_0),add(c,_0),additive_identity), -product(additive_identity,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,d,_3), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_0,add(_0,additive_identity),_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_5,_6,_2), -product(_3,_5,_7), -product(_7,_6,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_2,c),_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,additive_identity,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(add(d,_0),_1,d), -product(_0,add(d,_0),add(d,_0)), -product(c,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,c,add(d,_0)), -product(add(d,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(add(_1,additive_identity),_2,_1), -product(c,add(_1,additive_identity),_0), -product(_0,_2,d), -product(_0,c,c)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(c,c,add(_1,_1)), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_1,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_2,_2,add(_4,c)), -product(add(_4,c),_3,d), -product(add(_4,c),_2,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,additive_identity), -product(_0,d,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,_4,add(_2,_0)), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(_2,_1,c), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,d), -product(d,additive_identity,_0), -product(_0,additive_identity,c), -product(d,d,additive_identity), -product(d,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,_3,additive_identity), -product(_4,_0,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,d,c), -product(c,d,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_1,_3,add(_1,d)), -product(d,_3,additive_identity)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,d), -product(_1,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,d), -product(c,_2,additive_identity), -product(additive_identity,_2,d), -product(_0,_2,_1)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_3,add(_1,_2),_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,_0,d)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,c)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_3,add(_1,d)), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,additive_identity,_0), -product(_0,d,c), -product(_1,_0,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(c,_6,_8), -product(_8,_7,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_1,c,d), -product(_0,_1,c)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,c,_0), -product(_1,additive_identity,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_1,add(_2,_1),d), -product(_3,_1,_0), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_0,c)), -product(add(_0,c),_0,d), -product(_2,_2,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_3,_1), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_1,add(_2,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,add(c,_1),c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,c,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_1,additive_identity,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,d), -product(_0,_1,additive_inverse(c))]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_1,d,d), -product(_1,_1,_0), -product(_0,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_0,_3,d), -product(d,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,additive_identity,d), -product(c,add(_1,_0),_1)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(add(_0,c),add(_0,c),d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,c,d), -product(_2,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_1,additive_identity), -product(additive_identity,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,_1), -product(_2,_0,_0)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_1,add(_2,_0),_4), -product(_3,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,add(_0,d),_1), -product(d,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_2,_2), -product(_3,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_4,_2,_1), -product(_4,additive_identity,d), -product(_1,_2,_1), -product(_5,_0,_3)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_1,add(_0,_0)), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),_0), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,_0,add(_1,d)), -product(c,_2,c)]
[-product(_0,c,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,add(_2,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),d,_1), -product(d,add(_1,_0),_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,add(c,additive_identity),_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(c,_0,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(c,add(_2,c),additive_identity)]
[-product(c,add(additive_identity,_0),_0), -product(d,c,additive_identity), -product(additive_identity,add(additive_identity,_0),c), -product(d,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_2), -product(_2,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,_2,add(_2,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_2,_3,_1), -product(additive_identity,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_0,c), -product(_1,c,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_inverse(_1),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,_0), -product(_1,additive_identity,d), -product(_1,_0,d), -product(d,_1,d)]
[-product(d,_0,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,d,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,_1,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,additive_identity,_0), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_1), -product(d,_0,d), -product(d,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_0), -product(c,_2,d), -product(_2,add(_0,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_0), -product(_2,_1,c), -product(_2,_0,d), -product(c,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(_0,_0)), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,add(_1,additive_identity)), -product(c,_3,_0)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,d,d), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(d,_1,d), -product(_1,add(_1,_0),_2), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,_4,add(_1,c)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(additive_identity,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,d,_1), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(add(_2,d),add(_2,d),_0), -product(add(_2,d),_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_0,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,add(_1,c),c), -product(_1,_0,_0), -product(_0,_0,_1), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(additive_identity,_1,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(_1,_0,d), -product(_0,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(add(c,c),_0,d), -product(_1,_1,_2), -product(_2,add(c,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_3,_4,add(_2,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,_3,add(_0,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,add(d,c),additive_identity), -product(_2,_4,_2)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(add(_0,c),_1,_3), -product(_3,_2,d), -product(c,add(_0,c),additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,_1,add(d,c)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,c)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,c,add(c,_0)), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_6,_2), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(additive_identity,_1,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_2,_0,add(additive_identity,additive_identity)), -product(c,_2,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_7,_8,add(_4,c)), -product(_2,_7,_9), -product(_9,_8,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_1,c,d), -product(additive_identity,_1,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(d,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_1,c), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,c), -product(c,_1,_0), -product(_0,add(c,d),_2), -product(_1,_2,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(add(c,d),add(c,d),c), -product(c,add(c,d),add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,c), -product(c,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,add(c,_1)), -product(add(c,_1),_0,d), -product(_0,_0,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,_2,d), -product(additive_identity,_1,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,c,add(_1,additive_identity)), -product(c,_2,c)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_2,_1,_0)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),_2,_3), -product(_2,add(_2,c),add(_2,c)), -product(_2,_3,d), -product(_3,add(_2,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(c,c,add(_2,d)), -product(add(_2,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,_3,add(_0,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_5,add(_4,c),_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,d,c), -product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,_1,add(_1,_0)), -product(c,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(d,_0,additive_identity), -product(d,d,c), -product(c,_0,c), -product(d,d,d), -product(d,c,_1), -product(_1,_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),_0,_0), -product(add(_0,c),_0,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(_2,add(d,_0),c), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_inverse(_1)), -product(c,_2,d)]
[-product(_0,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,add(additive_identity,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(_1,_1),_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(add(c,d),add(c,d),_0), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),_0), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,add(additive_identity,c),_2), -product(_2,_3,_2)]
[-product(_0,add(_0,_1),_1), -product(_2,_0,d), -product(d,add(_0,_1),c), -product(_3,d,_2), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),_3,d), -product(_2,add(d,c),add(d,c)), -product(_2,_2,_4), -product(_4,add(d,c),additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(add(d,d),add(d,d),_0), -product(_0,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),d,_2), -product(d,add(_2,c),_3), -product(_3,d,d), -product(_3,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_2), -product(_0,_1,_3), -product(_3,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_0,c), -product(_2,c,d), -product(_1,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(d,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_2,_2,_5), -product(_5,_3,d), -product(_3,_6,add(_4,c)), -product(_4,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,add(additive_identity,additive_identity),_0), -product(_0,_2,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_1,d), -product(_4,_0,_2), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,c,additive_identity), -product(_0,_2,_0), -product(_1,_3,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_3), -product(_3,_4,d), -product(_3,_4,add(additive_identity,c))]
[-product(_0,_1,c), -product(add(_1,c),_0,_0), -product(_0,_0,add(_1,c)), -product(_0,c,d), -product(_0,_0,additive_identity)]
[-product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,_1), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(c,d,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,_0), -product(d,c,c)]
[-product(d,d,c), -product(d,d,d), -product(_0,add(c,c),_1), -product(_2,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(d,d,additive_identity), -product(_1,d,c), -product(_1,additive_identity,d), -product(c,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,additive_identity,add(d,c)), -product(_2,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_0,additive_identity), -product(_2,c,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_0,d), -product(c,_1,additive_identity), -product(additive_identity,_0,d), -product(c,_0,c)]
[-product(_0,d,c), -product(c,c,additive_identity), -product(_0,c,_0), -product(_0,additive_identity,d), -product(d,c,c)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,d), -product(d,additive_identity,c), -product(additive_identity,_1,_1), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,add(_1,c),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,_2,d), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,c), -product(_0,_3,_1)]
[-product(d,_0,c), -product(_1,additive_identity,d), -product(_2,_1,d), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(c,_0,_5), -product(_5,_0,additive_identity)]
[-product(additive_inverse(c),additive_inverse(c),c), -product(c,additive_inverse(c),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_1,_3), -product(_4,_0,_2), -product(_4,_3,d), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,c,additive_identity), -product(c,c,d), -product(c,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,_0,d), -product(_1,_2,_0)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,_1),additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_0,_2,_1), -product(c,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_0), -product(d,d,c), -product(d,_0,d)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_2,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),_0,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_1,add(d,_1),additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,d,d), -product(_2,_2,_4), -product(_4,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,_1,d), -product(_0,add(c,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_0,add(d,d)), -product(add(d,d),_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(d,_2,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(add(_1,_0),_2,_1), -product(c,add(_1,_0),_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0), -product(_2,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,add(d,_2),additive_identity)]
[-product(add(_0,_1),_0,_1), -product(_0,add(_0,_1),_0), -product(_0,_0,c), -product(c,add(_0,_1),d), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_1,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(_1,additive_identity),_1,_2), -product(_3,add(_1,additive_identity),_0), -product(_3,_2,d), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,d), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_2,_2,_1), -product(_1,_2,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(_0,add(_0,c),additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,_0), -product(c,_1,_0)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(c,d,d)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_0), -product(_0,_2,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_1,_2,_0)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(d,_0,additive_inverse(_1)), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_3,add(d,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_0,_2), -product(c,_3,_0)]
[-product(_0,_1,d), -product(_0,_0,add(_1,d)), -product(add(_1,d),_1,c), -product(add(_1,d),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,d), -product(additive_identity,_2,d), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_2), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,_0),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,_2,add(_1,_1)), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(add(_2,c),add(_2,c),_2)]
[-product(_0,d,c), -product(_1,d,_0), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,c,_1), -product(_0,d,_0)]
[-product(add(_0,_1),_1,_1), -product(_1,add(_0,_1),_2), -product(_2,_1,c), -product(_1,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(_0,_1,c), -product(d,add(_2,_1),_2), -product(_0,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(_0,_0,add(additive_identity,_1))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,_0,c), -product(_3,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,add(additive_identity,_0),_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(c,_2,d), -product(_2,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,_2), -product(_1,add(d,c),_4), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(_1,_1,d), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,c), -product(_0,additive_identity,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,c,additive_identity), -product(_3,_5,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_2,_0), -product(_4,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_0,c,_2)]
[-product(_0,_1,additive_identity), -product(_0,_1,add(d,c))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(_3,c),_3), -product(_0,add(_3,c),d), -product(_4,_0,_2), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,c,c)]
[-product(d,d,c), -product(_0,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(c,_2,_0)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(add(_1,c),_2,_1), -product(c,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(additive_inverse(_0),_1,_0), -product(_2,additive_inverse(_0),d), -product(d,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_0,_2)]
[-product(additive_identity,_0,c), -product(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_3,additive_identity,add(_1,c)), -product(_3,_2,d), -product(add(_1,c),_3,add(_1,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_inverse(c),_2), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(d,_1),d), -product(c,_2,_2), -product(_3,_2,c), -product(_3,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,d,add(_0,_0)), -product(add(_0,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_inverse(c),_2), -product(_0,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_1), -product(_1,add(_1,_2),c), -product(_1,_0,d), -product(_3,_1,_0), -product(_3,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_4,_1), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(_0,_1,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_1,d,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(d,_2,additive_identity)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,add(d,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,d), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(d,d,d), -product(d,d,add(_2,_1)), -product(add(_2,_1),d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_0,add(d,additive_identity),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,add(_2,c),_2), -product(c,add(_2,c),d), -product(_3,c,_0), -product(_3,d,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(c,d)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,additive_identity,c), -product(_2,_5,_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,d), -product(_2,d,additive_identity), -product(d,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(_0,_5,_2)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),add(c,_1),c), -product(c,add(c,_1),_2), -product(_2,add(c,_1),d), -product(add(c,_1),c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_0,add(_0,_1),add(_0,_1)), -product(_0,_2,d), -product(_2,add(_0,_1),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,add(_2,c),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),_2), -product(_2,add(_0,_1),c), -product(c,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(_3,_0,c), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,d)]
[-product(add(additive_identity,_0),_0,c), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),d)]
[-product(d,_0,c), -product(d,d,d), -product(d,add(d,c),_1), -product(d,_1,additive_identity)]
[-product(_0,d,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_1,_2), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_1,_2,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_0,_1)), -product(_2,_0,_0), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,additive_identity), -product(d,_0,d), -product(c,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_4,c), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,d), -product(c,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(c,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_0,add(d,c),_1), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,add(_0,_1),_0), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(add(d,_2),add(d,_2),_3), -product(add(d,_2),_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,_2), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(c,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_2,d), -product(_0,c,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0), -product(_3,_2,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_0,add(c,_1)), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_0,additive_inverse(_0)), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_6,add(_3,_1)), -product(_1,_6,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,additive_identity,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),d), -product(_3,_2,add(_2,c)), -product(_3,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,_0), -product(_1,c,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,d,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,d,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_1,add(d,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_4,_4,_2), -product(_4,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,additive_identity,add(_2,c))]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(c,_1,_0), -product(_0,c,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(additive_identity,_1,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,c,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(d,d,d), -product(d,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_1,_0), -product(c,d,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,c,c), -product(_4,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,_1,additive_identity), -product(_4,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,d), -product(_0,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_3,d), -product(additive_identity,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_1,_1,_1), -product(_1,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_0,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,add(_1,additive_identity))]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_2,_4,add(_3,c)), -product(_1,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(_0,add(_0,d),additive_identity)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_3,additive_identity), -product(_2,_1,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_inverse(c)), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,_1), -product(c,_0,c), -product(c,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(add(_1,d),_0,_1), -product(_1,_0,c), -product(add(_1,d),add(_1,d),_0), -product(_2,add(_1,d),add(_1,d)), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_2,_1,_1)]
[-product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,add(_1,d),_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,additive_identity), -product(_2,_3,c), -product(c,_3,d), -product(_2,_2,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_inverse(d)), -product(c,_1,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,c), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,c,_4), -product(_3,_6,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(add(_2,c),d,_2), -product(_1,add(_2,c),_1), -product(_3,_1,_1), -product(_3,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,add(d,_2),_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,additive_identity,_1), -product(_1,c,d), -product(_2,additive_identity,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(_5,add(_0,_1),add(_0,_1)), -product(_5,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_2,_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(_2,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_2,additive_identity,c), -product(c,_2,_1)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,d,_0), -product(_0,d,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(c,c,c), -product(c,add(d,c),d), -product(c,d,additive_identity)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,add(d,additive_identity),additive_identity), -product(add(d,additive_identity),_0,d), -product(d,add(d,additive_identity),c), -product(add(d,additive_identity),add(d,additive_identity),add(d,additive_identity)), -product(_0,add(d,additive_identity),add(d,additive_identity))]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(_0,_0),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(add(d,_0),add(d,_0),c), -product(add(d,_0),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,_0), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_0,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_1,_0), -product(c,_2,c)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(_2,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_5,_3,_2), -product(_5,additive_identity,d), -product(_6,_4,add(_4,c)), -product(_2,_6,_3)]
[-product(add(_0,_1),_1,c), -product(_2,_0,_3), -product(_1,_2,add(_0,_1)), -product(_1,_3,d), -product(c,_2,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(_0,add(c,d),c), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,c),additive_identity), -product(d,_4,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_4,_0), -product(_0,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_0,add(additive_identity,_0))]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_1,c,additive_identity), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(c,_1,c), -product(c,additive_identity,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(add(d,c),_2,d), -product(_1,_1,_3), -product(_3,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(c,c,add(c,_1))]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_7,_8,add(_5,c)), -product(_2,_7,_9), -product(_9,_8,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(c,c,add(c,c))]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_inverse(_0),_1), -product(_2,_1,d)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,add(d,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_0,_4), -product(_0,_4,additive_identity)]
[-product(add(c,c),_0,c), -product(_0,add(c,c),add(c,c)), -product(_0,add(c,c),_0), -product(_0,_0,d), -product(d,add(c,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_1,add(d,_2),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_1,_4,add(d,_1)), -product(c,_4,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(d,add(additive_identity,c),additive_identity), -product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,d,additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_0,c,_0)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(_0,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),d), -product(_0,add(additive_identity,c),add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,d,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_0,additive_identity), -product(_1,_2,c)]
[-product(_0,d,additive_identity), -product(_0,_0,_0), -product(_0,d,c), -product(_0,_1,d)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,add(_0,d),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(c,c,_1), -product(c,_1,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(d,add(_0,d),_0), -product(add(_0,d),d,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(add(_0,d),_0,d), -product(add(_0,d),add(_0,d),additive_identity), -product(additive_identity,_0,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(c,add(_3,_1),additive_identity)]
[-product(c,additive_identity,c), -product(d,add(_0,additive_identity),_0), -product(c,d,additive_identity), -product(additive_identity,add(_0,additive_identity),d)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(_0,add(c,c),c), -product(_0,c,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_4,add(d,_1)), -product(_1,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(_0,_1,add(c,c)), -product(d,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_1)]
[-product(_0,c,c), -product(c,_1,d), -product(add(d,c),add(d,c),_0), -product(add(d,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),_2,d), -product(c,add(d,_1),add(d,_1)), -product(_3,c,c), -product(_3,add(d,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,_2,add(_1,c)), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_0), -product(c,_2,_0)]
[-product(_0,d,c), -product(_1,_1,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,d), -product(_2,_3,additive_identity), -product(additive_identity,_1,d), -product(_4,_3,c), -product(_2,_4,_2)]
[-product(_0,_1,additive_inverse(_2)), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_2,d), -product(_1,_0,_2), -product(_2,_1,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(add(c,_1),add(c,_1),c), -product(add(c,_1),c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,_2), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,d,c)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,_1), -product(c,_0,c), -product(c,add(_1,d),_2), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(add(_0,additive_identity),_0,add(_0,additive_identity)), -product(_1,add(_0,additive_identity),d), -product(d,_1,d)]
[-product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(c,c,_1), -product(c,_1,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_inverse(_1)), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_3,_4,add(c,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_1,d), -product(_2,_3,_0)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,_2)]
[-product(_0,d,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_2,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_inverse(d),_0), -product(_0,_1,c)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,d,c), -product(d,c,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_0,add(c,c)), -product(add(c,c),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,_0,add(_2,d)), -product(add(_2,d),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_0), -product(_0,_3,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_3,d), -product(_2,_2,_4), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,add(d,c)), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_2,d,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(c,_4,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,add(c,c),d), -product(_1,c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,d,c), -product(d,c,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,c)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(add(d,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,_3,d), -product(_0,_1,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_0,_4,add(_3,_1)), -product(c,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_2,_0), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_1,d), -product(_2,additive_identity,additive_identity), -product(_3,additive_identity,c), -product(_2,_3,_2)]
[-product(_0,_0,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_0,d,_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,additive_identity,additive_identity), -product(_2,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,additive_identity,add(additive_identity,c)), -product(_1,_3,_1)]
[-product(d,_0,additive_identity), -product(c,d,d), -product(d,_0,c), -product(_0,add(d,additive_identity),_0)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,_0,_1), -product(_5,c,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(add(d,c),_0,_0), -product(_2,d,d), -product(_2,_2,add(d,c)), -product(add(d,c),_2,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,d,additive_identity), -product(_0,additive_identity,d), -product(_1,d,_0), -product(c,_1,c), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(_0,_2,_0), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(additive_identity,c),additive_identity), -product(_2,_2,_3), -product(_3,add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,c,d), -product(_1,_0,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,d,d), -product(_1,_1,c), -product(c,_2,add(d,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_0,d), -product(_0,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,_0), -product(_0,d,c), -product(_0,_0,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,add(_2,c),_2), -product(_1,_3,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,additive_identity,d), -product(additive_identity,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_5,_3,_2), -product(_5,additive_identity,d), -product(_6,add(_4,c),_4), -product(_3,_6,_2)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(_1,_2,add(_0,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),_0), -product(_4,_3,d), -product(_5,_4,_0), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_0,add(_4,_1)), -product(add(_4,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,c), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,d), -product(d,_1,d), -product(_1,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_7,add(_5,c),_8), -product(_9,_7,_2), -product(_9,_8,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,add(_4,_1),_2)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(d,d,d), -product(d,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_3,_4,add(_1,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_1,add(_3,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,add(_0,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,_1), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,_4,additive_identity), -product(_5,_0,_4)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,additive_identity), -product(c,_2,_3), -product(_3,_3,d), -product(c,_2,c), -product(c,additive_identity,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d), -product(_1,_3,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_4,add(_2,_0)), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,add(_2,_0)), -product(_0,_1,c), -product(_0,add(_2,_0),d), -product(c,d,additive_identity)]
[-product(_0,d,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(_1,additive_identity,c), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,add(_0,additive_identity)), -product(c,_2,_0)]
[-product(c,_0,c), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,c,_1), -product(_2,_0,_0)]
[-product(_0,c,c), -product(c,_1,d), -product(_0,_0,add(d,c)), -product(add(d,c),_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(_1,c),_1), -product(_0,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(_0,add(_0,c),d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,add(_2,_0)), -product(c,_1,c), -product(c,add(_2,_0),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(c,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,d), -product(d,_2,d), -product(_2,add(d,c),_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,additive_identity), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(_3,d,additive_identity), -product(additive_identity,_3,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,_0), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,d,additive_identity), -product(additive_identity,_2,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_0,_7,add(_4,c)), -product(_0,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,_1), -product(c,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(c,add(_3,_1),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_4,_5,add(c,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_2,add(_1,c)), -product(_0,_2,additive_identity)]
[-product(c,d,c), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,c,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,c,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_0,add(c,d),_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,_0,_1)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_1,_1,add(additive_identity,_0))]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_0,d), -product(_0,_0,_1)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(add(d,_0),d,d), -product(add(d,_0),add(d,_0),c), -product(add(d,_0),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,_4,additive_identity), -product(_1,_6,_1), -product(_7,_0,_4)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(_1,additive_identity),_2,_1), -product(_0,add(_1,additive_identity),_0), -product(_0,_2,d), -product(_0,_0,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(c,_0)), -product(add(c,_0),c,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,c,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_0,c,add(_1,additive_identity))]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,d), -product(c,_0,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,additive_identity), -product(additive_identity,add(c,c),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,additive_identity,d), -product(_1,c,c), -product(_0,_1,c)]
[-product(c,c,_0), -product(d,c,additive_identity), -product(additive_identity,c,c), -product(d,c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(_0,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),d,d), -product(d,add(d,c),add(d,c)), -product(add(d,c),add(d,c),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_2,c,_3), -product(_1,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_0,add(_2,_1),_4), -product(c,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),d,d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),add(d,_0),additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_0,c)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(add(c,c),_0,d), -product(_2,_1,_1), -product(_2,add(c,c),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(c,_1,d), -product(c,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_0,_1,_0), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(_0,_0)), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_6,_2), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_0,_4,add(_1,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,c), -product(_0,add(additive_identity,_0),additive_identity), -product(c,add(additive_identity,_0),d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(c,_3,c), -product(_4,_2,_1)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(d,d,_1), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(_1,_2,d), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,c), -product(c,_3,_1)]
[-product(_0,_1,c), -product(_2,_2,d), -product(_0,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,_0,_1), -product(c,c,_2), -product(_2,_0,c), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(c,_0,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,_0,d), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_0,_3), -product(c,_5,_0)]
[-product(_0,_1,c), -product(add(_0,_1),_0,_0), -product(_0,add(_0,_1),_2), -product(_2,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(add(d,_0),c,_0), -product(c,add(d,_0),d), -product(d,c,c), -product(c,c,c), -product(d,d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_4,add(_0,_2),_5), -product(_6,_4,_3), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_4), -product(_5,_2,d), -product(_5,_4,d), -product(_4,add(_3,c),_6), -product(_5,_6,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_0,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,d), -product(d,_1,c), -product(_0,add(_0,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_2,_2,add(_5,c)), -product(add(_5,c),_2,additive_identity)]
[-product(d,_0,c), -product(add(_1,c),d,d), -product(_2,_1,d), -product(add(_1,c),_2,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,_4,add(d,_2)), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_0,_0,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,add(d,additive_identity),c), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,c,c), -product(_1,_2,_0)]
[-product(_0,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_0,_1,_0), -product(_0,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,_0,_3), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(c,c,d), -product(_2,_3,c)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,_1),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(c,_1,c)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(c,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,_0,d), -product(c,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,additive_identity,d), -product(c,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_0,_1), -product(_2,additive_identity,_0), -product(_2,_1,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_0,add(d,_0)), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_4,add(_3,_2)), -product(_3,_4,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,c,_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,c,_3), -product(_3,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,add(_0,additive_identity)), -product(d,d,c), -product(d,add(_0,additive_identity),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,add(additive_identity,_1),c), -product(c,_2,c)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,additive_identity,d), -product(c,add(_0,c),_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(add(d,c),_1,d), -product(_0,add(d,c),add(d,c)), -product(c,add(d,c),additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,c,_2)]
[-product(_0,_1,c), -product(c,_0,_0), -product(add(_2,c),_2,_3), -product(_1,add(_2,c),c), -product(_1,_3,d), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,d), -product(_0,c,_1), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,_4,add(_0,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(_0,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_3,_0), -product(_2,_2,_4), -product(_4,_3,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_0,_0,_5), -product(_5,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_1,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,additive_identity)]
[-product(_0,d,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,additive_identity,_1), -product(_1,_2,c)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,add(_1,_0),_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,_2), -product(_2,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,_4), -product(_5,_2,additive_identity), -product(_5,_4,d)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_0,add(_1,c)), -product(add(_1,c),_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(add(_0,_1),_0,_1), -product(_0,add(_0,_1),_0), -product(_0,_0,c), -product(c,add(_0,_1),d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,d,_1), -product(_2,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,add(c,_1),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(c,_2,_0), -product(c,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(c,add(_1,_1),additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(c,_0,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(_2,add(d,_1),_0), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),_1,add(_1,c)), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(_0,_2,c)]
[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_3,_3,_2), -product(_3,add(_4,c),d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,add(additive_identity,c),_4), -product(_3,_6,_2)]
[-product(d,c,d), -product(d,d,additive_identity), -product(additive_identity,c,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(_2,add(_0,c),c), -product(_2,c,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(add(d,_0),_1,d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,_1,c), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_0,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,_1), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(c,d,d)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,_2,add(_0,c)), -product(add(_0,c),_2,additive_identity)]
[-product(c,c,c), -product(c,_0,d), -product(_0,_1,add(d,c)), -product(d,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(d,d)), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,add(c,_1),additive_identity)]
[-product(_0,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_1,add(c,_0),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_3,_2,_1), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,d), -product(d,_1,c), -product(_0,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(add(_2,d),add(_2,d),c), -product(add(_2,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,_2,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,add(_3,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,additive_identity,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,additive_identity,c)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,add(_1,_0)), -product(c,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_0), -product(c,_2,c), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_1,_2,add(d,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,d)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_1,_6,add(_4,c)), -product(c,_6,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_4,add(_2,c),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_0,_6), -product(_6,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_2,add(_0,_1),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,_2), -product(_2,add(d,c),_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_2,additive_identity), -product(_2,c,_3), -product(_3,_2,d), -product(c,c,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,c), -product(additive_identity,_2,c)]
[-product(_0,additive_inverse(c),c), -product(_0,_0,_1), -product(_1,additive_inverse(c),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,_4), -product(_5,_0,_4)]
[-product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,c,d), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,add(additive_identity,_0),_1)]
[-product(d,_0,c), -product(c,d,d), -product(_1,additive_identity,d), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,additive_identity,d), -product(additive_identity,_1,add(_1,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_5), -product(_5,add(_4,c),d), -product(_6,_5,_2), -product(_6,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_0,_0,_4), -product(c,_4,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,additive_identity), -product(c,_1,c), -product(_0,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,d), -product(d,_1,c), -product(_1,add(_0,_2),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,add(_1,additive_identity),d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,add(d,d),add(d,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(_1,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_1,add(d,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(c,_4,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(_0,d,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,c,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_1,_6,add(_3,c)), -product(c,_6,additive_identity)]
[-product(additive_identity,d,c), -product(d,additive_identity,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,d), -product(d,_0,c), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(additive_identity,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_0,_5), -product(_5,_0,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,_0,additive_identity), -product(d,additive_identity,d), -product(d,_1,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,add(_0,additive_identity),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,c,d), -product(_3,_4,c)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_3,add(_1,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_0,c),_0), -product(_0,_0,additive_identity), -product(additive_identity,add(_0,c),d)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(c,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,_1), -product(d,d,d), -product(d,_2,add(_1,_0)), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,add(_2,c),_2), -product(c,add(_2,c),d), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(d,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,d), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(c,c,c), -product(c,add(_0,c),_0), -product(c,add(_0,c),d), -product(c,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,add(_2,c)), -product(_2,_3,add(_2,c)), -product(_2,add(_2,c),d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(add(_2,c),d,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,d), -product(_1,_2,_2), -product(_3,additive_identity,d), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(c,_4,c), -product(_5,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,c,_2)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(add(c,_1),_2,c)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(c,_1,c)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(d,_1,_0), -product(_1,d,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(add(_1,_0),add(_1,_0),c), -product(add(_1,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,d,_1), -product(c,_4,_2), -product(_3,_5,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_1,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,c,d)]
[-product(c,additive_identity,c), -product(_0,d,d), -product(_0,_0,c), -product(additive_identity,d,_1), -product(c,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(_1,d,d), -product(_1,_1,d), -product(_1,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,_2,_5), -product(c,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(_3,additive_identity,d), -product(_4,_2,add(_2,c)), -product(d,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,_2), -product(_3,c,c), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,_1,add(d,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,add(_1,_2),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_3,add(c,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(_0,_0,add(_0,_1))]
[-product(add(c,_0),_0,c), -product(c,c,additive_identity), -product(_0,c,add(c,_0)), -product(_0,additive_identity,d)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,c,c)]
[-product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,add(_1,additive_identity)), -product(_1,_2,_0)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_3,_2,_1), -product(_3,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,add(additive_identity,additive_identity)), -product(add(additive_identity,additive_identity),_0,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_2,_1),_2), -product(_0,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_2,_1,c), -product(_2,c,d), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(add(d,d),add(d,d),c), -product(add(d,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_5,_3), -product(additive_identity,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_0,_5,_4), -product(_3,_5,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_4,add(d,_2),_5), -product(_6,_4,_3), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(c,additive_identity,c)]
[-product(_0,_1,c), -product(c,d,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,d,_1), -product(_2,_3,_1)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,d), -product(_2,_2,c), -product(_1,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,_1),_3), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),d,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(_3,add(_0,_1),_4), -product(_4,_2,c), -product(_3,_0,d), -product(_5,_3,_3), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_1,_0), -product(_4,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_0,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_0,add(_0,c),additive_identity)]
[-product(additive_identity,_0,_1), -product(c,additive_identity,d), -product(d,_0,c), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_5,_6,add(d,c)), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_0,_1,_0), -product(_2,_0,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(d,c,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_2,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),d,_1), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_2,additive_identity), -product(_2,additive_identity,d)]
[-product(_0,_1,_2), -product(_0,_0,add(_3,_2)), -product(add(_3,_2),_1,c), -product(_0,_3,d), -product(add(_3,_2),_0,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,add(additive_identity,_0))]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_0,_3,_0), -product(d,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_3,add(_2,d),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_3,add(_0,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,_0,d)]
[-product(_0,_1,c), -product(_0,_2,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,add(c,c)), -product(add(c,c),_0,d), -product(_1,_1,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,_1,add(d,c)), -product(add(d,c),_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,c,_1), -product(_1,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,add(c,_1)), -product(add(c,_1),_1,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(_2,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,_0,d)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_0,_1,d)]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,_5,c), -product(_2,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_3,_2,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,_1,_0)]
[-product(add(d,_0),_1,_0), -product(_2,add(d,_0),d), -product(d,_1,c), -product(_2,_2,_2), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_2,_0,additive_identity), -product(c,_2,c), -product(_1,_3,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,d,add(d,c)), -product(add(d,c),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(c,c,additive_inverse(_0)), -product(additive_inverse(_0),c,c), -product(c,_0,_1), -product(additive_inverse(_0),_1,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,add(additive_identity,c),d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_3,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_3,add(c,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,add(_2,c),_5), -product(_0,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_2,c), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,additive_identity,c), -product(_2,_4,_2), -product(_5,_3,c)]
[-product(_0,additive_inverse(_1),c), -product(additive_inverse(_1),_2,_1), -product(c,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,c), -product(c,c,add(c,c)), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,add(_0,c),additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,d), -product(d,additive_identity,c), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(add(additive_identity,_1),add(additive_identity,_1),_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,d)]
[-product(_0,additive_identity,c), -product(additive_identity,additive_identity,_0), -product(c,additive_identity,d), -product(additive_identity,_1,_1), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,add(_1,additive_identity),c)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,d,_0), -product(_1,_0,c), -product(_1,_0,d), -product(c,c,_0), -product(additive_identity,_0,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,c,add(c,c)), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,_3,add(d,_2)), -product(add(d,_2),_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(_1,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,add(_2,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_2), -product(_5,_3,_2), -product(_5,_2,d), -product(_4,add(_4,c),_6), -product(_3,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_3,add(c,c),_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_1,_0,d)]
[-product(_0,add(_0,_1),_1), -product(d,_0,d), -product(d,add(_0,_1),c), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(d,_1),d), -product(c,_0,_0), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_6,_7,add(_5,_2)), -product(_3,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,d,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(d,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_0,_2), -product(_0,_5,_0)]
[-product(d,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,d), -product(_3,_2,d), -product(_2,_1,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_4,_0,_0), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,additive_identity), -product(c,_2,c), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(d,d,_0), -product(d,_0,d), -product(_1,d,additive_identity), -product(_0,_1,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(add(_2,d),add(_2,d),_0), -product(add(_2,d),_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,additive_identity), -product(_1,_2,_3), -product(_3,_0,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,c,add(d,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,additive_identity,_4), -product(_1,_6,_1), -product(_7,_0,_4)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,d)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_2,_0,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,c), -product(c,_0,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,d,_1), -product(_0,_4,_2), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_4,add(_1,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_4,c), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(add(d,_0),add(d,_0),d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_0,additive_identity), -product(c,_0,add(additive_identity,_0)), -product(add(additive_identity,_0),_0,d)]
[-product(_0,add(additive_identity,c),c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(c,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,add(_3,c),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,_1,add(c,_0)), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,c), -product(_1,_2,c), -product(_1,c,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(c,d,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(d,additive_inverse(_0),c), -product(_1,_0,_1), -product(_2,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_2,_0,_4), -product(_4,_3,d), -product(_0,_3,add(additive_identity,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,add(c,c),_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(d,add(_2,c),d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,_2,add(_2,c)), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,_2,add(c,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,c,d), -product(add(c,c),_0,additive_identity)]
[-product(c,d,c), -product(c,c,additive_identity), -product(additive_identity,d,d)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_0,_1), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_3,_1), -product(_0,_3,d), -product(_4,_0,_2), -product(_4,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(d,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_1,_2,_2), -product(_1,_2,_1), -product(_3,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,d,_0), -product(_0,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_2,add(_3,c),_4), -product(d,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,additive_identity,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_1,c,c)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_2,_0), -product(_4,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,d,d), -product(additive_identity,d,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,d), -product(d,_1,_1), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,c), -product(c,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,c), -product(_0,d,add(_0,d))]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,d), -product(c,_1,_0), -product(_0,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_1), -product(_1,add(_1,_2),c), -product(_1,_0,d), -product(_3,_0,_0), -product(_3,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(_1,_0,c), -product(_1,c,d), -product(c,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_5,c), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(_0,d,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_0,_3), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(c,_1,_2), -product(_2,additive_identity,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(add(d,_0),_1,d), -product(c,add(d,_0),add(d,_0)), -product(_0,add(d,_0),additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_1,_0,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,c), -product(d,_4,d), -product(_4,add(_4,_2),_5), -product(d,_5,additive_identity)]
[-product(c,_0,c), -product(_0,c,additive_identity), -product(c,_0,_0), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(d,d,add(_3,c)), -product(add(_3,c),d,additive_identity)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_0,c,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,c,d), -product(c,add(_0,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(_1,_0,d), -product(_0,add(_0,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,add(d,additive_identity),_0), -product(_0,_3,c)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(additive_identity,c,c), -product(d,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,d)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,add(_0,c))]
[-product(add(d,_0),_1,_0), -product(_2,add(d,_0),d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_2,_2), -product(_3,d,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_2,_4), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,c), -product(_4,_2,c), -product(_4,c,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(d,additive_identity,additive_identity), -product(additive_identity,d,d), -product(d,d,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_3), -product(d,_1,_4), -product(_4,_2,d), -product(_2,add(_3,_0),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,add(_2,c),_2), -product(add(_2,c),_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(d,_3,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,d,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_2,d), -product(_1,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_3,_2), -product(c,add(_2,_1),_4), -product(_4,_3,d), -product(_5,c,c), -product(_5,_4,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,add(_0,additive_identity),_0), -product(c,_1,_2), -product(_2,add(_0,additive_identity),d), -product(_0,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,d), -product(_3,add(c,_1),_5), -product(_2,_5,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,_2), -product(_2,add(_1,_0),d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(c,c,d), -product(c,c,c), -product(_0,add(c,d),_1), -product(_2,_0,c), -product(_2,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,c,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(d,_0),d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_0,add(c,_1)), -product(add(c,_1),_0,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(_0,c,additive_identity), -product(_0,_0,add(c,_0)), -product(_0,additive_identity,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,d), -product(_0,additive_identity,add(c,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(c,_5,c)]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,c,_3), -product(_2,_5,_2)]
[-product(_0,d,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_2,add(_1,_1),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_0), -product(c,_0,_2), -product(_2,_1,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(c,c,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_1,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_0,_3,add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,add(d,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),add(additive_identity,c),_1), -product(_1,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_4,_2), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_3,_3,c), -product(_3,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(d,_0)), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_3), -product(_3,_0,d), -product(c,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,c)), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,add(_4,_1))]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_3,d), -product(_0,_3,_4), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(d,_1),d), -product(c,c,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,add(_3,c)), -product(add(_3,c),_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,d,_0), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,add(_1,additive_identity)), -product(add(_1,additive_identity),_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(c,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,add(_2,additive_identity),_0), -product(_0,_3,c)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,add(_0,additive_identity),c), -product(additive_identity,add(_0,additive_identity),d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_2,_1,_1), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(add(_0,_0),add(_0,_0),c), -product(add(_0,_0),c,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,_0,_1), -product(_2,c,c), -product(_2,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,add(additive_identity,c))]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_0)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(d,_2,additive_identity)]
[-product(d,c,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,d,_2), -product(_2,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,d)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,d), -product(_3,_0,add(c,c)), -product(_2,_3,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,additive_identity,d), -product(_1,c,c), -product(c,_1,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_1,_2,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,d), -product(additive_identity,_2,d), -product(_3,_2,_0)]
[-product(d,d,_0), -product(d,d,_1), -product(_1,d,c), -product(_0,d,d), -product(d,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,additive_identity), -product(c,_2,_1), -product(_1,c,d), -product(c,_2,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,c,_3), -product(_0,_4,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_3,add(_1,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_1,_1,_2), -product(_2,_0,d), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_4,_5,add(_0,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,d,d), -product(_1,_1,c), -product(c,add(d,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,d,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,_0,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_0,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(d,d,c), -product(d,d,d), -product(_0,add(c,d),_1), -product(_2,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1), -product(_3,_5,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_3,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,c), -product(c,_2,d), -product(_2,add(c,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_3,add(_1,_2)), -product(_1,_3,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(additive_identity,_1,c)]
[-product(d,additive_identity,c), -product(_0,c,_0), -product(_1,_0,d), -product(d,d,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(add(d,c),_1,d), -product(c,add(d,c),add(d,c)), -product(_0,add(d,c),additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,c,additive_identity), -product(_0,_0,_1), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_inverse(_1)), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(d,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,c,add(additive_identity,_1)), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(add(_1,_2),add(_1,_2),_1), -product(add(_1,_2),_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(add(d,c),_2,d), -product(_3,_1,_1), -product(_3,add(d,c),additive_identity)]
[-product(_0,d,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,additive_identity,add(d,c)), -product(_1,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_1), -product(c,c,_0), -product(_0,_2,add(_1,d)), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_0,additive_identity,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,_1,d), -product(add(d,c),_0,_0), -product(c,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_2), -product(_1,_3,_0)]
[-product(_0,c,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,add(_0,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_3,add(d,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,add(_3,_1),additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,_0)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(additive_identity,_1,_1), -product(_3,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(additive_identity,_0,d), -product(c,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,d,c), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,d,c), -product(d,_3,additive_identity), -product(_2,_4,c)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),add(_0,_1),_0)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,d,_1), -product(additive_identity,_1,additive_identity)]
[-product(additive_inverse(c),_0,c), -product(_1,additive_inverse(c),additive_inverse(c)), -product(_2,_1,_1), -product(_2,additive_inverse(c),d)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,_4,d), -product(_0,add(_4,_2),_5), -product(_3,_5,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,c,additive_identity), -product(d,_3,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,additive_identity,add(c,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_1,_1,d), -product(_1,_1,_1), -product(d,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,additive_identity), -product(_2,_3,c), -product(c,_2,d), -product(_2,_3,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_3,add(c,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_4,_5,add(_3,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(d,_1,d), -product(_0,d,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,add(d,additive_identity),c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_4,_5,add(d,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_0,add(d,_1),_4), -product(c,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(d,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,d), -product(d,d,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_1,_0,d), -product(_0,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_inverse(d)), -product(_0,_1,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(c,_2,_0), -product(add(_0,_1),c,additive_identity), -product(additive_identity,_2,d), -product(add(_0,_1),_1,add(_0,_1))]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),c,d), -product(add(_0,c),add(_0,c),_1), -product(_1,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_inverse(_1),_2), -product(c,_2,d)]
[-product(c,_0,c), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1), -product(_2,_0,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_2,_2,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,c,additive_identity), -product(d,_0,_0), -product(d,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(additive_identity,_0,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,c,add(c,c)), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(c,c,_1), -product(_1,c,d), -product(additive_identity,c,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,c,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,d,add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_0,add(_3,_1),_4), -product(c,_4,additive_identity)]
[-product(d,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,c,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,d,add(_0,d)), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,_0,_3), -product(_3,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),d), -product(_3,add(_2,c),add(_2,c)), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_0)]
[-product(_0,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,_0), -product(_0,_3,_1)]
[-product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,add(_2,_0),_5), -product(c,_5,additive_identity)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_0,_3,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,d), -product(d,_1,_1), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(_3,add(_2,c),d), -product(_4,_3,d), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_3,_4,c), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(d,additive_identity,d), -product(d,d,_0), -product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,c,_5), -product(_0,_5,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_1), -product(_2,_0,d), -product(_2,_1,d), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(c,add(c,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_2,_3,add(d,_0)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_0,_2), -product(c,_5,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,add(_2,additive_identity),d)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_0,additive_identity,d)]
[-product(add(d,c),_0,c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,add(d,c)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(add(_1,_0),add(_1,_0),d), -product(add(_1,_0),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_0,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,d), -product(add(_0,_0),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,additive_identity), -product(additive_identity,c,d)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(_0,d,_1), -product(_0,_1,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,additive_identity,_1), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_inverse(_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_1,_1,_2), -product(_1,_2,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_1,_0), -product(_0,_3,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_0), -product(_3,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_inverse(c),d)]
[-product(d,_0,c), -product(_1,_1,d), -product(d,_1,d), -product(_1,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_0,_4,add(_2,_1)), -product(c,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(additive_identity,_1,c), -product(_1,_1,d), -product(_1,d,_0), -product(_1,_1,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,additive_identity,_0), -product(_0,d,c), -product(c,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,d), -product(d,d,_0), -product(_1,d,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_0), -product(_0,_1,d), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_3,_4), -product(_4,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_0,_1,_0)]
[-product(_0,_0,c), -product(c,_0,d), -product(_1,_2,add(c,_0)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,add(_1,_0))]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(add(_0,d),_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,c),_4), -product(d,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,d), -product(d,additive_identity,_1), -product(_1,_0,c), -product(d,additive_identity,d), -product(_0,_1,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,c,d), -product(_1,additive_identity,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(add(d,c),add(d,c),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_3,_0), -product(add(_0,_1),_2,_4), -product(_4,_3,d), -product(_5,_1,add(_0,_1)), -product(_5,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_3,add(_3,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),c), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,_1), -product(_3,_1,d), -product(_0,_4,add(_2,c)), -product(c,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,d,additive_identity), -product(_0,d,c), -product(_0,additive_identity,d), -product(c,d,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,d), -product(d,_2,_2), -product(_3,add(d,c),_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,c,_2), -product(_4,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,c,d)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(add(d,c),add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,additive_identity,_0), -product(_1,_3,_1), -product(_4,_0,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_4), -product(_4,c,d), -product(_5,_4,_2), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(d,_1,d), -product(_0,d,_2), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,_0), -product(_2,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,_0,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,_3,additive_identity), -product(_5,_0,_3)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_2,c,_3), -product(_1,_3,additive_identity)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,add(d,_0),additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_0,d), -product(_1,_2,_1)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(_3,d,d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,c), -product(_2,c,_2), -product(_2,c,d), -product(d,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_3,_4,c), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_4,_0), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_4,_2), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,_1), -product(d,additive_identity,d), -product(d,_0,c), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,c), -product(c,_0,d), -product(c,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,d), -product(_1,add(additive_identity,additive_identity),_0), -product(_0,_1,c)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_0,additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_1,_3), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,_0), -product(_0,add(_0,_1),_2), -product(_2,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_4,_5,add(d,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(d,d,additive_identity), -product(additive_identity,_2,d), -product(_2,d,c), -product(_3,_2,c)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_0), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_0,_0,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_1), -product(c,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(c,_1,_0), -product(_0,c,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(_1,add(_0,d),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(d,_0,d), -product(d,d,_1), -product(_1,_0,c), -product(_0,add(_0,d),_2), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_0), -product(_0,_2,_4), -product(_4,_3,d), -product(_3,add(_0,_1),_5), -product(_2,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_2,_3,c), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,add(c,d),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_1), -product(_1,add(additive_identity,c),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_2,_2,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(_2,_0,d), -product(_1,_2,_1), -product(_3,d,_1), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(c,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,add(_0,d),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_inverse(_0)), -product(_0,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_0,_1,_0), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(c,additive_identity,d), -product(c,c,_0), -product(_0,additive_identity,c), -product(additive_identity,d,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_2,_1,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,_1,add(c,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,_1), -product(c,_0,_1), -product(_1,_1,c), -product(c,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_2,c,c), -product(_2,_1,d), -product(_1,_0,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,_0,add(_0,_1)), -product(_0,_2,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,_1,d), -product(_1,_1,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,additive_identity,add(additive_identity,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,add(_2,c),_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,c)), -product(d,_2,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_0,_0,add(_0,additive_identity)), -product(_0,add(_0,additive_identity),d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,_1,d), -product(d,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(additive_inverse(d),additive_inverse(d),d), -product(d,additive_inverse(d),c)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_4,_1), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(d,d,d), -product(d,d,_0), -product(_1,_0,additive_identity), -product(_0,_1,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,_2), -product(_2,_1,c), -product(d,_3,d), -product(_3,_3,_4), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,c,d), -product(_0,_3,add(_1,c)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_1,add(_3,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,additive_identity,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),_2), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),c,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,c,d), -product(add(additive_identity,_1),add(additive_identity,_1),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,_1,d), -product(_2,_3,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_0,_1), -product(_1,c,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_2,d), -product(_1,_3,_4), -product(c,_4,additive_identity)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,c,additive_identity), -product(d,_2,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_4,add(_3,c),_5), -product(_6,_4,_1), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_1,_4,add(_3,c)), -product(c,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,add(additive_identity,c),d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(_1,_1),_0), -product(_0,_2,_0)]
[-product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,c), -product(_0,add(_0,d),d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,d,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(_2,_1),_2), -product(c,c,c), -product(c,add(_2,_1),d), -product(c,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_4,d), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_3,_0,_2), -product(_3,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_1,_1,c), -product(_2,_2,d), -product(_2,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_2,_3,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,add(d,c),d), -product(c,_1,_1), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,additive_identity), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,_5,_3), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_6,add(_4,_1)), -product(_1,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(additive_identity,_3,c), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_0,d,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,add(d,d),c), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_0,add(_1,additive_identity))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_1,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,c,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(c,_1,d), -product(c,c,c), -product(c,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,_3,add(_2,d)), -product(d,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_2,_5,add(_3,_1)), -product(_0,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_1,_1,_2), -product(_2,_0,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(_3,c,c), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,add(additive_identity,c)), -product(_2,_3,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_0,_1,_1), -product(_0,_1,_0)]
[-product(c,c,c), -product(_0,c,d), -product(c,_0,additive_identity), -product(additive_identity,c,d), -product(c,_0,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_1,_2,add(d,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(_1,additive_identity),additive_identity), -product(_0,_0,_2), -product(_2,add(_1,additive_identity),c), -product(_0,_1,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_3,_4,add(_2,d)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(c,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(_0,c)), -product(c,_1,additive_identity)]
[-product(_0,d,c), -product(c,_0,_0), -product(d,d,additive_identity), -product(_0,additive_identity,d), -product(c,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_3,_4,add(_1,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,c), -product(_5,d,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,d,_0), -product(_0,_2,_0), -product(_0,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,d), -product(additive_identity,_2,_2)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,d), -product(_1,additive_identity,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(additive_identity,_1,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),_3), -product(_3,add(_2,c),d), -product(_3,_2,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(_1,d,d), -product(d,_1,_1), -product(_1,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,additive_identity,c), -product(d,_2,d)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(c,add(_1,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(c,_1,c)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),c,d), -product(_1,add(_0,c),add(_0,c)), -product(_1,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_1), -product(_0,_2,d), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,d,additive_identity), -product(_0,_0,_2), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,add(_1,additive_identity)), -product(_2,_0,c), -product(_2,add(_1,additive_identity),d), -product(d,_2,c)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(_0,c,d), -product(d,_1,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_1,d,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_3,add(_0,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,d,_2), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,_0), -product(_2,_1,_0)]
[-product(_0,_1,c), -product(additive_inverse(_1),additive_inverse(_1),_0), -product(additive_inverse(_1),_0,d)]
[-product(_0,c,c), -product(c,c,additive_identity), -product(c,c,d), -product(_0,_0,c)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_1,_1,_1), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_2), -product(_3,add(_3,c),_2), -product(_3,_2,d), -product(add(_3,c),_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,additive_identity,_0), -product(_2,_1,d), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,c,additive_identity), -product(d,_2,c), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(add(_2,d),add(_2,d),_1), -product(add(_2,d),_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(d,d,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(add(_0,_1),_2,_1), -product(_3,add(_0,_1),additive_identity), -product(additive_identity,_2,c), -product(_3,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,c), -product(c,add(d,_1),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(_1,d,d), -product(d,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_2,_0)]
[-product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,add(_1,d)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_0), -product(_0,_2,d), -product(c,d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,c,_1)]
[-product(c,d,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(d,_0,_2)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(_1,_0,d), -product(d,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,c,_0), -product(c,_0,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_0,_2), -product(d,_1,d), -product(d,_0,d), -product(_0,additive_identity,_2)]
[-product(_0,_1,c), -product(_0,_1,additive_inverse(d))]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(c,_2,c)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(additive_identity,_2,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_1,_3,_0)]
[-product(add(c,c),_0,c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(add(_0,c),_1,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(add(_0,c),_2,d), -product(c,c,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,add(_2,additive_identity),_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_0,c)]
[-product(d,_0,c), -product(d,d,_1), -product(_1,_0,d), -product(_0,add(c,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(_0,_0,add(_0,d)), -product(add(_0,d),_0,c), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,_1,add(_0,d)), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,_1,_0)]
[-product(_0,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(add(_0,c),additive_identity,additive_identity), -product(_1,additive_identity,add(_0,c)), -product(_1,c,d), -product(add(_0,c),_1,add(_0,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,add(c,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_5), -product(_5,add(_4,c),d), -product(_6,_3,_2), -product(_6,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,_3,c), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,c,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,d,d), -product(_2,_2,_1), -product(_3,_1,_1), -product(_3,add(d,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,add(d,c),additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_0,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(additive_identity,_0,d), -product(_2,add(c,_1),_1), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,d,_0), -product(d,_0,_0), -product(d,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,c), -product(_4,_3,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_0,_3), -product(_2,_4,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(add(_3,c),add(_3,c),_1), -product(add(_3,c),_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_2,additive_identity),c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,d), -product(d,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),add(d,c),d), -product(d,add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,_0,d), -product(c,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_1,_4,add(_3,_2)), -product(_2,_4,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_1,_3), -product(_2,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(_1,add(c,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(d,add(c,c),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,_0,c)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,add(_1,_0),_1), -product(c,_2,c)]
[-product(c,c,c), -product(additive_identity,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(additive_identity,additive_identity,_0), -product(_1,additive_identity,d), -product(_1,_0,d), -product(_0,d,additive_identity), -product(_1,additive_identity,additive_identity)]
[-product(c,_0,_1), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1), -product(_1,_2,_0)]
[-product(additive_identity,_0,c), -product(_0,_1,_2), -product(c,_1,d)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_1,add(_0,additive_identity),_2), -product(_2,_1,c), -product(_1,_0,d), -product(add(_0,additive_identity),add(_0,additive_identity),_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,_3,d), -product(_2,add(additive_identity,c),_3)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_1,_1,add(_3,c)), -product(add(_3,c),_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,_0,add(c,d)), -product(add(c,d),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,c), -product(c,d,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_4,add(d,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(add(c,c),_0,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_0,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_1,c)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_1,d)]
[-product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,c), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_0,_0,_3), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(d,_0,additive_identity), -product(_0,d,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(c,_0,d), -product(_0,_2,add(_0,_1)), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,_1), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_5,add(_2,_0)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,add(_1,additive_identity),_0)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_3,_0), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_inverse(_1),_1), -product(additive_inverse(_1),_0,additive_inverse(_1)), -product(additive_inverse(_1),additive_inverse(_1),c), -product(c,_0,d)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_0,d), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(c,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_2,d,additive_identity), -product(_0,_2,_1), -product(_0,additive_identity,d), -product(_1,_0,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(d,d,_0), -product(d,c,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,_0,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,_0,_1), -product(_4,c,additive_identity)]
[-product(_0,c,c), -product(c,_1,d), -product(_2,_3,add(d,c)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,additive_identity,_1), -product(_2,_0,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_3,_4,add(_2,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_2,c,_3), -product(d,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),d,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(c,add(d,c),additive_identity)]
[-product(_0,add(d,c),c), -product(d,_0,_0), -product(_1,_0,d), -product(d,_1,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,d), -product(d,_1,c), -product(c,c,c), -product(_1,d,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_4,add(c,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_4,_2), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,additive_identity,d), -product(_4,_0,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(_2,c,c), -product(_2,add(c,_1),d), -product(add(c,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_inverse(_1)), -product(_1,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,c)), -product(c,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,add(additive_identity,_0))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,_2), -product(_3,c,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,add(_1,c),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(c,c,c), -product(_0,d,add(d,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,additive_identity,d), -product(_2,_3,add(_3,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d), -product(d,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(add(_0,c),_0,_0), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,c), -product(c,_1,d), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),_2), -product(_2,add(_0,_1),c), -product(_1,_0,d), -product(add(_0,_1),_1,additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,add(c,c),d), -product(_2,_0,_1), -product(_2,d,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_0,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_0,add(d,_1),d), -product(_0,_0,_0), -product(_0,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,additive_identity,add(d,c)), -product(_1,_4,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),d,_1), -product(d,add(_1,_0),_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(_2,d,add(_0,d)), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_3,_1,_1), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_2,_2), -product(_5,d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,_0), -product(d,_2,_1)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_5,add(_3,_0)), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(d,c),d), -product(_2,_3,_3), -product(_4,_3,_2), -product(_4,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,c,d), -product(c,_1,c)]
[-product(_0,c,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_0), -product(_0,_0,d), -product(_2,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,add(d,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(c,_0),_1), -product(c,_1,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(_0,d,d), -product(_0,add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,d), -product(d,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,add(_0,c)), -product(_0,additive_identity,d)]
[-product(_0,additive_identity,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,_0), -product(_0,_0,_0), -product(_1,_2,add(_1,d)), -product(_0,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_3,_2), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_5,_4,_2), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,d), -product(c,_0,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_3), -product(_3,_1,d), -product(_4,_2,c), -product(_4,additive_identity,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_2,_6), -product(_6,add(_0,c),additive_identity)]
[-product(_0,_1,_2), -product(d,_0,d), -product(d,_1,c), -product(_1,_3,add(_0,_2)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,additive_identity,_2), -product(_4,_0,_2)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,c,additive_identity)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,add(_3,_0))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,additive_identity,d), -product(_1,_4,_1), -product(_5,_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(d,_0,add(_0,additive_identity))]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_inverse(_0)), -product(d,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_0,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_0,_0,d), -product(c,_0,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_0,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_5,_1), -product(c,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_2), -product(_2,_1,c), -product(_3,additive_identity,d), -product(_3,_3,_4), -product(_4,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(additive_identity,additive_identity,_2), -product(_2,_0,c), -product(_2,additive_identity,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_1,add(c,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(d,c),d), -product(_3,_0,_2), -product(_3,d,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_2,d), -product(add(_0,c),add(_0,c),_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_1,_1,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,c),additive_identity), -product(d,_3,d)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(d,d,d), -product(d,_2,add(_1,_0)), -product(_1,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_3,d), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_2), -product(_2,_3,d), -product(_3,add(additive_identity,c),_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_2,additive_identity,c), -product(d,_2,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,additive_identity), -product(_3,_2,add(_2,c)), -product(_3,additive_identity,d), -product(add(_2,c),_3,_2)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_1,d,_2)]
[-product(_0,additive_identity,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,d), -product(_1,additive_identity,_1), -product(_1,_2,c)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(add(_2,c),_2,_3), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(d,c,_0), -product(d,additive_identity,d), -product(d,_1,_1)]
[-product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(additive_identity,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(add(_0,d),_0,d), -product(add(_0,d),add(_0,d),_1), -product(_1,_0,c), -product(_2,add(_0,d),add(_0,d)), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(_2,add(_0,d),c), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_0,c), -product(c,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(add(_1,_0),_1,_2), -product(c,add(_1,_0),c), -product(c,_2,d), -product(_0,c,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_1,d), -product(c,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_2,add(_1,d)), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(d,c,_1), -product(_1,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_0), -product(_0,_2,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,add(_0,_1),c), -product(_5,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,c), -product(c,_0,c), -product(_1,c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,additive_identity,add(_2,c))]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,add(_3,additive_identity),_0), -product(_0,_5,_0)]
[-product(_0,additive_identity,c), -product(_0,d,_1), -product(d,_0,_0), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_3,_4,_1), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_0,_2), -product(_6,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,c), -product(c,_4,d), -product(_1,add(_4,_2),_5), -product(_3,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_5,d), -product(_3,_6,add(_4,c)), -product(_2,_6,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_1), -product(_0,_1,_0), -product(_0,_2,d), -product(_0,_0,_0)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(c,add(_0,d),_0), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(c,c,add(d,d)), -product(add(d,d),c,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(add(_3,_2),add(_3,_2),_0), -product(add(_3,_2),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_2,_2,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_1,_0,_0)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,d)]
[-product(add(_0,_0),_0,c), -product(_0,_0,add(_0,_0)), -product(_0,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,_3), -product(_4,_0,_3)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_1,additive_identity), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_2,add(_1,_1)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(c,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,add(_4,c),_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,_1,_2)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_1,_4,_2), -product(c,_4,additive_identity)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,add(c,c),d), -product(_0,c,additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(c,additive_identity,_0), -product(_0,c,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,d,_0), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(d,d,c), -product(c,c,additive_identity), -product(d,c,d)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_0,d), -product(_0,_2,_0), -product(_0,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),_6), -product(c,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_1,additive_identity), -product(c,d,additive_identity), -product(additive_identity,_1,d), -product(c,additive_identity,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_inverse(c),d), -product(_1,_2,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_0,_1), -product(c,add(_0,additive_identity),c), -product(c,_1,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(additive_identity,_1),_2,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),_0,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,c), -product(_0,_1,d), -product(_1,add(c,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,c,_0), -product(_1,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_2,_0), -product(c,c,c), -product(c,_2,d), -product(c,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_0), -product(_0,_0,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,additive_identity), -product(_2,_0,add(_0,_1)), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(_3,add(_2,c),d), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_7,add(_4,c),_8), -product(_9,_7,_2), -product(_9,_8,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_2,c,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_2), -product(_0,_3,d), -product(_3,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),_2), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,add(_1,c),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,_1), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_3,_2), -product(_4,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d), -product(_1,c,_0)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(add(d,d),d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(add(_0,_1),_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,_0), -product(d,c,c)]
[-product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,additive_identity), -product(_4,_3,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(c,add(d,d),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(_2,d,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,c), -product(c,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_0,add(_1,additive_identity))]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,add(c,d),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,c,_2)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,add(c,c),d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,add(_1,_2),_3), -product(_1,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(add(d,d),add(d,d),c), -product(add(d,d),c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,d), -product(_3,c,additive_identity), -product(d,_3,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(add(d,c),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_2,_4,add(_2,c)), -product(_3,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,_3), -product(_3,_2,d), -product(_1,_1,_1), -product(_4,_0,_3)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(_0,d,add(additive_identity,c))]
[-product(_0,c,c), -product(c,_0,_0), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_0,c), -product(_2,c,additive_identity)]
[-product(c,_0,c), -product(c,additive_identity,d), -product(_0,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,c,additive_identity), -product(_1,_0,_2), -product(_2,c,c), -product(_1,c,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,d), -product(_2,additive_identity,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(_1,_2,d), -product(_3,_1,add(_0,_1)), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,add(_0,additive_identity),_0), -product(_0,_1,c)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_3,_0), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,d), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,additive_identity,_0), -product(_0,_4,c)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,additive_identity,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d), -product(d,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,_3), -product(_4,_2,_2), -product(_4,_3,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,add(_0,_1))]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,add(_1,_0),additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,d,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_1,_2,d), -product(_2,add(_0,_1),_3), -product(_0,_3,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,_1,add(c,c)), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,c), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(_1,c,c)]
[-product(c,_0,additive_identity), -product(_1,c,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_1,_3,add(_1,_1)), -product(c,_3,additive_identity)]
[-product(c,_0,_0), -product(d,c,additive_identity), -product(additive_identity,_0,c), -product(d,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,add(d,additive_identity),c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_inverse(_1),additive_inverse(_1),_0), -product(additive_inverse(_1),_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_inverse(d),_0), -product(_0,_1,_0)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),_2,d), -product(c,add(d,_1),add(d,_1)), -product(c,c,_3), -product(_3,add(d,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,_0), -product(d,d,d)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,additive_identity,d), -product(_2,additive_identity,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,c,c), -product(_5,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,add(_2,_0),_2), -product(d,_1,add(_2,_0)), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(add(_1,_0),add(_1,_0),d), -product(add(_1,_0),d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_1,_1,_3), -product(_3,add(c,c),additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(c,c,d), -product(_0,_0,add(_0,additive_identity))]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,_1), -product(d,additive_identity,d), -product(d,_0,c), -product(additive_identity,_1,_2), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,_1,add(_0,_0)), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,d), -product(_2,additive_identity,additive_identity), -product(_3,additive_identity,c), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,add(additive_identity,c),_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(c,c,_2), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_1,_0), -product(c,_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(c,c,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_0,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(additive_identity,d,_0), -product(additive_identity,additive_identity,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,_1,add(c,c)), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(_1,_1),_0), -product(c,_2,c)]
[-product(d,c,additive_identity), -product(c,d,c), -product(c,c,c), -product(c,d,d), -product(d,c,add(c,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,c,additive_identity), -product(_2,additive_identity,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(_0,add(additive_identity,d),_0), -product(add(additive_identity,d),add(additive_identity,d),_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,d)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(c,c,d)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(d,add(_3,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_1,_3,add(_1,_0)), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,d), -product(_2,additive_identity,d), -product(d,d,_1), -product(_2,_3,_0)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(_1,c,additive_identity), -product(add(additive_identity,_0),_1,_2), -product(_2,c,d), -product(_1,_0,add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,_2,additive_identity), -product(_4,_0,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(add(_2,_0),add(_2,_0),c), -product(add(_2,_0),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,additive_identity,_1), -product(d,_3,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,_2,_1)]
[-product(c,c,additive_identity), -product(_0,c,d), -product(d,c,c), -product(c,d,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_0,_3)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,d,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,_2), -product(_2,d,c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),_3,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(d,_0,_1), -product(_1,_1,c), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_0,add(_1,d)), -product(_0,_2,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(_2,add(d,_1),_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(additive_identity,_3,d), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_0), -product(_2,_3,_2), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,add(_1,d),_0), -product(_0,_2,_0)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_0,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,_1,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_2,c), -product(_3,_1,c)]
[-product(d,add(_0,_1),_1), -product(d,d,_0), -product(_0,add(_0,_1),c), -product(_0,d,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_2,_3,c), -product(_1,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_4,_3,additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,add(_1,additive_identity),d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_2,add(d,c),additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(d,d,additive_identity), -product(c,d,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(_1,_2,add(_0,_0)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,add(_2,_1),_2), -product(c,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(c,additive_identity,c)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,additive_identity,add(_4,c)), -product(_1,_6,_1)]
[-product(_0,_1,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_3,_0,_0), -product(_3,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_3,add(_0,c)), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(d,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,additive_identity), -product(_0,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_3,add(_4,c),_7), -product(_6,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(c,_1,_1), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_2), -product(add(_0,c),_2,d), -product(add(_0,c),add(_0,c),_3), -product(_3,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,additive_identity,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(_1,add(_0,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_4), -product(_4,_0,d), -product(_5,_3,additive_identity), -product(_1,_5,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_0,_2), -product(_3,_1,add(_0,_1)), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(d,d,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_2,_3,add(_1,c)), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(add(c,c),c,additive_identity), -product(additive_identity,add(c,c),d), -product(add(c,c),c,add(c,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_2,_0), -product(_0,_5,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_3,_1), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,c,add(c,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_2,_2,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,additive_identity), -product(_0,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(_0,_0,_2)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_4,add(_1,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(_1,_2,add(_0,d)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,c,additive_identity), -product(d,_1,_0), -product(d,additive_identity,d), -product(_2,c,c), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,d,c), -product(_2,_5,_3), -product(_4,_6,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(d,d,c), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_inverse(c)), -product(c,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,_4,add(_3,c)), -product(_3,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_0,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_0,_0,add(_0,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,_1)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_1,_1,_0)]
[-product(c,_0,d), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,c,additive_identity)]
[-product(d,additive_identity,c), -product(d,_0,d), -product(_0,_0,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_1,d), -product(_2,additive_identity,additive_identity), -product(_3,c,additive_identity), -product(_2,_3,_2)]
[-product(c,c,_0), -product(c,c,c), -product(_1,c,c), -product(_1,c,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,c), -product(_5,_3,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),c), -product(add(d,_0),add(d,_0),add(d,_0)), -product(_0,add(d,_0),additive_identity)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(d,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,d), -product(d,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,add(_0,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_1,d,c), -product(c,_1,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,add(_1,additive_identity),_0), -product(_0,_3,c)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,d), -product(d,_0,c), -product(d,_0,add(d,additive_identity))]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,additive_identity), -product(additive_identity,_0,c), -product(_2,c,d), -product(_2,_0,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(d,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(c,d,d), -product(c,c,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(add(_0,_1),_0,_2), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_0,_5,_1), -product(c,_5,additive_identity)]
[-product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,_1,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,c), -product(_2,_3,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(c,c,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,additive_identity,additive_identity), -product(c,c,d), -product(d,additive_identity,c), -product(d,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(add(c,d),add(c,d),c), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_4,_5,add(_3,_2)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(_2,c,_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,add(_3,c),_3), -product(c,_2,_1), -product(_1,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(d,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(d,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,d,c)]
[-product(_0,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,_2,d), -product(add(d,_0),_1,_1), -product(_3,add(d,_0),add(d,_0)), -product(_3,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,_0), -product(_0,d,_1), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,additive_identity,add(_1,c))]
[-product(_0,additive_identity,c), -product(_0,_0,_0), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,c)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_2), -product(_2,add(c,c),d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),add(_0,_0)), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,add(_1,c),additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(add(_0,d),add(_0,d),d), -product(add(_0,d),d,additive_identity)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_3,_1,_1), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,add(_0,additive_identity)), -product(c,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_0,_2), -product(_2,_1,d), -product(_1,add(c,c),_3), -product(_2,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_2), -product(_2,_3,_5), -product(_5,_4,d), -product(_4,add(_2,c),_6), -product(_3,_6,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,add(_0,additive_identity)), -product(add(_0,additive_identity),d,c), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d)]
[-product(add(d,_0),_0,c), -product(_0,d,d), -product(_0,_0,add(d,_0)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,additive_identity,d), -product(additive_identity,_3,add(_3,c))]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(d,add(_1,_0),_3), -product(_3,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,additive_identity,add(_0,c)), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,additive_identity,_3), -product(_2,_0,_2), -product(_2,_3,d), -product(_2,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,c,additive_identity), -product(_0,d,c), -product(_0,additive_identity,d)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_1,_3,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_0,add(c,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_2,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,c,_4), -product(_4,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_0,additive_identity), -product(c,_1,c), -product(c,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,c)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(_0,d,_1), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,d), -product(_2,c,additive_identity), -product(additive_identity,_3,d), -product(_4,_3,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,c), -product(c,_1,c), -product(c,_0,d), -product(_0,c,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_1), -product(_2,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(c,_0,_0), -product(d,_0,c)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,d,add(d,d)), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(c,c),additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(add(d,additive_identity),_0,d), -product(c,add(d,additive_identity),add(d,additive_identity)), -product(c,c,add(d,additive_identity))]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,_3), -product(additive_identity,_1,_4), -product(_4,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_4,_1), -product(_0,_4,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,d), -product(d,_0,c), -product(_1,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_4,_5,add(_0,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_1,add(additive_identity,_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_2,c),_2), -product(_2,_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(_3,d,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,_3,d), -product(_1,_2,_2), -product(_1,_1,_4), -product(_4,add(d,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_2,d,d), -product(_2,_2,_1), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_2,_1), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(d,_1,_0), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,additive_inverse(c)), -product(additive_inverse(c),_0,c), -product(_0,additive_inverse(c),_1), -product(_1,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_0,_0), -product(_1,additive_identity,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,_2), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2), -product(_2,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,c), -product(c,add(c,_1),_2), -product(_2,c,d), -product(add(c,_1),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(_2,_2,add(_2,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,additive_identity,_3), -product(_5,_0,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_1,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(_0,_5,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_0), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,c,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_1,_2)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_1,_2), -product(_3,_0,add(_3,_2)), -product(add(_3,_2),_1,c), -product(_3,_3,d), -product(d,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,c), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_1), -product(_1,_2,_1), -product(d,add(_1,c),_3), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_0), -product(additive_identity,_1,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,_1,d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,_2,d), -product(_0,_1,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_4), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_4,d), -product(add(_3,c),_2,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,c,_0), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_6,_4), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_1), -product(d,_0,_1), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_0,add(_3,additive_identity))]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_1), -product(c,_1,d), -product(additive_identity,_2,_0), -product(_1,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(_0,_1,add(c,d)), -product(d,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,_0,add(_0,_1)), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_3,_4,add(c,c)), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_1,d), -product(d,_0,d), -product(d,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),_0), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,c), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,c,d)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(d,d,_0), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,additive_identity), -product(c,_2,_1), -product(_1,_2,d), -product(c,c,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_2,additive_identity), -product(d,_4,d), -product(_5,_0,_2)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,d,d), -product(_1,_0,c), -product(_0,_1,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_1,_2,add(_0,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,_2,c), -product(_0,add(_0,_1),d), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_0,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,_2), -product(d,_1,_0), -product(d,_2,d), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,_2,c), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,d,_1), -product(d,_2,d)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(_0,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_1)]
[-product(_0,_1,_2), -product(_0,_0,d), -product(d,_1,c), -product(_1,_3,add(_0,_2)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(c,add(_1,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(_2,d,d), -product(d,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,c,d), -product(_0,_0,additive_identity), -product(additive_identity,c,c), -product(_1,d,_0), -product(_0,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,_0,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(d,d,c), -product(d,c,additive_identity), -product(c,c,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,c,_2), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_0,_1), -product(_2,add(_0,additive_identity),c), -product(_2,_1,d), -product(c,_2,c)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_3,_0,_0), -product(_3,add(d,_1),additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,c,d), -product(c,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_4), -product(d,_2,_5), -product(_5,_3,d), -product(_3,add(_4,c),_6), -product(_5,_6,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,c,_1), -product(_1,d,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,d), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,c,_1), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_0), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,additive_identity,d), -product(_1,c,_2), -product(_0,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,_0,c)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_1,add(d,_0),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,c), -product(c,_1,d), -product(_0,c,_1), -product(_2,_0,_1)]
[-product(_0,_0,d), -product(d,_0,_1), -product(_1,_0,c), -product(d,d,_0), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(_0,d,add(c,d)), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_0,_2), -product(_3,_4,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,_2), -product(_2,c,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(add(_0,c),add(_0,c),additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_0,_1,add(d,additive_identity))]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,c,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,add(additive_identity,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_2), -product(additive_identity,_1,_0), -product(additive_identity,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,d,c)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,d), -product(d,d,_0), -product(_0,d,_0)]
[-product(_0,d,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,_2), -product(_1,_1,_1), -product(d,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_1,add(_3,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(d,_1,add(c,d)), -product(_0,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,add(_1,_0),_1), -product(_0,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_1,_1,_1), -product(_2,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),add(_0,_1),_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,additive_identity,c), -product(d,_3,d)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,_2), -product(c,_1,d), -product(_1,add(_2,c),_3), -product(c,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,add(d,c)), -product(c,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(c,c,d), -product(_0,_0,_0)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,additive_identity,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,c,d), -product(c,additive_identity,_1), -product(c,c,c)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,_0), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,add(_2,additive_identity),_0), -product(_0,_5,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,c), -product(_0,c,d), -product(c,add(_0,additive_identity),_0)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(additive_identity,_2,d), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_3,_2,c)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_1,_2,_3), -product(_3,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_3,add(c,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,add(_2,_1)), -product(_3,_0,_0), -product(_3,add(_2,_1),d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_2,add(_1,_1),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,add(additive_identity,_0),_1), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_inverse(c),_4), -product(_5,_3,_2), -product(_5,_4,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_0,d), -product(_1,c,d), -product(c,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_inverse(c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_2,add(_0,additive_identity),_1), -product(_1,_1,c), -product(_2,_0,d), -product(add(_0,additive_identity),_2,_2)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,_1,_2)]
[-product(_0,additive_identity,c), -product(d,d,_0), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,add(_1,c),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_0,add(_3,additive_identity)), -product(_0,_5,_0)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(_3,c,c), -product(_3,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,c,_7), -product(_8,_6,_2), -product(_8,_7,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(d,d,_0), -product(_1,d,d), -product(_1,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_1,_0), -product(_2,_3,_0)]
[-product(c,additive_identity,c), -product(_0,_0,c), -product(_0,c,d), -product(additive_identity,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,_1,add(_0,c)), -product(c,_1,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_4,_1), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_1,add(_2,additive_identity)), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,_4,d), -product(_1,_5,add(_4,_2)), -product(c,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,_1,additive_identity), -product(_1,additive_identity,d)]
[-product(additive_identity,_0,c), -product(_1,_2,_3), -product(additive_identity,_1,_4), -product(_4,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,add(_0,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_2,d), -product(d,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_0,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(c,c,c), -product(c,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_0,additive_identity,_0), -product(_0,_0,_0)]
[-product(d,d,c), -product(d,d,d), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_0,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,d,c), -product(d,_1,d)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(c,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_1,d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,add(c,c),additive_identity)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,d), -product(_1,additive_identity,_1)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),c,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(add(d,_0),add(d,_0),_0), -product(add(d,_0),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,add(d,_0),_2), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,c)), -product(c,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,additive_identity,_0), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,d,_1), -product(d,_3,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,c),additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,c), -product(_3,_2,c), -product(_3,c,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,add(c,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,_1,d), -product(_2,_3,_1)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,_1), -product(_0,c,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_2,_0), -product(add(_0,_1),_1,add(_0,_1)), -product(add(_0,_1),_2,d), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,_0), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,d,_1), -product(d,_0,_0), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,c,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,c,additive_identity), -product(_0,_1,c)]
[-product(add(_0,additive_identity),d,additive_identity), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,d,c), -product(_0,add(_0,additive_identity),d), -product(add(_0,additive_identity),_0,add(_0,additive_identity))]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(d,c,_3), -product(_3,additive_identity,additive_identity)]
[-product(c,d,additive_identity), -product(c,c,d), -product(d,d,c), -product(additive_identity,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,c,d)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_0,_0,_0), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,_2,d), -product(c,_1,_2)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,add(_1,additive_identity),c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,c), -product(c,_3,_1)]
[-product(d,d,_0), -product(c,d,c), -product(_1,d,additive_identity), -product(d,_1,c), -product(d,additive_identity,d), -product(c,d,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(_1,_2,_1)]
[-product(d,_0,c), -product(_1,_2,_3), -product(_4,_1,d), -product(_4,_3,d), -product(_3,add(_2,_0),_5), -product(_4,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,_3,add(_2,d)), -product(d,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_3,_0), -product(add(_0,_1),_2,_4), -product(_4,_3,d), -product(_5,add(_0,_1),add(_0,_1)), -product(_5,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_0,c,_4), -product(_0,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_1,additive_identity,c)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_0,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_2,add(_2,d),_3), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,add(_1,_0),_1), -product(c,c,_2), -product(_2,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(c,_2,c), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,c), -product(_0,c,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(d,c,d), -product(_1,d,additive_identity), -product(additive_identity,c,d), -product(_1,additive_identity,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,d,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(add(c,_1),add(c,_1),_0), -product(add(c,_1),_0,additive_identity)]
[-product(c,_0,c), -product(_0,add(_0,_0),_0), -product(c,_0,additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_3,add(_0,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_0,_1)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,add(additive_identity,_1))]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(d,d,_0), -product(_1,d,_1), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,add(d,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_1,d)]
[-product(additive_identity,additive_identity,d), -product(d,additive_identity,c)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,_0,d), -product(c,_2,c), -product(_0,_3,d)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,_4), -product(additive_identity,_2,_5), -product(_5,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(c,_1,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_2,_0,_1)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_0,_0,d), -product(_1,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(d,_0,_0), -product(d,_0,d)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,add(d,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_0,additive_identity), -product(_0,d,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_3,_6,c), -product(_5,_6,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_0,additive_identity,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,c), -product(_1,_0,_0), -product(d,_0,additive_identity), -product(_1,d,_1), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_1,d), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,add(_1,additive_identity),_1), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_2,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,_0,_2), -product(_2,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,_3,add(_2,d)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_3,_4,add(_0,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,additive_identity), -product(_2,_0,add(_0,_1)), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,_1,add(_1,_0))]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_0,d), -product(additive_identity,d,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(d,c,c), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,_2), -product(d,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_0,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d), -product(_3,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,c), -product(_1,_3,c)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,additive_identity,_1), -product(d,_2,d)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,_2,d), -product(d,_1,_1), -product(_2,add(d,_0),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,d,_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_0,d), -product(c,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(add(_0,c),add(_0,c),_2), -product(add(_0,c),_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_3,_4,add(_2,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(_0,additive_inverse(_0),c), -product(_1,additive_inverse(_0),additive_inverse(_0)), -product(_1,_0,d)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(_1,add(d,c),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,add(_1,_0),additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(_1,c,additive_identity), -product(_2,_1,add(c,_0)), -product(_2,additive_identity,d), -product(_1,_0,add(c,_0))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(c,c,additive_identity), -product(_0,c,add(c,c)), -product(_0,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,add(_1,c),_1), -product(_0,_2,c)]
[-product(_0,additive_identity,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_5,c), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,add(additive_identity,_1),c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,add(_5,c)), -product(add(_5,c),_4,d), -product(_2,_2,_6), -product(_6,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,_2,c), -product(_1,_2,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,c,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,d), -product(c,_3,_1)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,add(additive_identity,c),c), -product(_1,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,_1), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,c,additive_identity), -product(_0,c,add(additive_identity,c)), -product(add(additive_identity,c),c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_inverse(c)), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d)]
[-product(_0,_1,additive_inverse(_1)), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,_3,d), -product(_2,c,_3)]
[-product(_0,_1,_2), -product(c,_0,d), -product(d,_1,c), -product(_1,add(_0,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_2,add(_5,c),additive_identity)]
[-product(d,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,add(additive_identity,c),_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(_0,c),_0)]
[-product(d,_0,additive_identity), -product(_1,d,_2), -product(_2,_0,c), -product(_1,_3,d), -product(_3,_0,add(_3,additive_identity))]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,d), -product(d,_2,d), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(d,_0),d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_1,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(_0,_5,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_3), -product(_3,_0,d), -product(_0,_0,_2)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(add(additive_identity,c),add(additive_identity,c),c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),c,additive_identity), -product(add(additive_identity,c),c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,add(_0,d),c), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,add(d,additive_identity),_1), -product(_0,_3,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_1), -product(_3,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_0,_1), -product(_0,_3,_2)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),add(_1,c),_1), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,d,add(additive_identity,c)), -product(_1,_3,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(c,c,_2), -product(_2,_1,d), -product(_1,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_5,_6,add(_4,c)), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,c), -product(d,c,d), -product(c,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(_2,_0,c), -product(_2,c,d), -product(_1,add(_1,additive_identity),_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_1,_0,_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,additive_identity,_1), -product(_2,c,c), -product(_2,_1,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,add(_0,_1),_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,add(_2,_0)), -product(add(_2,_0),_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,additive_identity), -product(_2,_3,add(additive_identity,c)), -product(add(additive_identity,c),_3,d), -product(_2,_2,_3)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(additive_identity,_1),additive_identity), -product(c,c,_2), -product(_2,add(additive_identity,_1),d)]
[-product(d,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,c), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_1,_6,add(_3,_1)), -product(c,_6,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(_3,add(_0,_1),c), -product(_3,_1,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,add(_3,_2),additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_4,additive_identity,_1), -product(_1,_4,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,d,_1), -product(_1,additive_identity,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_inverse(_1)), -product(additive_inverse(_1),c,d)]
[-product(_0,add(d,_1),_1), -product(_0,_0,d), -product(d,add(d,_1),c), -product(_0,_0,_0), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_7,c), -product(_2,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(additive_identity,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(add(d,c),add(d,c),c), -product(add(d,c),c,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(add(_1,_2),_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(add(_1,_2),_1,d), -product(c,_0,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(c,d,_1), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_0,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_0), -product(_0,_1,c), -product(_1,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),_1,d), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_1,_3,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,_0,add(_0,_0)), -product(_1,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,d,_3), -product(_3,d,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(d,c,d), -product(c,_0,add(d,c)), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_2,_2,_3), -product(_2,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(d,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(_0,_1,_0), -product(_0,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,_0), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(_0,c,d), -product(_0,_0,additive_identity), -product(additive_identity,c,c), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(_3,add(_0,_1),c), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,add(d,_0),_3), -product(_0,_3,additive_identity)]
[-product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_0)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_0,_4,add(d,_2)), -product(d,_4,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,_1,add(_0,d)), -product(_0,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(c,c,_1), -product(_1,_0,c), -product(_1,c,d), -product(_0,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,additive_inverse(d)), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,additive_identity,d), -product(_3,_2,add(_2,_1)), -product(c,_3,_0)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(_0,_3,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_3,_3,add(_5,_2)), -product(add(_5,_2),_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,_1,add(_1,c)), -product(c,_2,_0)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(c,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(d,c,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_2), -product(_0,_3,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_0,_3), -product(_0,_5,_0)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(c,_0,_1), -product(_0,c,_0)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_0)]
[-product(additive_identity,d,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_0,_1,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_0,_2,add(_2,c))]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_2,c,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_0,add(_2,additive_identity)), -product(c,_3,_0)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_0,additive_identity), -product(_1,c,d)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_2,add(_0,d),_1), -product(_2,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,additive_inverse(_2)), -product(additive_inverse(_2),_1,c), -product(additive_inverse(_2),_0,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_0,d), -product(_4,_2,_2), -product(_4,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_2,_6), -product(_6,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,d), -product(_0,_0,d), -product(_1,d,additive_identity), -product(d,_1,d)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_2,_0,_3), -product(_1,_2,add(_0,c)), -product(_1,_3,d), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,c,_3), -product(d,_3,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(additive_identity,add(d,additive_identity),c), -product(_0,_1,d), -product(add(d,additive_identity),_0,_0)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(add(_0,c),_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,c,d), -product(_1,_2,add(_0,_1)), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_4,add(_0,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_3,c,_0), -product(_3,additive_identity,d), -product(_1,_2,add(_2,c))]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(additive_identity,_2,_0), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,additive_identity,add(_1,c))]
[-product(_0,c,c), -product(c,_1,d), -product(_0,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_0,additive_identity), -product(c,_0,_0), -product(_0,_0,d)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,d,c), -product(d,c,c), -product(d,c,d), -product(d,additive_identity,c)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(additive_identity,d,_0)]
[-product(d,_0,c), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,d,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_1,_2), -product(_3,_2,d), -product(_4,_0,d), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]


Total execution time was 605445 ms.


Execution time was 605440 ms.

status 103
---System Timeout---
SOLAR PROBLEM
RNG005-2.C2i1_all_ld-1-4_SOLAR-Inc
------------------  TIME OUT --------------------
resultFilename :RNG005-2.C2i1
nethod:Solar-Carc
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:
timout :600000
Starting SolveToClause...
Launching solver...
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), +equalish(additive_inverse(_0),additive_inverse(_1))]
 [-equalish(_0,_1), +equalish(add(_0,_2),add(_1,_2))]
 [-equalish(_0,_1), -sum(_0,_2,_3), +sum(_1,_2,_3)]
 [-equalish(_0,_1), -sum(_2,_0,_3), +sum(_2,_1,_3)]
 [-equalish(_0,_1), -sum(_2,_3,_0), +sum(_2,_3,_1)]
 [-equalish(_0,_1), +equalish(multiply(_0,_2),multiply(_1,_2))]
 [-equalish(_0,_1), -product(_0,_2,_3), +product(_1,_2,_3)]
 [-equalish(_0,_1), -product(_2,_0,_3), +product(_2,_1,_3)]
 [-equalish(_0,_1), -product(_2,_3,_0), +product(_2,_3,_1)]
 [+sum(additive_identity,_0,_0)]
 [+sum(_0,additive_identity,_0)]
 [+product(_0,_1,multiply(_0,_1))]
 [+sum(_0,_1,add(_0,_1))]
 [+sum(additive_inverse(_0),_0,additive_identity)]
 [+sum(_0,additive_inverse(_0),additive_identity)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_2,_3,_5), +sum(_0,_4,_5)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_0,_4,_5), +sum(_2,_3,_5)]
 [-sum(_0,_1,_2), +sum(_1,_0,_2)]
 [-product(_0,_1,_2), -product(_1,_3,_4), -product(_2,_3,_5), +product(_0,_4,_5)]
 [-product(_0,_1,_2), -product(_1,_3,_4), -product(_0,_4,_5), +product(_2,_3,_5)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -product(_0,_5,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -sum(_2,_4,_6), +product(_0,_5,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -product(_5,_1,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -sum(_2,_4,_6), +product(_5,_1,_6)]
 [-sum(_0,_1,_2), -sum(_0,_1,_3), +equalish(_2,_3)]
 [-product(_0,_1,_2), -product(_0,_1,_3), +equalish(_2,_3)]
 [+product(additive_identity,_0,additive_identity)]
 [+product(_0,additive_identity,additive_identity)]
 [-sum(c,d,additive_identity)]
Production field:
 [-product(_0,_1,_2)]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
>>>>>>>>>>>> Solve - measure : [599815, 2208768, 50587, 216769, 1049958, 0, 0, 0]
Solver finished.
SolveToClause Finished!
5524 CHARACTERISTIC CLAUSES

[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_2,_2,add(_1,c)), -product(add(_1,c),_2,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_0,c), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_0,_0,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_0,_1)]
[-product(d,d,c), -product(_0,d,d), -product(_1,d,additive_identity), -product(_0,_1,_0), -product(_0,d,_1)]
[-product(_0,c,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,d), -product(d,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_inverse(_2),d)]
[-product(_0,d,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,d), -product(_1,_0,add(additive_identity,additive_identity)), -product(c,_1,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(d,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_3,_0,_2), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_3,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_0), -product(c,_1,d), -product(_1,_0,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_0), -product(_0,_2,_4), -product(_4,_3,d), -product(_3,add(_0,_1),_5), -product(_2,_5,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_0,d,d), -product(_0,_0,add(d,_0)), -product(_0,c,additive_identity)]
[-product(d,c,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(d,_0,_1), -product(_1,d,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_3,_0), -product(_2,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_5,add(_3,c),_6), -product(_7,_5,d), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_0,additive_identity,d), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_5,d), -product(_5,_6,add(_4,c)), -product(d,_6,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(c,_0,add(_0,d)), -product(add(_0,d),c,c), -product(add(_0,d),c,additive_identity)]
[-product(d,_0,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),d), -product(add(d,_0),d,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_2,add(c,_1),_0), -product(_0,_2,_0)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_1,_0,_0)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(_0,_0,add(_0,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(c,c,c), -product(_0,d,d)]
[-product(d,d,c), -product(c,d,d), -product(d,add(c,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_2,_0,_4), -product(_4,_3,d), -product(_4,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(additive_identity,additive_identity,_1), -product(additive_identity,_1,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(additive_identity,_0),additive_identity), -product(c,add(additive_identity,_0),d)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,add(additive_identity,_0),c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,_1,add(d,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,d), -product(additive_identity,_1,_0)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_1,_0,_2), -product(_3,_1,add(_0,additive_identity)), -product(_3,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_2), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_4,_0,_2), -product(_4,additive_identity,d), -product(_0,_3,add(_3,c))]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,c,_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_4,_2), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(c,_1,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(_1,_0,additive_identity), -product(add(additive_identity,_0),_1,_2), -product(_2,_0,d), -product(_1,add(additive_identity,_0),add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,additive_identity,_2), -product(d,_3,d), -product(_4,_0,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(c,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,additive_identity), -product(c,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(c,c,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_0,d), -product(_0,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(c,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,add(additive_identity,c)), -product(add(additive_identity,c),_0,d)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_1), -product(_2,additive_identity,_0), -product(_2,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(add(d,d),add(d,d),_0), -product(add(d,d),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,add(d,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,_3,add(_2,_0)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_0,_1), -product(_1,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,c), -product(_0,c,d), -product(_2,add(_2,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_0,_5), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_1), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,add(_0,c),_2), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(add(additive_identity,c),d,d), -product(d,d,additive_identity), -product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(add(c,_0),add(c,_0),c), -product(c,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,add(_1,_1),_2), -product(_0,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_1,_0,additive_identity), -product(_2,_1,add(_0,_0)), -product(_2,additive_identity,d), -product(_1,add(_0,_0),add(_0,_0))]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,c), -product(_1,c,d), -product(_0,add(_0,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_3,d), -product(_2,add(_4,_1),_5), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,_0), -product(_1,_1,additive_identity), -product(additive_identity,_1,d), -product(_1,_0,_1)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_1), -product(c,_1,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_1,_0,_3), -product(_2,_3,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,_1)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_1,_2,add(c,c)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,c,d), -product(_2,_3,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_1,d), -product(_1,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_0,_2,_5), -product(_5,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,d,additive_identity), -product(c,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(c,_4,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_0,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(d,add(_1,_0),_1), -product(c,d,additive_identity), -product(additive_identity,add(_1,_0),d)]
[-product(_0,c,_0), -product(c,_0,_1), -product(_1,c,c), -product(c,additive_identity,d), -product(_1,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(d,c,d), -product(_1,d,additive_identity), -product(additive_identity,c,d), -product(_1,d,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_inverse(_1)), -product(c,_2,d)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(add(c,c),additive_identity,d)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(c,_2,_1), -product(_0,c,additive_identity), -product(additive_identity,_2,d)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,_2), -product(c,_1,c), -product(_0,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(_2,add(_0,d),add(_0,d)), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_2,_0,_0), -product(_0,_2,_3), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(c,add(_2,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_2,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_6,add(_5,c)), -product(d,_6,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,add(d,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(add(_1,_1),add(_1,_1),c), -product(add(_1,_1),c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,d), -product(c,c,_1), -product(_1,d,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_4), -product(_4,add(_1,_2),c), -product(_3,_1,d), -product(_5,_4,_3), -product(_5,c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,add(_2,c),_2), -product(c,_1,_3), -product(_3,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,add(d,d),_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(add(_1,c),add(_1,c),_2), -product(add(_1,c),_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(additive_identity,_0,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_0,_4,add(_0,c)), -product(_0,_4,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,_1,_1), -product(_4,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d)]
[-product(c,d,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_1,d), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_4,_3), -product(_2,add(_3,c),additive_identity), -product(additive_identity,_4,d)]
[-product(_0,additive_inverse(_1),c), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(_2,_0,c), -product(_2,c,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_2,c),_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),_2,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),c,c)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_0,additive_identity), -product(d,_1,_2), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,_2,d), -product(c,_1,c), -product(_0,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_1), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_3,_0), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_0,_1),_1), -product(_2,_0,d), -product(d,add(_0,_1),c), -product(_3,_0,_2), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,_3,d), -product(_3,_3,add(additive_identity,c))]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,add(_0,c),add(_0,c)), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,add(_3,_0),_5), -product(c,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(d,d,d), -product(d,d,_0), -product(_1,d,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,d), -product(_2,additive_identity,d), -product(d,_2,d)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_inverse(_0)), -product(additive_inverse(_0),_0,c), -product(_1,additive_inverse(_0),_0), -product(_1,c,d)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_4,d), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(_2,d,_0), -product(_1,_2,_1), -product(_3,d,_1), -product(_3,c,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(c,_0,c), -product(_0,add(_1,_0),_1), -product(c,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,d,c), -product(d,d,additive_identity), -product(c,d,d), -product(d,c,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,c),_0,_0), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(additive_identity,add(additive_identity,c),d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,additive_identity,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,_4,d), -product(_5,_0,add(_4,_2)), -product(_3,_5,_3)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,additive_identity,_1), -product(_0,_1,d), -product(additive_identity,_2,c), -product(_1,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(add(d,_0),_1,_2), -product(_2,_1,additive_identity)]
[-product(c,additive_identity,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_0,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,_0,_0)]
[-product(_0,d,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_1,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,c,_2), -product(_2,_3,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_5,_2,_2), -product(_5,_4,d), -product(_3,_6,add(_3,c)), -product(_4,_6,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_0), -product(_1,c,c), -product(_1,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(_0,_0,add(_0,_1))]
[-product(_0,_1,additive_identity), -product(d,_0,d), -product(d,_1,c), -product(_1,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_0,_5), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_4,d), -product(_2,_5,add(_3,_1)), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,_2), -product(c,additive_identity,_1), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(add(_0,_0),_0,c), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,c,d), -product(_2,_1,add(_0,_0)), -product(_2,add(_0,_0),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(add(_0,c),add(_0,c),_2), -product(_2,_0,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_4,add(d,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,d), -product(additive_identity,_1,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_2,add(_3,c),_4), -product(_1,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,_1), -product(d,c,c), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(additive_identity,_5,_2), -product(d,_5,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,_0), -product(_0,c,c), -product(_1,_2,add(_1,d)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(_0,_5,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,_2,d), -product(_2,_2,_1)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_3,add(additive_identity,c)), -product(_2,_4,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(add(_0,c),_3,_0), -product(add(_0,c),_3,d), -product(_4,_2,_2), -product(_4,add(_0,c),additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,d,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(additive_identity,d,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_4,_5,add(_2,c)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,c,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,_4,d), -product(_5,add(_4,_2),_0), -product(_3,_5,_3)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,add(_2,c)), -product(_0,_1,c), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,_3,add(_2,d)), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_0,_0,_1), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,d,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(add(_0,c),add(_0,c),_2), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,d,d), -product(_2,_2,_0), -product(_1,_3,add(d,c)), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_1), -product(_1,_1,c), -product(c,_1,d), -product(_1,additive_identity,_1)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,c,additive_identity), -product(d,d,_0), -product(d,additive_identity,d), -product(_0,c,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,d), -product(_2,_2,d), -product(d,add(d,c),_3), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_4,_0), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,d,c), -product(c,additive_identity,additive_identity), -product(d,c,_0), -product(d,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_0,add(_3,c)), -product(add(_3,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,c), -product(_0,add(_3,_1),d), -product(c,d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_3,_1,_1), -product(_3,add(c,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_3,_4,add(_2,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,c,_2)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,_3), -product(_3,_0,c), -product(_2,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_1,_0,additive_identity), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,c), -product(c,add(_3,_1),d), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,c,_0), -product(_2,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,additive_identity,d), -product(_1,_4,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,add(additive_identity,c),_3), -product(_0,_4,_2)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(d,additive_identity,_0), -product(c,d,additive_identity), -product(d,_1,d)]
[-product(d,_0,additive_identity), -product(c,d,d), -product(d,_0,c), -product(_0,d,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_2,d,add(_1,additive_identity))]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,add(_1,d),_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,d), -product(_2,_3,c)]
[-product(_0,c,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,c,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(additive_identity,add(d,additive_identity),c), -product(_0,d,d), -product(_0,_0,add(d,additive_identity))]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_1,_2,add(c,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_1,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_0,c), -product(_4,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,d,add(_0,additive_identity))]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,add(d,_0),c), -product(_3,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_0,add(_3,_1),_6), -product(c,_6,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_0,_4,add(c,c)), -product(_0,_4,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_0,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,c,_5), -product(_2,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_0,_4,add(c,c)), -product(_3,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,d,_3), -product(_3,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_7,c), -product(_2,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_0,additive_identity,d), -product(_2,c,d), -product(_1,_2,c)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_1,_0,add(_0,_0)), -product(_2,_1,add(_0,_0)), -product(_2,add(_0,_0),d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(add(c,_0),add(c,_0),c), -product(c,add(c,_0),d), -product(add(c,_0),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,_0,additive_identity), -product(_1,d,c), -product(_1,additive_identity,d), -product(c,_0,_0), -product(_1,_2,_0)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0)]
[-product(additive_identity,_0,_0), -product(_1,additive_identity,d), -product(d,_0,c), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_0), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,additive_identity,_2), -product(_4,_0,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,d,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_2,_1,_1), -product(_2,_0,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_2,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,c,add(c,_1)), -product(add(c,_1),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_0,d), -product(_1,_1,_0)]
[-product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,additive_identity,d), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_1,_4,add(_2,c)), -product(c,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,d,additive_identity), -product(_1,_2,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,_0,add(c,_0)), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(c,d,additive_identity), -product(d,c,d), -product(d,d,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_1,c), -product(_4,_2,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_3), -product(d,_1,_4), -product(_4,_2,d), -product(_2,add(_3,_0),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(_0,add(_2,_1),c), -product(_0,_3,d), -product(c,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,add(c,_1)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_2,d), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,d), -product(_0,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,add(_0,_1)), -product(_0,_2,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,add(c,c),c), -product(add(c,c),_0,_0), -product(add(c,c),_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(d,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_3,add(d,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,add(additive_identity,c),_2), -product(_2,_3,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(c,c,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(add(_0,_2),add(_0,_2),_3), -product(add(_0,_2),_3,additive_identity)]
[-product(_0,c,c), -product(d,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,d,_0)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_1,_1,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,add(_3,c),_3), -product(_2,d,additive_identity), -product(additive_identity,add(_3,c),d), -product(_2,additive_identity,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,add(d,c),_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,c), -product(_3,_5,_2)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(additive_identity,_3,_2), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,additive_identity,add(c,c))]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,additive_inverse(d),c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,d), -product(_1,additive_identity,_1), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,additive_identity,_0)]
[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,_0,_1), -product(_1,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,additive_identity,_1), -product(d,_1,d), -product(_1,c,_2), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,add(_0,_0),additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_1), -product(_1,_0,d), -product(_1,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,_0), -product(_5,_3,additive_identity)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_2,_3,_5), -product(_5,additive_identity,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(add(_0,_1),_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_1,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(d,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,c,add(_0,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_1,_1,_2), -product(_2,_0,d), -product(_0,additive_identity,_1)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,add(c,_0),c), -product(_2,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(_0,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(d,_0,c), -product(_1,_1,additive_inverse(_0)), -product(d,_1,d)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(_0,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_1,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(add(_3,c),add(_3,c),_1), -product(add(_3,c),_1,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(add(d,_0),d,d), -product(add(d,_0),add(d,_0),c), -product(c,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_1,_2,add(c,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,c), -product(c,add(c,_0),d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_0,d), -product(c,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_1,_6,add(_4,_1)), -product(c,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,_0,add(c,_0)), -product(add(c,_0),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,c,_2), -product(_2,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,add(_2,additive_identity),c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,add(additive_identity,_0),_2)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,c)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,d,_0), -product(c,_2,c), -product(_0,_3,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_1,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(_0,_5,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(_0,_1,_1)]
[-product(c,c,c), -product(add(_0,c),_1,_0), -product(c,add(_0,c),_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,add(_2,c)), -product(_3,_1,_0), -product(_3,add(_2,c),d), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(c,_0,d)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_1), -product(_2,_0,_0), -product(_2,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_0,_4,add(_2,c)), -product(_0,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,c,c), -product(_1,_0,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,add(_1,_2)), -product(add(_1,_2),_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_1,_1,c), -product(_2,_0,d), -product(_0,_2,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,d), -product(c,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,additive_identity,add(_3,c))]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_2), -product(_2,add(c,c),d), -product(_3,_2,_1), -product(_3,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_0,_1,c), -product(_0,_3,d), -product(_1,add(_2,additive_identity),_0)]
[-product(_0,_1,c), -product(_1,_2,add(_2,_1)), -product(_3,_1,_0), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,add(_2,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),_3,d), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_3,_0,c), -product(_3,additive_identity,d), -product(_1,add(_2,c),_2)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,_1)]
[-product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,c), -product(c,_3,d), -product(_1,_3,_4), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_2,c,add(c,_1)), -product(c,_2,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(d,d,add(additive_identity,c))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(c,add(_0,c),additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_2,d,c), -product(d,_2,additive_identity)]
[-product(_0,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_2), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(_1,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,additive_identity,d), -product(_4,_0,_3)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(_1,_2,add(d,c)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(c,c),c), -product(d,_0,_0), -product(d,_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,add(_0,d),add(_0,d)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),add(d,c),d), -product(d,add(d,c),add(d,c)), -product(add(d,c),d,additive_identity)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,c,_0), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_0,_6), -product(_6,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,c), -product(_4,add(_3,_1),d), -product(c,_2,_5), -product(_5,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,d,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_0,_3,add(d,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,c,_2), -product(_1,_3,_0)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_0,additive_identity,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_4,_1), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(_1,c),_1), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_3,_1), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(c,additive_inverse(_0),c), -product(additive_inverse(_0),_0,_1), -product(c,_1,d)]
[-product(add(_0,c),_1,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(add(_0,c),_2,d), -product(_3,c,c), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_3), -product(_4,_1,d), -product(_4,_3,d), -product(_3,add(_2,_0),_5), -product(_4,_5,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,add(d,c)), -product(c,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(d,additive_identity),d,d), -product(add(d,additive_identity),add(d,additive_identity),_0), -product(_0,add(d,additive_identity),_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_1,d), -product(_4,_3,_2), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_1,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,c), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_inverse(c),_1), -product(_0,_1,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,add(_1,additive_identity),_1), -product(c,_0,_2), -product(_2,add(_1,additive_identity),d), -product(d,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_3,add(_1,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_1,add(_4,_2),_5), -product(_0,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_1,_2,_1)]
[-product(add(d,c),_0,c), -product(add(d,c),add(d,c),add(d,c)), -product(add(d,c),add(d,c),d), -product(d,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_inverse(_1)), -product(c,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_4), -product(_5,add(_3,c),_2), -product(_5,_4,d), -product(_6,_5,_2), -product(_6,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_4,_0,_0), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(d,_0)), -product(d,_1,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,_1,_2), -product(_0,_2,d), -product(_1,_3,add(_1,c)), -product(_2,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_0,_2,c), -product(_0,additive_identity,d), -product(_3,d,_1), -product(c,_3,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(add(d,c),add(d,c),_1), -product(add(d,c),_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_2,_0,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,additive_identity,d), -product(_1,_3,_1)]
[-product(additive_inverse(c),_0,c), -product(_1,additive_inverse(c),additive_inverse(c)), -product(_1,_1,_2), -product(_2,additive_inverse(c),d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_4), -product(_4,_0,d), -product(_5,additive_identity,_3), -product(_1,_5,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_0,_0,_2), -product(_2,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_1,_4), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(d,add(d,_0),_0), -product(d,d,d), -product(d,add(d,_0),c), -product(d,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,add(_2,additive_identity),_1), -product(_0,_3,_0)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,_2,d), -product(add(d,_0),_1,_1), -product(_3,_0,add(d,_0)), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,_0), -product(_1,additive_identity,_2), -product(_2,additive_identity,c), -product(_1,_2,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,d), -product(_1,_3,c)]
[-product(d,_0,c), -product(d,d,d), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,c)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,c,c), -product(_1,_0,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),_0), -product(_4,_3,d), -product(_5,_4,_0), -product(_5,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,c,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_2,_2,add(c,c)), -product(add(c,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_1,d), -product(c,c,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_3,_2), -product(_2,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(c,c,add(_3,_1)), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_1,c,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,c), -product(c,_4,d), -product(_2,_2,_5), -product(_5,_3,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(add(_1,c),_2,_1), -product(c,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_1,_0,_0), -product(additive_identity,_1,d)]
[-product(_0,_0,additive_inverse(d)), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(additive_identity,_3,_1), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,d), -product(_3,_1,_0)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(c,_0,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(_0,additive_inverse(_0),c), -product(_1,_0,additive_inverse(_0)), -product(_1,c,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,c,add(_0,additive_identity))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_1,add(_0,additive_identity)), -product(_2,_3,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,additive_identity,_2), -product(_1,c,c), -product(_1,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_2,add(_1,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_3,_4,add(_2,d)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_0), -product(_0,_2,d), -product(_1,_0,add(_3,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(add(_2,c),_3,_2), -product(_0,add(_2,c),_4), -product(_4,_3,d), -product(_0,_4,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,_2), -product(_2,d,c), -product(_1,_3,d), -product(_0,_1,_1)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_0,_1), -product(d,_0,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_4), -product(_4,additive_identity,d), -product(_1,_2,_1), -product(_5,_0,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_3), -product(c,c,_2), -product(c,_3,d), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(add(c,c),add(c,c),_0), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(add(_5,_2),add(_5,_2),_3), -product(add(_5,_2),_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,d), -product(_2,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(c,_0,d), -product(c,additive_identity,d), -product(d,c,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_2,additive_identity,_0), -product(c,_2,c), -product(_1,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_5,_1), -product(_1,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(d,d,c), -product(additive_identity,c,additive_identity), -product(d,additive_identity,d), -product(_0,c,c), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_4,c), -product(_2,_6,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(c,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),add(_0,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,_6,_1), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,c,add(_2,_0)), -product(add(_2,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_0,c,d), -product(_2,_3,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(d,add(c,c),c), -product(_0,d,d), -product(_0,d,additive_identity), -product(additive_identity,add(c,c),d), -product(_0,additive_identity,_0)]
[-product(_0,_1,additive_identity), -product(_0,_0,c), -product(c,_1,c), -product(c,_0,d), -product(_0,c,_0)]
[-product(_0,_1,c), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_2,_0), -product(_3,_1,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(_2,_2,_3), -product(_3,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(d,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,c)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_inverse(_1),additive_inverse(_1),c), -product(additive_inverse(_1),c,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),_1,d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,add(_0,_1),_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(d,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,add(_0,additive_identity),_1), -product(_0,_3,_2)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,additive_identity), -product(_4,_3,d)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(c,_1,d), -product(add(_0,c),c,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(d,_0)), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_2,c,c), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,d,_1), -product(_2,_3,_1)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(c,add(d,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_0,_3,_2), -product(_0,additive_identity,d), -product(_4,c,d), -product(_3,_4,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,_4), -product(_4,_3,d), -product(_5,_2,_2), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,d), -product(additive_identity,additive_identity,_1), -product(_1,_0,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(_0,add(additive_identity,d),_0), -product(add(additive_identity,d),_0,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_0,_5,_1), -product(c,_5,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,d), -product(d,_0,c), -product(_1,d,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,_2,add(_0,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,_1,_2), -product(c,additive_identity,_2), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,additive_identity), -product(additive_identity,_0,c), -product(_2,additive_identity,d), -product(_2,_0,_2)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(d,_2,d), -product(d,d,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(c,additive_identity,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_1,d,c)]
[-product(add(_0,_1),c,_1), -product(c,add(_0,_1),_2), -product(_2,c,c), -product(c,_0,d), -product(_2,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,c,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_0), -product(_0,_0,c), -product(d,d,d)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d), -product(_2,_3,c)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(add(_0,additive_identity),_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,additive_identity), -product(_2,_2,_3), -product(_3,c,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,add(_1,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,c), -product(c,additive_identity,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,c)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_3)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_4,d), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_0), -product(_2,add(_2,_1),_0), -product(_2,_0,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_1,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_2,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,d,add(additive_identity,c)), -product(d,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,c), -product(_8,_7,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(_1,_0,d), -product(_1,c,d), -product(c,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,additive_identity,add(_2,c)), -product(d,_4,d)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_2,_1), -product(additive_inverse(_1),_2,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_2), -product(_4,_3,d), -product(additive_identity,_5,c), -product(_3,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,_1)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(additive_identity,d,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,add(_2,d),additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,add(c,c),_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_0), -product(_0,_1,c), -product(c,_2,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(add(c,_0),add(c,_0),c), -product(add(c,_0),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,add(_0,_1)), -product(_2,_0,_0), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_0,_2), -product(_3,_1,_2)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_0,_4,add(_2,_0)), -product(c,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,_0,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(additive_identity,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_3,add(_5,_2),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),c), -product(_2,_0,c), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,_0,add(_1,d))]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,add(_2,d),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,c,_2), -product(c,_3,c)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,add(_2,_0),_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_1,d), -product(_0,_2,additive_identity), -product(additive_identity,_1,d), -product(_0,c,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,c,d), -product(c,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(d,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(add(_1,c),add(_1,c),_0), -product(add(_1,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_3,_3,_0), -product(_3,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,d,additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(_0,_4,_2)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_3,_4,add(_1,_2)), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,_0),c,_0), -product(c,add(c,_0),c), -product(c,c,c), -product(c,add(c,_0),d), -product(c,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,c)), -product(d,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(_0,add(c,d),c), -product(c,_0,add(c,d)), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,d), -product(_2,_3,additive_identity), -product(additive_identity,_1,d), -product(_4,c,_3), -product(_2,_4,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_2,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_2,d), -product(add(additive_identity,c),add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,c,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,_1,add(c,_0)), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),add(_0,d),_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(d,d,d), -product(d,d,_0), -product(_1,additive_identity,_0), -product(_0,_1,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,add(additive_identity,_0),_1), -product(_1,_2,d)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,additive_identity,c), -product(_0,_2,_0), -product(_1,_3,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(c,_3,c)]
[-product(d,_0,c), -product(add(_1,c),d,d), -product(_2,d,_1), -product(add(_1,c),_2,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,d,c)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(add(c,_0),_0,c), -product(add(c,_0),add(c,_0),_1), -product(_1,_0,d), -product(_2,add(c,_0),add(c,_0)), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,_1), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_0,_2), -product(_4,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_0), -product(c,additive_identity,d), -product(_2,d,c), -product(_0,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_2,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,add(_3,c),_3), -product(_0,_2,_0), -product(_0,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,add(_3,c),_3)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_0,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,c,_0), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(add(_3,_1),add(_3,_1),c), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,d), -product(_1,_2,_2), -product(_3,d,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_4), -product(_4,_3,d), -product(_3,_5,c), -product(additive_identity,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_2,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_3,_0,_0), -product(_3,d,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(c,c,add(_2,d)), -product(add(_2,d),c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(_0,c,c), -product(c,d,additive_identity), -product(_0,c,_0), -product(_0,additive_identity,d), -product(c,d,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_1,_2,_0), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_1,add(c,c),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(add(d,_0),_0,c), -product(add(d,_0),add(d,_0),d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(c,_0),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,_2), -product(d,_2,d), -product(_2,add(_1,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,d), -product(_3,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(c,_2,c)]
[-product(_0,_0,additive_inverse(_0)), -product(additive_inverse(_0),_0,c), -product(_1,_0,_0), -product(_1,additive_inverse(_0),d)]
[-product(c,_0,c), -product(c,_1,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(add(c,_1),add(c,_1),c), -product(add(c,_1),additive_identity,d)]
[-product(_0,_1,c), -product(_2,add(_2,_1),_2), -product(_0,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,_3), -product(_3,add(_2,c),d), -product(_3,_3,d), -product(_3,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,c,additive_identity), -product(d,_1,_0), -product(d,additive_identity,d), -product(_2,c,c), -product(_0,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,_1), -product(c,_0,c), -product(_0,add(_1,d),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_0,_1,add(c,d)), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_1,_1,_0), -product(_1,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(_1,_0,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,d), -product(_0,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_1,_2)]
[-product(_0,_1,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_2,add(c,_1),c), -product(c,_2,c)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_0,d), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,_0,d), -product(c,c,_1), -product(_1,_0,c), -product(_0,add(_0,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_2), -product(_2,_0,d), -product(c,c,_1)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,c,additive_identity), -product(_0,_0,_0), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(c,_1),c), -product(c,_2,add(c,_1)), -product(add(c,_1),add(c,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,_3,_5), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_0,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_0,add(_2,additive_identity))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,c), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,add(c,_0)), -product(_0,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(_1,add(c,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(d,_0,additive_identity)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(d,_0,d), -product(d,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_0,_5,_2), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,d,d), -product(_0,_0,additive_identity)]
[-product(c,add(_0,_1),_1), -product(_2,c,additive_identity), -product(additive_identity,add(_0,_1),c), -product(_2,_0,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,_1,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(_0,_5,_2)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,_4), -product(_0,_3,add(_2,c)), -product(_0,_4,d), -product(_0,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_3,c), -product(c,_3,additive_identity)]
[-product(_0,d,c), -product(_1,d,c), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,_0,_1), -product(_0,d,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_6,add(_5,_2),_7), -product(_8,_6,_3), -product(_8,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_3,_0), -product(_2,_4,_2), -product(_5,_1,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_4,_5,add(_3,c)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_3,_2), -product(c,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(additive_identity,_0,d), -product(_1,additive_identity,d), -product(d,_0,c), -product(_1,_1,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,d), -product(_0,_0,c), -product(_0,add(d,additive_identity),_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,_0,add(_0,_0)), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_0,add(_4,_1)), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,c), -product(c,_3,d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(c,_0,_3), -product(_3,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(add(c,c),_0,c), -product(c,add(c,c),add(c,c)), -product(_0,c,c), -product(add(c,c),c,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,_4,add(_0,c)), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,additive_identity,c), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,additive_identity), -product(_0,_1,d)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),add(_0,_0)), -product(_2,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(d,_0,additive_identity), -product(c,d,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(add(c,_1),add(c,_1),_0), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(c,d,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(d,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,c), -product(c,_1,d), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(_1,c,additive_identity), -product(_0,_1,_0)]
[-product(_0,additive_identity,c), -product(_0,_0,additive_identity), -product(additive_identity,additive_identity,d)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,_0,_1), -product(_5,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_0,add(d,additive_identity)), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(c,add(additive_identity,d),_0), -product(add(additive_identity,d),c,c)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,c,additive_identity), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,_1)]
[-product(_0,add(d,c),c), -product(c,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),c), -product(_0,c,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,d), -product(c,_0,_0), -product(additive_identity,d,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_1), -product(_1,_0,d), -product(_0,_2,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_0,_2,c), -product(_0,_1,d), -product(c,d,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,c,_0), -product(c,_0,d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,d,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,c,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,add(c,_1)), -product(add(c,_1),_1,d), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(c,c,d), -product(c,additive_identity,d), -product(c,_2,c)]
[-product(_0,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,c,d), -product(additive_identity,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,add(d,additive_identity),_0), -product(_0,_2,c)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_1,_4), -product(additive_identity,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_1,_1,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_1,additive_identity), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,add(c,_0),additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_3,_1,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_0,_2), -product(_6,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),c), -product(c,c,additive_identity)]
[-product(_0,_0,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,d,_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,c,d), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,c,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,_3,add(_1,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(c,_0,d)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_3,c),_3), -product(_2,_3,additive_identity), -product(additive_identity,add(_3,c),d), -product(_2,_3,_2)]
[-product(_0,additive_identity,c), -product(_1,d,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_3,_4,add(c,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_0)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,d), -product(_0,_0,_0)]
[-product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,add(c,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,_2), -product(_2,_0,d), -product(_1,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(c,_0,additive_identity), -product(d,c,d), -product(d,_0,c), -product(_0,_0,add(c,additive_identity))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,c)), -product(c,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_4,_1), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,additive_identity), -product(additive_identity,add(c,_0),d), -product(add(c,_0),add(c,_0),add(c,_0))]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,d,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(_0,_2,add(_0,c)), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_0), -product(_0,_2,d), -product(_1,_0,_3)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,c,_0), -product(_1,_0,d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_2,_2,add(c,c)), -product(add(c,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(add(c,c),d,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(d,c,c), -product(c,d,d), -product(add(_0,c),d,_0), -product(c,add(_0,c),c), -product(d,c,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(d,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_1,_2), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,_0,additive_identity), -product(_1,_3,_1), -product(_4,_0,_0)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(_0,d,_1), -product(additive_identity,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_2,_2,add(_4,c)), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,additive_identity), -product(_0,_2,_1), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(additive_identity,_1,add(_1,c))]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(_2,_0,c), -product(_2,_1,d), -product(d,_2,c)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,add(c,additive_identity),c), -product(c,d,add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,d,_0), -product(d,_2,_3), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_2,additive_identity), -product(_2,c,_3), -product(_3,_2,d), -product(_2,_2,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_1,_3,add(d,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_0,_0,_0), -product(_0,add(_2,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(c,c,add(d,_1)), -product(add(d,_1),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(d,additive_identity,d), -product(_1,d,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(d,d,_0), -product(d,_0,d), -product(_1,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(add(d,_0),d,d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),add(d,_0),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_0,_5,add(_3,c)), -product(_0,_5,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,c), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,add(c,_1)), -product(add(c,_1),_0,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_0,_5), -product(_5,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(d,d,c), -product(add(c,c),d,d), -product(add(c,c),d,add(c,c)), -product(add(c,c),add(c,c),_0), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,d), -product(_1,_2,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(_1,add(_0,_0),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,_2), -product(_2,add(_2,c),_3), -product(_3,_2,d), -product(add(_2,c),_3,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,c), -product(d,d,d), -product(c,additive_identity,additive_identity)]
[-product(add(d,_0),_1,_0), -product(d,add(d,_0),_2), -product(_2,_1,c), -product(d,d,d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_0,add(d,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,c), -product(_0,_2,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_0,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,add(d,additive_identity),_0), -product(_0,_3,_0)]
[-product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,additive_identity), -product(_2,_3,_2), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(c,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_0,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,additive_identity,d), -product(_1,d,c), -product(additive_identity,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_0,add(c,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_3,d), -product(_1,_4,_3), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,c,c), -product(c,_0,d)]
[-product(_0,_0,c), -product(c,c,additive_identity), -product(_0,c,_0), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_0,_1,_5), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(_1,_1)), -product(c,_2,c)]
[-product(add(_0,c),_0,c), -product(c,add(_0,c),add(_0,c)), -product(_0,add(_0,c),c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_4,add(_3,c),_5), -product(_6,_4,_1), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(_0,_3,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_2,add(additive_identity,_1))]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,_1,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(c,_1,d), -product(c,c,_0)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,additive_identity,d), -product(c,_2,add(_2,_1))]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,add(_1,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(c,c,_0), -product(c,additive_identity,d), -product(c,c,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(add(_2,c),add(_2,c),c), -product(add(_2,c),c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),d), -product(add(d,_0),d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,add(c,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(c,add(_0,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_4,d,c), -product(_2,_4,_3)]
[-product(_0,_0,additive_inverse(d)), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,add(c,c))]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,add(_0,_1),_0), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_0,_1,_3), -product(_3,additive_identity,d), -product(_0,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(add(_2,c),_2,_3), -product(_0,add(_2,c),_0), -product(_0,_3,d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,d), -product(_1,_0,d), -product(_0,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_1,add(c,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_0,_1),_0), -product(_0,_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_1,add(_4,additive_identity)), -product(_2,_5,_0)]
[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,additive_identity), -product(_0,_1,d), -product(_1,_0,_2), -product(_0,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,d,d), -product(_2,_2,_1), -product(_1,_1,_3), -product(_3,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(add(_1,_1),add(_1,_1),c), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(add(_1,c),_1,_2), -product(_0,add(_1,c),c), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,d), -product(d,d,c), -product(d,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(_0,d,add(d,d)), -product(add(d,d),_0,add(d,d)), -product(_0,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(_2,add(_2,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_0,add(_0,_1)), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,d), -product(d,c,c), -product(d,d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,add(_2,_0),_5), -product(_0,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,add(_2,c),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_1,add(additive_identity,c),_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_0,_4,add(d,_1)), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_0,add(_0,_1),_3), -product(c,_3,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,add(_0,_2),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_3,_7,add(_5,c)), -product(_6,_7,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_inverse(_1),d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(additive_identity,c),_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_1,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(additive_identity,d,_2), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(c,additive_identity,d), -product(_1,d,c), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_2,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,_1,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,add(_2,_1),_2), -product(_0,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,c)), -product(_0,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,c), -product(c,c,_0), -product(_0,_1,d)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,c,d), -product(_4,_0,_2), -product(_3,_4,_3)]
[-product(d,_0,c), -product(_1,_0,additive_identity), -product(d,_1,_0), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,add(_0,d),additive_identity)]
[-product(_0,d,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,c,c), -product(_0,_2,_1)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),add(_0,d),_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,additive_identity), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,d,_0), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,add(c,_0),add(c,_0)), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,add(additive_identity,_0),_1), -product(_1,_2,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(add(additive_identity,c),_0,c), -product(d,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),d,d)]
[-product(_0,_1,c), -product(_1,_2,_0), -product(c,_2,d), -product(_2,add(_0,_1),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d)]
[-product(additive_identity,c,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_0,c)]
[-product(c,additive_identity,c), -product(_0,_1,_1), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,d,additive_identity)]
[-product(c,c,additive_inverse(_0)), -product(c,c,c), -product(c,_1,_0), -product(additive_inverse(_0),_1,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,_1), -product(_2,_0,_0), -product(_2,_1,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(_1,_0,_0), -product(_1,c,d), -product(_0,additive_identity,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,add(_2,_0),_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,c,_7), -product(_8,_6,_2), -product(_8,_7,additive_identity)]
[-product(_0,c,c), -product(_1,c,additive_identity), -product(_0,_1,_2), -product(_2,c,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_2), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(d,_0,additive_identity), -product(additive_identity,_0,c), -product(d,_1,d), -product(_1,_0,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,_1), -product(_4,_3,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,d,c), -product(_1,_3,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(add(c,_1),add(c,_1),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(d,d,c), -product(_2,_3,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,c,d), -product(c,_3,add(_1,c)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_0,d), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(c,_2,c), -product(c,_3,d), -product(_2,_4,_1), -product(c,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,_3,d), -product(c,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_0), -product(_0,_5,_0)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_2,_0), -product(_0,_3,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_2,_0), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(c,c,c)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,c,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,c,add(d,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_0,c)), -product(add(_0,c),_0,d), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_3,add(_0,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(_5,_1,add(_0,_1)), -product(_5,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,c), -product(c,_2,d), -product(_1,_1,_1), -product(_4,_2,c)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(d,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),_2), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_0), -product(d,_1,d), -product(d,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,add(_1,additive_identity),c), -product(c,_2,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_4,_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_inverse(c)), -product(_2,_3,_5), -product(_5,_4,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(d,c,_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_2,_2,_1), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,additive_identity,_3)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_4,d), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_0,c,d), -product(additive_identity,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(_0,d,additive_identity), -product(additive_identity,_0,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,_0), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,c,d), -product(c,add(_0,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,d), -product(d,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_2,_1),_2), -product(c,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,_2,add(c,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,_0,d), -product(_0,_0,add(additive_identity,d))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,_0,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(c,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_0,add(_2,additive_identity)), -product(c,_5,_0)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(add(c,c),add(c,c),_0), -product(_0,add(c,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_0,c,_3), -product(_2,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(additive_identity,_0,_3), -product(_3,_1,c), -product(additive_identity,_4,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,add(additive_identity,_1)), -product(add(additive_identity,_1),_1,d)]
[-product(_0,_1,additive_identity), -product(c,_0,_0), -product(_0,_1,c), -product(c,_2,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_0,_3,_2), -product(_0,additive_identity,d), -product(_4,d,c), -product(_2,_4,_3)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_2,_3,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,_0,_1), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_1,add(d,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,add(d,_1),d), -product(_0,_2,_2), -product(_3,_2,_0), -product(_3,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_1,_0), -product(c,add(_0,additive_identity),c), -product(c,_1,d)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,add(additive_identity,_0))]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,c), -product(_0,c,d), -product(_1,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(d,c,c), -product(c,_0,d), -product(_0,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,_4,add(_3,c)), -product(_3,_4,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_4,_1), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(d,_0,add(_0,d)), -product(add(_0,d),d,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_1,add(_1,_0))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,_1), -product(_0,_1,_0), -product(_0,_1,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_2,d), -product(_3,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,c), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,add(_0,_2)), -product(add(_0,_2),_3,additive_identity)]
[-product(d,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,d), -product(_0,_0,d), -product(d,d,_1), -product(_0,_1,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,_0), -product(c,c,d)]
[-product(c,additive_identity,c), -product(c,c,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_1,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,c,_1), -product(_2,_0,c), -product(_2,_1,d)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_0,c), -product(_0,_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,_1), -product(additive_identity,_0,_0), -product(additive_identity,_1,d), -product(_1,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,add(d,_0))]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,add(_4,additive_identity),_1), -product(_0,_5,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,d), -product(_3,add(c,c),_0), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),_3), -product(_3,add(_2,c),d), -product(add(_2,c),_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,add(_1,c),_1), -product(c,_0,_2), -product(_2,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d), -product(add(additive_identity,c),_1,_1)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(add(_1,d),add(_1,d),_0), -product(add(_1,d),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(add(_2,c),_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,additive_identity,d), -product(additive_identity,_0,_1), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_0,_0,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,add(_0,additive_identity))]
[-product(_0,_0,additive_identity), -product(_1,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_0,c), -product(_1,_2,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_0,_0,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,add(_0,additive_identity))]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,add(_3,_0),_5), -product(_0,_5,additive_identity)]
[-product(d,c,c), -product(_0,d,d), -product(_1,d,additive_identity), -product(_0,_1,_0), -product(_2,d,_0), -product(_2,c,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(d,add(c,c),additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_1,_0), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(c,c,add(_3,_1)), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_1,_2), -product(additive_identity,_0,d), -product(d,_1,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,_0), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,add(_4,c),_4)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,c), -product(_0,d,d), -product(c,_0,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,add(_0,_1),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_4,_0), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,_0), -product(_0,_2,d), -product(_0,c,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,additive_identity,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_2,_4,add(_3,_1)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,add(c,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,add(_4,_1),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,add(c,_0),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,c), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(_2,c,add(c,_1))]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,additive_identity,add(_3,c)), -product(_1,_6,_1)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(add(c,c),add(c,c),c)]
[-product(_0,_1,c), -product(add(_1,c),_0,_0), -product(_2,_0,add(_1,c)), -product(_2,c,d), -product(add(_1,c),_2,_3), -product(_3,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_3), -product(_3,_1,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_0,additive_identity), -product(d,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_2), -product(_2,_3,_2), -product(_2,_2,d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_5,_3,_2), -product(_5,add(_4,c),d), -product(_6,_5,_2), -product(_6,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_2), -product(_1,_0,_2), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(c,d,c), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(_0,c))]
[-product(_0,d,c), -product(_1,d,c), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,_1,_0), -product(_0,d,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_4,_5,_4), -product(d,_5,additive_identity)]
[-product(_0,add(c,c),c), -product(d,_0,_0), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,d), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_2), -product(_4,_3,_2), -product(_4,_2,d), -product(additive_identity,c,_5), -product(_3,_5,additive_identity)]
[-product(d,_0,c), -product(_1,d,additive_identity), -product(d,_1,_2), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,d,c), -product(d,_1,c), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,c,_0), -product(_0,d,d), -product(_0,d,c), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,c,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(d,d,d), -product(d,_1,_0), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,d), -product(_0,_2,add(_1,_0)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_3,_3,_0), -product(_3,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_0), -product(_2,add(_2,_1),_0), -product(_2,_0,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,additive_identity,c), -product(c,_1,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,c,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_4,_5,add(_2,c)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(add(_1,_0),_2,_1), -product(c,add(_1,_0),_3), -product(_3,_2,d), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,add(_2,_1)), -product(_0,add(_2,_1),_0), -product(_0,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,additive_identity,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_0,_1), -product(c,add(_1,d),_0), -product(_2,c,c), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,_3,d), -product(_0,_1,add(_3,additive_identity))]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(_0,_5,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,add(_3,c),additive_identity), -product(_1,_6,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,_1,additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(c,_0,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,c,_0), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(c,d,c), -product(d,d,_0), -product(c,d,additive_identity), -product(additive_identity,d,d)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_2,additive_identity), -product(d,_3,d), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,add(_0,_1),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_3,add(_0,_1),c), -product(_3,_2,d), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(_3,additive_identity,d), -product(c,_3,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(d,additive_identity,_0), -product(_0,d,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_4,_2), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,additive_identity,_2), -product(_3,_0,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(c,_0)), -product(c,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_5,_6,add(_5,_2)), -product(d,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_4,_5,add(_3,c)), -product(_1,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(additive_identity,_2,_0), -product(_1,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,c,_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,add(_3,c)), -product(_4,_0,_2), -product(_4,add(_3,c),d), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,add(d,additive_identity))]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(add(d,c),d,d), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,c,d), -product(c,_2,c), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_3,_4,add(d,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),d,d)]
[-product(_0,_1,c), -product(add(d,c),_0,_0), -product(add(d,c),add(d,c),d), -product(add(d,c),add(d,c),add(d,c)), -product(d,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,add(_4,c)), -product(add(_4,c),_3,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_0,_0,_2), -product(_2,add(additive_identity,_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_5,add(d,c),_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_3,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_3,d), -product(add(additive_identity,c),_2,_2)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_3), -product(_3,add(_1,_2),c), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,additive_identity,_2), -product(_0,c,_0), -product(_0,_2,d), -product(_0,_0,additive_identity)]
[-product(d,d,additive_inverse(_0)), -product(additive_inverse(_0),d,c), -product(_1,_1,_0), -product(d,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,add(_4,c))]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_3,add(_1,_0)), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_1,_2), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,c,d), -product(c,add(_0,c),_1), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_0,add(d,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(c,_2,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(_2,c,c), -product(_2,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_5,_6,add(_3,c)), -product(d,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,_2), -product(_2,_0,d), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_6,_3,add(_5,c)), -product(_2,_6,_2)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,add(c,_0),c)]
[-product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(c,additive_identity,c), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_1,c), -product(_5,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,add(d,additive_identity),d), -product(c,_0,_0), -product(d,_0,c)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(additive_identity,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_4,add(_2,c),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,add(_0,d),additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d)]
[-product(d,d,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_2,c), -product(_2,c,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_0), -product(_4,_2,_0), -product(_4,_0,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_4,_3), -product(_2,add(_3,c),_5), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_1,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,_3,additive_identity), -product(_1,_6,_1), -product(_7,_0,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_3,_0), -product(_0,_5,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,c), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,c)]
[-product(_0,d,additive_identity), -product(d,_0,_0), -product(_0,d,c), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_2,c)), -product(_3,_2,_2), -product(_3,add(_2,c),d), -product(add(_2,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(add(c,_1),_0,d), -product(add(c,_1),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,additive_identity,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(c,_3,c), -product(_4,_2,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,additive_identity,_3), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,c,d), -product(_3,_5,_2), -product(_4,_6,c)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,additive_identity,_1), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,_0,d), -product(d,additive_identity,d), -product(_1,d,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,additive_identity,d), -product(_4,_0,_2), -product(_3,_4,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,c,d), -product(d,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(_2,d,d), -product(d,add(_2,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,_2,d), -product(c,add(additive_identity,_1),_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,d), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2), -product(_3,c,c)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,add(_3,_0),_1)]
[-product(_0,add(_0,_1),_1), -product(d,_0,_2), -product(_2,add(_0,_1),c), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,c), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_2,_0), -product(_2,_0,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,add(c,_1)), -product(_0,_2,_0)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_3,d), -product(_3,add(_3,_2),_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_1,_0), -product(_5,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(add(c,_1),_0,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,add(additive_identity,c),d), -product(_2,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(c,_2,add(_1,c)), -product(d,_2,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(add(c,_0),add(c,_0),c), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,_2,add(_0,_1)), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,_1,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_0,add(d,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,add(_3,c),_3), -product(d,_2,add(_3,c)), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,c,add(_1,additive_identity))]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,additive_identity,_0), -product(_0,_4,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,_2,c), -product(c,_3,c)]
[-product(add(_0,_0),_0,c), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,c,d), -product(add(_0,_0),_1,_2), -product(_2,add(_0,_0),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(additive_identity,_1,c), -product(_0,_1,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,d,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,_3,c), -product(_2,_5,_2)]
[-product(c,additive_identity,c), -product(additive_identity,_0,c), -product(c,c,d), -product(_0,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_1,d),_0,_1), -product(_0,add(_1,d),_0), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_0,c)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,add(_2,additive_identity),_1)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_2,c,additive_identity), -product(d,_2,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_1,d), -product(_1,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,add(_0,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,d), -product(d,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_3,additive_identity,_1), -product(_3,_2,d), -product(_1,_3,_1), -product(_4,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(add(_2,c),_2,d), -product(_1,add(_2,c),_1), -product(_3,_1,_1), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),d,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,c,_0), -product(add(c,c),_0,d), -product(_0,add(c,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),d,additive_identity)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(_2,c,_1), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(c,d,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_2,_3,add(_1,c)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_0), -product(c,_1,_2), -product(_2,_0,d), -product(_0,_1,c)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),d,_0), -product(c,d,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,c), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(_2,add(c,_1),c)]
[-product(_0,d,c), -product(c,_1,d), -product(_0,c,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_0), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_1,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,d), -product(_0,_0,d), -product(d,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,_1), -product(c,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,add(d,_0),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_2,add(_1,c),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(add(c,c),add(c,c),_0), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,d)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(c,c,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,c), -product(c,_0,add(_0,c)), -product(c,add(_0,c),d), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_5,_2), -product(additive_identity,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(c,c,add(d,_1)), -product(add(d,_1),c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,c,add(c,_0)), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_0), -product(_0,_5,_0)]
[-product(_0,_0,additive_identity), -product(_0,_0,d), -product(d,_0,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(c,_5,_2)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_1), -product(add(_0,c),c,d), -product(add(_0,c),_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0), -product(_2,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,_2)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_2,add(_1,c),_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,add(_1,c),_1), -product(c,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(c,add(_2,d),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(_1,_0,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_1,add(_0,_0),c)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,_2), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(add(_4,c),add(_4,c),_2), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0), -product(_3,_2,_1)]
[-product(additive_identity,c,c), -product(c,additive_identity,additive_identity), -product(c,c,_0), -product(_0,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,d,d), -product(additive_identity,d,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_0,_3,add(c,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_2,_4,add(_3,_1)), -product(_3,_4,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(_0,d,add(_0,additive_identity))]
[-product(_0,_1,c), -product(_0,_0,_1), -product(_1,_1,c), -product(_0,additive_identity,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,add(_1,d),_0), -product(c,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_4,_2), -product(additive_identity,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,add(d,d),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_0,_5,add(_4,c)), -product(_0,_5,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_0,d), -product(c,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_2,_1,_0), -product(_2,additive_identity,additive_identity)]
[-product(c,d,d), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,_0,d), -product(_0,additive_identity,_0)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),_0,add(_0,c)), -product(_1,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_5,_1), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,additive_identity), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,add(_1,additive_identity),d), -product(d,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,d), -product(_2,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,add(d,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,_5,_2), -product(c,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_3,d), -product(_3,_0,add(_3,_2))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_1,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(d,d,c), -product(d,d,d), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,d,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,c), -product(c,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_3,_0,_2), -product(_1,_3,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(c,additive_identity,d), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(c,_5,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,_0),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,d), -product(_4,_3,d), -product(_3,c,_5), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_1,c), -product(_1,c,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,add(additive_identity,c)), -product(_3,_2,_1), -product(_3,add(additive_identity,c),d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_3,c), -product(_2,_4,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(add(_2,c),add(_2,c),_0), -product(add(_2,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_0,additive_identity,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,add(d,d),add(d,d)), -product(_0,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(c,_2,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,add(_4,c),additive_identity), -product(_1,_6,_1)]
[-product(_0,_1,c), -product(_2,_2,additive_identity), -product(_0,_2,_1), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_0,add(_2,additive_identity)), -product(_0,_5,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,_0)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,d)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_5,c), -product(c,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,c,d)]
[-product(add(_0,_1),_1,c), -product(_2,_0,add(_0,_1)), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_0), -product(c,additive_identity,d), -product(_2,c,d), -product(_1,_2,_0)]
[-product(d,additive_inverse(_0),c), -product(_1,_1,_0), -product(d,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_0,c), -product(_0,_0,add(c,_0)), -product(add(c,_0),_0,d), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,_1), -product(c,_3,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_1,add(d,d)), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,d)]
[-product(d,_0,c), -product(_1,_2,add(_2,_0)), -product(add(_2,_0),_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,d,c), -product(d,_0,_0), -product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,d), -product(_1,_0,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,c), -product(c,_1,c), -product(_2,c,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_1), -product(_2,_1,_0), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_0,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(d,_0,d), -product(_1,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_1,add(_4,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,add(_1,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_0,_1,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,d), -product(d,d,c), -product(_0,_0,d)]
[-product(_0,_1,_2), -product(_3,_0,add(_4,_2)), -product(add(_4,_2),_1,c), -product(_3,_4,d), -product(_3,_3,_5), -product(_5,_0,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,additive_identity,c), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,c), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(c,_5,_2)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_0)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_2,_1), -product(d,_2,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_5,c), -product(c,_5,additive_identity)]
[-product(d,add(d,c),c), -product(d,d,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(d,c),d), -product(_2,_2,_2), -product(_2,d,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_0,_0,_1), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_3,d), -product(_1,_4,_2), -product(c,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(c,c,add(d,c)), -product(add(d,c),c,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(add(additive_identity,_1),add(additive_identity,_1),_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,add(_1,d),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,d), -product(_0,_0,d), -product(_1,additive_identity,d), -product(d,_1,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,add(_3,c)), -product(add(_3,c),_2,d), -product(_1,_1,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,c,_3), -product(_0,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_3,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(c,_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(c,_1,d), -product(add(_1,_2),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_1,_2,add(d,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,d), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,add(additive_identity,c),additive_identity), -product(_1,_3,_1)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,add(_0,c),add(_0,c)), -product(_1,c,d), -product(_1,add(_0,c),additive_identity)]
[-product(d,_0,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_1,d,_0), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_1,_2,add(_1,c)), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_0), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,_0), -product(d,c,c), -product(d,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,_0)]
[-product(_0,add(_1,_2),_2), -product(d,_0,_1), -product(_1,add(_1,_2),c), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(_0,add(_0,c),c), -product(c,_0,_0), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(c,_0,c)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,c,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_2,c)]
[-product(c,c,d), -product(d,c,c), -product(add(_0,d),_0,c), -product(c,add(_0,d),c), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,_2,d), -product(_2,add(_2,additive_identity),_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,additive_identity,_2), -product(_2,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,_1), -product(_1,_0,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_1,_2), -product(_4,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(_0,_1,c), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(_1,d,d), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(_0,additive_identity,_3), -product(_3,_1,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,add(_3,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_0,_2,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),d,_0), -product(add(_0,c),d,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),_3,d), -product(_2,add(d,c),add(d,c)), -product(_4,_2,_2), -product(_4,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_0,_1,_2), -product(_2,d,d), -product(_1,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_2), -product(_2,d,d), -product(_1,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_3,_4,add(c,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(add(_1,_0),_1,_2), -product(_0,add(_1,_0),c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(additive_identity,_0,d), -product(_1,additive_identity,d), -product(d,_0,c), -product(_1,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(_2,add(d,_0),add(d,_0)), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(additive_identity,d,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_2,add(additive_identity,c)), -product(d,_3,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_0,_1,_1), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),_2), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,add(_3,additive_identity),_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,additive_identity,d), -product(additive_identity,add(_1,c),_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,c,d), -product(additive_identity,_3,d), -product(_4,_3,c)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,add(d,_0),additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_2), -product(add(_0,c),_2,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,_2), -product(_1,_4,add(d,c)), -product(c,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_2,add(d,_0),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,add(c,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_2,c), -product(d,_3,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_5,_1), -product(_1,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,_2), -product(_1,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_0,_0,d), -product(_0,d,d), -product(_0,c,additive_identity)]
[-product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,add(_0,_0),_2), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(c,_0,d), -product(c,additive_identity,d), -product(d,d,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_0,_1),_0), -product(c,_0,additive_identity), -product(additive_identity,add(_0,_1),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_0,_1,_1), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_1,c), -product(_1,c,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,c,additive_identity), -product(_2,_4,_2), -product(_5,_3,c)]
[-product(_0,_1,d), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d)]
[-product(c,_0,additive_identity), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(additive_identity,_5,_3), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,d,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(add(_3,c),add(_3,c),_0), -product(add(_3,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_2,_2,add(_4,c)), -product(add(_4,c),_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_2,_0), -product(_2,_3,_2), -product(_2,_2,d), -product(d,add(_0,c),additive_identity)]
[-product(add(d,_0),_0,c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(add(d,_0),_1,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),_2), -product(_3,add(d,c),_2), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(_1,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,c,_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_0,_0,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_1,additive_identity,d), -product(d,_0,c), -product(_0,_1,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_1,_2,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_2,_0), -product(add(_0,_1),_1,additive_identity), -product(additive_identity,_2,d), -product(add(_0,_1),add(_0,_1),add(_0,_1))]
[-product(d,d,c), -product(d,d,d), -product(d,d,add(c,d)), -product(add(c,d),d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,d,_1)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_0,_4,d), -product(_1,_5,add(_4,_2)), -product(_2,_5,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_0,_4,add(_0,_2)), -product(d,_4,additive_identity)]
[-product(add(_0,_0),_0,c), -product(_0,add(_0,_0),add(_0,_0)), -product(_0,c,d), -product(c,add(_0,_0),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,_2), -product(_3,_0,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,add(_0,_1))]
[-product(add(additive_identity,additive_identity),add(additive_identity,additive_identity),additive_identity), -product(additive_identity,add(additive_identity,additive_identity),c), -product(add(additive_identity,additive_identity),add(additive_identity,additive_identity),_0), -product(_0,add(additive_identity,additive_identity),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_4,_5,add(d,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(additive_identity,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,add(_1,_0),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_6,_2), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,additive_identity,d), -product(_3,add(_2,_1),_2), -product(_0,_3,c)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_2,d), -product(_1,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,add(_2,_0),_2), -product(c,_1,c), -product(c,add(_2,_0),d), -product(_0,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_1), -product(_1,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,c,additive_identity), -product(_0,_2,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,c,additive_identity), -product(c,c,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,c), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,_0,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(_1,_2,c), -product(c,_1,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_0), -product(_2,_1,c), -product(_2,_0,d), -product(c,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(d,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(_3,c,c), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(_3,_2,add(_2,c)), -product(_3,d,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),d,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,add(_0,d))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_0,add(_2,additive_identity))]
[-product(_0,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(d,add(_3,c),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(d,add(_0,_0),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,_3,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,add(_2,_1)), -product(c,add(_2,_1),c), -product(c,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_3,_1), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_2,add(_1,_1)), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(c,_3,c)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_2,d), -product(c,_3,add(_1,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(_0,_1,d)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,d,additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,additive_identity,_0), -product(c,_1,c), -product(c,_0,d), -product(_0,d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,c), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,_0), -product(_0,c,c), -product(additive_identity,_1,d), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_3,add(d,_1)), -product(_1,_3,additive_identity)]
[-product(_0,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,c,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,additive_identity), -product(c,_2,_3), -product(_3,_0,d), -product(c,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(d,d,additive_identity), -product(additive_identity,_2,d), -product(_2,c,d), -product(_3,_2,c)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_1,_4), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,c,d), -product(additive_identity,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,add(_1,d)), -product(add(_1,d),_1,c), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,d,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_1,add(_0,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(_0,_3,_1)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_1,additive_identity,_0), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_3,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(c,add(d,_1),additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_0,add(_3,_2)), -product(add(_3,_2),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,c,additive_identity), -product(additive_identity,_2,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,add(_2,_1)), -product(_0,add(_2,_1),_0), -product(_0,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(additive_identity,c),additive_identity), -product(_0,add(additive_identity,c),d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_0,_0,_4), -product(_4,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,_2), -product(additive_identity,_1,_0), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(_3,add(_2,c),d), -product(d,add(_2,c),_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,c), -product(additive_identity,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(c,c,add(_4,_1)), -product(add(_4,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,_2), -product(_3,c,c), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_1,d,_0), -product(c,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,additive_identity,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_4,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_0,_2,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_4,c,_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,_3,c), -product(additive_identity,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_inverse(c)), -product(additive_inverse(c),_2,d)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_3,c,_0), -product(_3,additive_identity,d), -product(_1,_2,add(_2,_1))]
[-product(_0,_0,c), -product(c,c,additive_identity), -product(_0,c,add(additive_identity,_0)), -product(add(additive_identity,_0),c,d)]
[-product(_0,c,c), -product(c,_1,d), -product(_2,add(d,c),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(add(_1,c),_2,_1), -product(c,add(_1,c),_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_0,_2,add(_1,c)), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,d,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,c),_2), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,add(_0,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_1,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(c,add(_1,_0),d), -product(c,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,d), -product(_2,_3,additive_identity), -product(additive_identity,_3,d), -product(_4,_3,c), -product(_2,_4,_2)]
[-product(_0,add(additive_identity,c),c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_2,_0,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,d), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,add(_2,_1),_2), -product(_0,_0,_0), -product(_0,add(_2,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_0), -product(_3,_4,_3)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_0,d), -product(_0,d,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(_0,_2,_1), -product(_1,_0,d), -product(_0,_2,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_4), -product(_4,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,additive_identity,_3), -product(_0,_5,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(_5,c,c), -product(_5,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,add(_3,c)), -product(_1,_2,c), -product(_1,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_2,c,_4), -product(_3,_4,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(d,_0,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),d,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,c,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,_2), -product(_2,_0,c), -product(_1,_3,d), -product(_3,_0,_3)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,add(_0,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(c,_0,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(d,_0,_0)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,add(d,d),additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,c,add(c,_0))]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,add(_1,additive_identity)), -product(_2,_0,d), -product(_2,add(_1,additive_identity),d), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(_0,add(d,d),_1), -product(_2,_0,c), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,additive_identity,d), -product(c,_1,c), -product(_0,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_1,_0), -product(_5,_3,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),c), -product(_2,add(d,_1),c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_1,add(_2,_1),d), -product(_3,_0,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_3,_2,_1), -product(_3,c,d), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_0,add(_1,c),_4), -product(_3,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(additive_identity,_0),additive_identity), -product(_0,add(additive_identity,_0),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(c,_4,c), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,additive_identity,c), -product(_1,_0,d), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(c,_1,d), -product(c,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(add(_4,c),add(_4,c),_2), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,c), -product(_2,add(_2,_1),c), -product(_2,c,d), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,d,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,additive_identity,_2), -product(_3,_0,_2)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,add(c,c),add(c,c)), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,_2), -product(_3,_2,d), -product(_4,d,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(_3,c),_3), -product(_2,_2,_2), -product(_2,add(_3,c),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,additive_identity,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_0,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(d,d,additive_identity), -product(_1,d,_1), -product(d,d,add(additive_identity,c))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,d,additive_identity), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,c,add(_1,_0)), -product(add(_1,_0),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,c), -product(_1,_0,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_2,_3,add(_1,_1)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,_0,additive_identity), -product(_1,_4,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_2,add(_3,c),_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(c,additive_inverse(_0),c), -product(_1,c,c), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(add(additive_identity,_0),c,additive_identity), -product(_0,c,d), -product(add(additive_identity,_0),_0,add(additive_identity,_0))]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,_2), -product(_3,_4,add(d,c)), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,d,additive_identity), -product(c,d,d), -product(_0,c,c)]
[-product(_0,add(_0,additive_identity),additive_identity), -product(_0,_0,d), -product(d,add(_0,additive_identity),c)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_2,additive_identity), -product(_3,_0,_2)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,_2,add(_2,c)), -product(c,_3,_1)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,c),additive_identity)]
[-product(_0,c,d), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,_1,_0), -product(_1,c,_1)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_0,_3,add(_2,_0)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_2,_3,add(_0,_1)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_1,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,add(_0,_1)), -product(c,add(_0,_1),d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,c,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,add(_1,_0),_0), -product(_2,_0,additive_identity), -product(additive_identity,add(_1,_0),c), -product(_2,_1,d), -product(_2,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(_0,_1,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_0,_2,d), -product(_1,_0,add(_2,_0))]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(additive_identity,d,c), -product(d,d,d), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,add(additive_identity,c)), -product(_1,_2,_1), -product(_1,add(additive_identity,c),d)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,add(_1,_0),_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,d,add(_1,additive_identity)), -product(d,_3,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),add(_0,d),add(_0,d)), -product(_0,add(_0,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,_3,c), -product(_2,_5,_2), -product(_6,_4,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,c), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,add(_4,_1),_5), -product(_0,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_2,d,c), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_2), -product(_2,add(_4,c),d), -product(_2,_4,additive_identity)]
[-product(_0,c,c), -product(c,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,d)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,d), -product(d,_1,_1), -product(_2,add(d,_0),_3), -product(_1,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_1,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(_5,add(_0,_1),c), -product(_5,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,_0), -product(_0,_0,add(d,additive_identity))]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(_0,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_1,_2,_0), -product(add(_0,additive_identity),_1,_3), -product(_3,_2,d)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_4), -product(_4,add(_1,_2),c), -product(_3,_1,d), -product(_5,_0,_3), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_0,_0,_3), -product(_3,add(d,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(_0,_1,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_0,_2,d), -product(_1,add(_2,_0),_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,_0,_3), -product(_3,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_1,_2,add(c,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(_0,_0,c), -product(_0,_1,d), -product(_0,d,c), -product(_0,additive_identity,additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(_0,c,d)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,_0), -product(_0,_1,c)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_4,add(_2,_0)), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_0,add(d,_1),_3), -product(_0,_3,additive_identity)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_1,_1,_0), -product(_1,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,d), -product(c,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(c,_0,_3), -product(_3,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,c),_4), -product(_0,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_0), -product(_0,add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,c,c), -product(_0,add(d,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_0,_3,add(_0,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,additive_identity,add(_2,c))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(_2,_0,c), -product(_2,_1,d), -product(_2,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_5,_2,_6), -product(_7,_5,_3), -product(_7,_6,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_0,_1,_1), -product(_0,_1,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,_0), -product(d,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,_5,add(_2,_0)), -product(_0,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,add(additive_identity,c))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,_2,additive_identity), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),c), -product(_4,_3,d), -product(_5,_4,c), -product(_5,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,_5,add(d,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(c,c,d)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_2,_0,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_1,_0,d), -product(c,_1,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_1,d,add(_2,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_5,c), -product(d,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_3,_4,add(_0,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,c,d)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_1,additive_identity,c), -product(_0,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_0,_2), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_1,_1,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_0,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_1,c,c), -product(_1,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,d,add(d,additive_identity))]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,add(_2,_0),_2), -product(d,_1,add(_2,_0)), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_2,_5,add(_3,_1)), -product(_0,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(_1,add(_1,_0),_2), -product(d,_2,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,c), -product(c,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,_2,_1), -product(_3,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(add(_2,d),add(_2,d),c), -product(add(_2,d),c,additive_identity)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(d,add(d,c),c), -product(_0,d,d), -product(_1,d,_0), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(d,c,d), -product(c,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(d,d,c), -product(_0,_1,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,add(_0,additive_identity)), -product(_2,_1,c), -product(_2,add(_0,additive_identity),d), -product(c,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_6,add(_5,c),_3), -product(_2,_6,_2)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(_4,c,c), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(additive_identity,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_0,_1,c), -product(_0,_3,d), -product(_1,_2,_0)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,d,d), -product(c,d,additive_identity)]
[-product(d,add(_0,c),c), -product(_0,d,d), -product(_1,d,_0), -product(_0,_1,_0), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,_3,c), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(add(_2,c),add(_2,c),_2), -product(add(_2,c),additive_identity,d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,_2), -product(_3,_2,d), -product(d,d,_4), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,_0),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,add(_1,c),c), -product(c,_0,_0), -product(add(_1,c),_1,_2), -product(_0,_2,d), -product(_3,_0,c), -product(_3,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,_2,add(_1,c)), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_inverse(c),_2), -product(_3,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,additive_identity,d), -product(_1,_1,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,_0), -product(_5,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_0,c,_4), -product(_0,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,_1), -product(_1,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,additive_identity,add(_2,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(c,add(_4,_1),additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_3,d), -product(add(_2,_1),_0,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,c,add(_2,additive_identity))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_4,add(_0,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(c,_0,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,additive_identity,_3), -product(_1,_6,_1), -product(_7,_0,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,d), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,d,_2), -product(_3,c,c)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,add(c,c)), -product(add(c,c),_1,d), -product(_2,_2,_3), -product(_3,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_4,_5,add(_1,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_1,d), -product(_2,_0,d)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,d,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,d,c), -product(_2,_3,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_2,d), -product(_1,_3,add(_1,_0)), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_0,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(c,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,c,_1)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),c), -product(add(_3,_1),c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(d,_0,_1), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,d), -product(d,_0,c), -product(_1,d,c)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(additive_identity,additive_identity,c)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_0,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(_3,c),_3), -product(_0,add(_3,c),d), -product(_4,_0,_2), -product(_4,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,_2,add(_0,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_0,add(d,additive_identity)), -product(c,_3,_0)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(d,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(c,_4,c)]
[-product(_0,add(_1,additive_identity),additive_identity), -product(_0,_0,_1), -product(_1,add(_1,additive_identity),c), -product(_1,_0,d)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),c), -product(_0,add(additive_identity,_0),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(additive_identity,c,_3), -product(additive_identity,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_1,additive_identity), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,d), -product(c,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_1,_1,_0)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_2,d), -product(_1,_2,_0), -product(_2,_1,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_2,additive_identity)]
[-product(c,_0,c), -product(_0,add(d,_0),d), -product(c,_0,_0), -product(c,d,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(_2,d,_0), -product(_1,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(c,_4,_1), -product(_3,_5,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,add(_1,additive_identity),d), -product(d,_2,d)]
[-product(_0,_1,_0), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_2,_2), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_0,_6,add(_4,_1)), -product(c,_6,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,c), -product(d,_0,d), -product(d,d,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_1,c,c), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,add(d,additive_identity),_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_1,additive_identity), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,additive_identity,_1)]
[-product(d,c,c), -product(_0,d,d), -product(_1,additive_identity,d), -product(_0,_1,_0), -product(_2,d,_0), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_1), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_1,d,_0), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_2,_3,c), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,add(_0,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,additive_identity,_2), -product(_0,_5,_0)]
[-product(add(additive_identity,c),_0,c), -product(d,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d), -product(d,d,add(additive_identity,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,c,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,c,add(d,additive_identity)), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,add(_5,c),_6), -product(_2,_6,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,add(c,_0),c), -product(c,_1,_2), -product(_2,add(c,_0),d), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(_1,additive_inverse(_0),_1), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,d), -product(_3,additive_identity,c), -product(d,_3,d)]
[-product(_0,_1,d), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_1,_1,_1), -product(_3,_0,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_1), -product(_1,_2,d)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(d,_0,d), -product(_0,d,_2), -product(_2,_0,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(_2,_0,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_0,additive_identity,d), -product(_2,d,c), -product(c,_2,_1)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,add(additive_identity,_0),d)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(d,_0,_1), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,c,c), -product(_3,d,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,_2,c), -product(_0,add(_0,_1),d), -product(_3,_0,add(_0,_1)), -product(_3,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,d,d), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,add(_1,_0),_1), -product(additive_identity,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,c,_0)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,add(_2,c),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,add(d,d)), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,additive_inverse(_0)), -product(_2,_0,d), -product(d,_1,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_3,c,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,add(_1,additive_identity),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,add(c,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(c,c,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,_1), -product(_1,additive_identity,_1), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,d,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,_1,additive_identity), -product(_2,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,_2,_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(c,_1,_2), -product(_2,c,additive_identity)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(add(_0,additive_identity),_0,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,add(additive_identity,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,additive_inverse(_2)), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_2,d)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_2,c,additive_identity), -product(_1,_2,c)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,add(c,c),_1), -product(d,_1,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(d,add(d,d),additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(d,d,add(_3,c)), -product(add(_3,c),d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_1,d), -product(_0,_0,_0)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(d,_1,_1), -product(_2,_3,_1)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,d,d), -product(_1,c,_0), -product(_0,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_1,d), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_1,_2,_3), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,d,add(_2,additive_identity))]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_0,_7,add(_5,c)), -product(_0,_7,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_1,_0),_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,_0), -product(_2,additive_identity,d), -product(_0,_1,_1)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_2,_3,add(d,c)), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_2,_4,add(_3,c)), -product(_1,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,add(_0,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,additive_identity), -product(additive_identity,_2,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,_0,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(c,_4,c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,additive_identity,_2), -product(d,_4,d), -product(_5,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,additive_identity,_0)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_3,_1), -product(_2,_0,_2), -product(_2,_3,d), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,d,_1), -product(_0,_4,_2), -product(_3,_5,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(c,_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(d,d)), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,_0,_0), -product(_1,additive_identity,c), -product(_1,_0,d), -product(c,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_2,add(additive_identity,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_1,add(_0,additive_identity),_2), -product(_2,_1,c), -product(_1,_0,d), -product(_1,_1,add(_0,additive_identity))]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(c,_0,c), -product(_1,add(_2,_0),_2), -product(c,_1,_0), -product(_0,add(_2,_0),d), -product(c,d,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(c,_0,_2), -product(_2,_1,d), -product(d,_2,c)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_4,add(_3,_2),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,c,_1), -product(_0,_1,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,add(c,d),_0), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(add(c,d),add(c,d),_0), -product(add(c,d),_0,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(additive_identity,d,c), -product(d,d,d), -product(d,d,_0)]
[-product(_0,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d)]
[-product(c,additive_identity,c), -product(additive_identity,_0,c), -product(c,additive_identity,_1), -product(_1,_0,d), -product(_0,_1,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,_0,add(_2,c)), -product(add(_2,c),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,add(_2,d),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_1,add(d,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1), -product(_3,_5,_2)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_2), -product(_3,_1,d), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(_2,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,_2), -product(_2,c,d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,add(_1,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(c,c)), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_0,_1,_5), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_3,c,_6), -product(_5,_6,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_4), -product(_4,_3,d), -product(_3,c,_5), -product(_4,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_2,add(_3,c),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,additive_inverse(d),d), -product(_0,_0,_1), -product(_1,additive_inverse(d),c)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,_0)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_1,_2,add(d,_0)), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_0,_1,_2), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_0,_6,add(_3,_1)), -product(c,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,additive_identity,add(_2,c)), -product(d,_3,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_1,d), -product(_2,_1,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_0,_2,c), -product(_0,additive_identity,d), -product(_3,_1,d), -product(_2,_3,c)]
[-product(c,additive_identity,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(additive_identity,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(_2,_1,_1), -product(_2,c,d), -product(_1,additive_identity,_1), -product(_1,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_0), -product(_0,add(_3,_1),d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_3,d), -product(_2,_1,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2), -product(_4,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,additive_identity), -product(c,_2,c), -product(c,c,d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,add(d,c),c), -product(d,_0,_0), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(add(c,d),add(c,d),c), -product(add(c,d),c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(c,c,_0), -product(_0,add(d,d),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,_2), -product(_2,add(_1,_0),d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_1,_4,add(_3,c)), -product(c,_4,additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_1), -product(_1,_0,d), -product(add(c,c),_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,add(_0,c)), -product(_2,_3,_2)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0), -product(_3,_5,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(add(_0,d),additive_identity,_0), -product(c,add(_0,d),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(d,d,additive_identity), -product(_1,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,_4,add(d,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_2), -product(additive_identity,c,_2), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,c), -product(d,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(_0,add(c,d),add(c,d)), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_1,c,additive_identity), -product(c,c,d), -product(_1,_0,_0)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(_1,d,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,add(_0,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(add(c,_0),add(c,_0),_0), -product(add(c,_0),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_2,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,d,additive_identity), -product(additive_identity,_1,c)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(c,add(additive_identity,c),_0)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_0,c,_1)]
[-product(c,c,d), -product(d,c,c), -product(_0,_1,c), -product(c,_0,c), -product(c,add(_1,d),_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(c,_1,additive_identity)]
[-product(c,_0,c), -product(_1,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(_0,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0), -product(_3,_5,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_1,_2,_3), -product(_3,additive_identity,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_0,_1), -product(_2,_1,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,c,d), -product(_4,_2,_0), -product(_3,_4,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_3,_4,add(_2,_1)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,add(_1,_0),_1), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(c,c,add(_1,_1)), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_1,_2), -product(c,_3,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,c,c), -product(c,d,d), -product(add(_0,c),_0,d), -product(c,add(_0,c),c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_3,c,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_0,_0,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,additive_inverse(_0),_1), -product(c,_1,d)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,additive_identity,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_1,_3,add(d,_1)), -product(c,_3,additive_identity)]
[-product(c,d,c), -product(d,additive_identity,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(_1,_2,add(c,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_4,_1), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,additive_identity), -product(_0,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(_0,_0,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,c,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(_0,_0),additive_identity)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_0,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,add(_0,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(c,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_0), -product(_0,add(_1,_2),c), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_0), -product(_4,_2,_0), -product(_4,_0,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,add(d,additive_identity),c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_1,d), -product(_1,d,_0)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,additive_identity), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,add(_2,c),_2), -product(c,_1,_0), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,c), -product(c,_3,d), -product(_2,_1,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(_2,_0,add(d,_0)), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,c,additive_identity), -product(_0,_2,_3), -product(_3,c,d), -product(_2,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,_1)]
[-product(_0,additive_inverse(d),c), -product(_1,_2,d), -product(_0,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_2,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_2,d), -product(_2,_2,add(additive_identity,c))]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(add(_0,c),_3,_0), -product(add(_0,c),_3,d), -product(_2,_2,_4), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,d,additive_identity), -product(_1,_4,_1), -product(_5,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_3,_0), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d), -product(_1,add(c,additive_identity),_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(d,_1),d), -product(_0,_2,_2), -product(_3,_2,_0), -product(_3,d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(_3,_0,d), -product(_3,_2,d), -product(_2,_1,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,_1,d), -product(_2,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(c,c,_2), -product(_2,_1,d), -product(_1,_0,add(_0,additive_identity))]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_4,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,_1), -product(_1,c,c), -product(_0,c,d), -product(c,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_1,_1,_2)]
[-product(add(additive_identity,c),add(additive_identity,c),c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),c,additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_4,add(additive_identity,c)), -product(_2,_6,_3)]
[-product(_0,additive_identity,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(d,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(_0,_1,add(_3,c)), -product(add(_3,c),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,_1), -product(_1,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,c,d), -product(additive_identity,_3,d), -product(_2,_4,c)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_1,_0), -product(_3,_2,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,add(c,c),add(c,c)), -product(_0,add(c,c),additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_inverse(c),additive_inverse(c),_2), -product(additive_inverse(c),_2,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_0,_0,_2), -product(_2,add(additive_identity,_1),d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,_4), -product(_5,_3,add(_2,c)), -product(_5,_4,d), -product(add(_2,c),_5,_6), -product(_6,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(add(_5,c),add(_5,c),_2), -product(add(_5,c),_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(c,_5,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,d), -product(_2,d,d), -product(d,add(_2,c),_3), -product(_2,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,_0,additive_identity), -product(add(_0,_0),_0,add(_0,_0)), -product(add(_0,_0),additive_identity,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_1), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_inverse(c)), -product(_1,_2,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,additive_identity,_1), -product(_4,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_1,_3,_2), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(additive_identity,_5,_2), -product(c,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_0,_4,add(_0,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(_3,_1,c), -product(_3,c,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_0,add(_3,additive_identity)), -product(c,_5,_0)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_2,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_3,_0,c), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,_3,d), -product(_3,_3,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,_0),_3), -product(d,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,_0,additive_identity)]
[-product(add(_0,c),_0,c), -product(c,add(_0,c),add(_0,c)), -product(c,add(_0,c),c), -product(c,c,d), -product(d,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_4,additive_identity,_3), -product(_1,_4,_1)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(d,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(d,add(c,d),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_4,add(_2,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_3,_4,add(_0,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,d,_0), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_3,add(_1,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,_2,_1)]
[-product(d,d,c), -product(d,d,d), -product(add(c,d),add(c,d),d), -product(add(c,d),d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_1,add(c,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(d,d,d), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,_0,_2), -product(_2,_1,d), -product(_1,add(c,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_0,_0,_3), -product(_3,add(d,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(c,_0,_3), -product(_3,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,_2), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,add(c,_1),_2), -product(c,_2,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(c,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,_2,d), -product(_2,_2,_0)]
[-product(d,_0,additive_identity), -product(d,d,d), -product(d,_0,c), -product(d,add(d,additive_identity),_0)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,_0,d), -product(_2,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_1,_0), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_0), -product(d,_1,d), -product(d,_0,d), -product(_0,additive_identity,d)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_1,_0), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_5,_3,_2), -product(_5,add(_4,c),d), -product(_2,_3,_6), -product(_6,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,add(c,d)), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,add(_3,c)), -product(_2,add(_3,c),_2), -product(_2,add(_3,c),d), -product(d,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,additive_identity,d), -product(c,_1,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_4,_1,additive_identity), -product(_1,_4,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_0,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,additive_identity,_1), -product(_1,_0,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),_1,d), -product(add(additive_identity,c),add(additive_identity,c),_1)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,additive_identity), -product(c,_2,_1), -product(_1,c,d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_2,_3,add(_1,_1)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,d), -product(_0,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(add(_0,c),_0,c), -product(d,add(_0,c),add(_0,c)), -product(c,add(_0,c),d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,_1)]
[-product(_0,_1,additive_identity), -product(c,_0,d), -product(d,_1,c), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,add(_0,_0),_1), -product(d,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,c,add(_1,_0)), -product(add(_1,_0),c,additive_identity)]
[-product(d,d,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,additive_identity,c), -product(_2,_1,_0), -product(_2,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,add(_2,c)), -product(add(_2,c),_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_1,additive_identity)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_1,_0),_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,d,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(d,d,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_1), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_2,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_3), -product(_4,c,_2), -product(_4,_3,d), -product(_5,_4,_2), -product(_5,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_2,additive_identity), -product(_3,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,_1,add(c,d)), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_2), -product(_2,_1,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,c,c), -product(c,add(d,c),d), -product(_1,c,_0), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_2,c,d), -product(additive_identity,_2,d)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_1,_1,_0)]
[-product(_0,c,c), -product(d,c,_0), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_1,_1,add(_3,c)), -product(add(_3,c),_1,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(add(d,additive_identity),_0,d), -product(c,add(d,additive_identity),add(d,additive_identity)), -product(add(d,additive_identity),c,c)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_0,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_1,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_3,_0,_0), -product(_3,additive_identity,d), -product(_0,add(_2,c),_2)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(d,_0,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,c,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,additive_identity,_0), -product(_1,_4,_1)]
[-product(_0,additive_identity,c), -product(_1,d,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(add(_0,c),add(_0,c),d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,c), -product(_4,add(_3,_1),d), -product(_5,_4,c), -product(_5,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,c,d), -product(_2,_3,_1)]
[-product(d,d,c), -product(_0,d,d), -product(d,d,additive_identity), -product(_0,d,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_1), -product(_1,_3,d), -product(c,c,_4), -product(_4,_2,additive_identity)]
[-product(_0,c,c), -product(d,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_0), -product(c,_0,_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,additive_identity,c), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(c,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,c,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(d,_0,c)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,c,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(c,d,_0), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,additive_identity,_0)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_1,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(d,c,_0), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(additive_identity,_1,c), -product(_1,_1,d), -product(_1,_0,d), -product(_1,_1,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_3,d), -product(_1,_4,_3), -product(c,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(add(_0,_1),add(_0,_1),add(_0,_1)), -product(add(_0,_1),_2,d), -product(add(_0,_1),_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(_0,_2,_0)]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,_1), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,additive_identity,_2), -product(_2,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,_5,add(d,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(add(d,c),add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_3,_4,add(_1,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,_3), -product(_3,_3,d), -product(c,_2,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_0), -product(_0,_0,d), -product(additive_identity,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,d), -product(d,_0,c), -product(d,d,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,add(c,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_0,_3,c)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,additive_identity,d), -product(_0,c,c), -product(c,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,d), -product(_1,_1,d), -product(d,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,_0,additive_identity), -product(d,c,d), -product(d,_0,c), -product(_0,_0,c)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_0,add(c,c),additive_identity)]
[-product(c,_0,c), -product(_0,add(_1,_0),_1), -product(c,_0,_2), -product(_2,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(d,d,additive_inverse(_0)), -product(additive_inverse(_0),d,c), -product(_1,_0,_1), -product(_2,_1,d)]
[-product(_0,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,d), -product(_1,_3,_0)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,_3,add(_1,_0)), -product(_0,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_1,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,_1), -product(_1,_0,d)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(additive_identity,_2,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_2,_1), -product(c,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),c,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,c,d), -product(c,c,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_0,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,_0,add(_0,additive_identity)), -product(c,_1,_0)]
[-product(_0,c,d), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,_0,_1), -product(_1,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_2,_1,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_0,_1,_0), -product(_0,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,d,d), -product(d,add(_0,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,add(_2,additive_identity),_0), -product(_0,_5,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_1,d), -product(_1,d,add(_0,additive_identity))]
[-product(_0,_1,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d)]
[-product(_0,additive_identity,c), -product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,_4,add(_2,c)), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,_0)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(c,_0)), -product(c,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(_0,c,_1), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,d,_0), -product(_1,c,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,add(_1,additive_identity),_0)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_3,add(_1,_2)), -product(c,_3,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,c), -product(d,additive_identity,d), -product(additive_identity,_2,_4), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,_2), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(c,additive_identity,d), -product(_1,c,d), -product(additive_identity,_1,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,additive_identity,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_0,_6,add(_5,_2)), -product(_4,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,add(_3,additive_identity),_0), -product(_0,_5,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(d,_2,d), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_1,_2,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,add(_0,additive_identity),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,d), -product(d,d,c), -product(_1,d,c), -product(_1,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_inverse(_0),_1), -product(_0,_1,d)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,add(_0,c)), -product(_3,_2,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,add(c,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_0,_3), -product(_2,_4,_2), -product(_5,_1,_3)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,_2,add(_0,c)), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_1), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,_1,d)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_0,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(d,d,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(additive_identity,_3,c), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(add(_0,_1),_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_4,_5,c), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_0,_0,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,additive_identity,d), -product(_0,c,c), -product(d,_0,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,add(d,d)), -product(add(d,d),c,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),_0,_2), -product(_0,add(_0,_1),add(_0,_1)), -product(_0,_2,d), -product(_2,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_0,_1), -product(_1,d,d), -product(d,add(c,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(_1,c,c), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,c,c), -product(d,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,c)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,additive_identity), -product(d,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,_0,add(d,additive_identity))]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_0,_2), -product(d,_1,d), -product(d,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,c), -product(_0,_2,d), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,d), -product(d,_0,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,_0), -product(_0,_1,c), -product(c,_2,d), -product(_1,add(_2,additive_identity),_1)]
[-product(_0,_1,d), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,c),_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,additive_identity), -product(_2,_3,_4), -product(_4,_1,d), -product(_2,_0,_3)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,d,c), -product(c,_4,_2)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,c,d), -product(_1,_3,add(_1,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,_4,add(d,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(c,_3,_1), -product(_2,c,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,add(_0,_0),c), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(_3,c,c), -product(_3,additive_identity,d), -product(_0,add(_2,_1),_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,c), -product(_0,c,d), -product(_1,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(c,c,_0)]
[-product(d,_0,c), -product(c,d,d), -product(_0,add(d,c),_1), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(c,_4,c)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_1,_4,add(_3,_1)), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,_0), -product(_3,_5,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_1,_0), -product(_4,_2,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(_0,add(d,c),c), -product(_0,c,additive_identity)]
[-product(additive_identity,add(c,c),c), -product(d,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,_4,add(_3,_1)), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_0,d), -product(_2,c,d), -product(c,add(_1,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,additive_identity,_0), -product(d,_0,d), -product(c,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,c,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(d,add(additive_identity,c),d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,add(d,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_1,add(_2,_0),_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),c), -product(add(_4,_1),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(c,add(_0,d),add(_0,d)), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,add(d,additive_identity),_0), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_0,_1,d), -product(_1,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(_3,additive_identity,d), -product(_4,add(_2,c),_2), -product(additive_identity,_4,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,add(_1,additive_identity),c)]
[-product(c,c,d), -product(d,c,c), -product(add(_0,d),c,_0), -product(c,add(_0,d),c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_0,add(_1,d)), -product(add(_1,d),_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_0,_2,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_0,_3,add(c,c)), -product(_0,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,add(_1,c),_1), -product(c,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,c), -product(c,c,d), -product(_2,add(_2,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(c,_4,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_0,add(d,additive_identity)), -product(_0,_3,_0)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_0), -product(_0,_1,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,c,add(_1,additive_identity))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,_0,c), -product(_0,additive_identity,d), -product(_0,_1,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,add(_1,c),_2), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,additive_identity,d), -product(_0,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,c), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,_1,add(_1,c))]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,_3,_2), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_4), -product(_4,c,d), -product(_5,_3,_2), -product(_5,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(_1,_2,_3), -product(_0,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_5,add(_2,_0)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(c,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,d), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_0,c), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(add(c,c),add(c,c),_2), -product(add(c,c),_2,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(d,_1,c), -product(c,_2,_0)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(d,d,_0), -product(d,d,d), -product(_0,add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,d,add(_1,additive_identity)), -product(d,_2,d)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_1,d), -product(_2,c,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(c,_0,_0), -product(add(_0,c),_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(d,add(_1,_0),_3), -product(_3,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(add(_1,_0),add(_1,_0),c), -product(add(_1,_0),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,_0), -product(_0,_0,d), -product(additive_identity,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_1), -product(_2,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(c,_3,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,add(_3,c)), -product(_0,_2,_0), -product(_0,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,d),_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_0,_1), -product(c,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(c,_2,c), -product(c,add(_3,_1),d), -product(c,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_0,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_0,_2,_5), -product(_5,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(c,_2,c), -product(c,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_2), -product(_2,_3,d), -product(_3,c,_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,_1), -product(d,additive_identity,d), -product(_2,_0,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,_2), -product(_0,_1,d), -product(_1,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(c,_4,c)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,add(additive_identity,c),d), -product(d,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,c,additive_identity), -product(c,c,d), -product(_2,_1,_0), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(add(c,c),add(c,c),_2), -product(add(c,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(c,c,add(_2,c)), -product(add(_2,c),c,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_1,_2,add(d,_0)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_1,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_0,_1), -product(d,_2,_3), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,add(_0,_1)), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_0,_1),_0), -product(_0,_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_0,_1,_2), -product(_2,d,d), -product(_1,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_2), -product(_2,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,add(_2,c),_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,_0,add(_2,d)), -product(add(_2,d),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,d), -product(_0,_0,c), -product(_0,d,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_4,_5,add(_2,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,add(_4,c))]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(_1,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(d,d,additive_identity), -product(_2,d,c), -product(_2,additive_identity,d), -product(c,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_3,d,_1), -product(c,_3,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_1,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(c,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,c), -product(c,_2,c), -product(c,c,d), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,c,_3), -product(_2,_5,_2), -product(_6,_4,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_0,add(_0,_0)), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(additive_identity,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,_1,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,add(c,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_4,_5,add(_0,_2)), -product(_3,_4,_6), -product(_6,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,c,d), -product(_2,_4,c)]
[-product(_0,_1,c), -product(_1,additive_identity,_1), -product(_0,_1,_0), -product(_0,_1,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,_0,_2), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(d,_1),d), -product(_0,_0,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,add(c,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(_1,_1)), -product(_0,_2,_0)]
[-product(d,c,c), -product(d,c,d), -product(d,d,additive_identity), -product(additive_identity,c,d), -product(c,d,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,d,additive_identity), -product(_0,additive_identity,d), -product(_1,_0,d), -product(c,_1,c), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_4,_5,add(_3,c)), -product(_1,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_0,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,_3), -product(_4,c,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_2,_3,_2), -product(_2,add(_4,c),d), -product(_2,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(_0,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_2,d,_0), -product(_2,additive_identity,d), -product(_0,_1,_1), -product(_2,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(c,_2,c)]
[-product(add(c,_0),_0,c), -product(add(c,_0),add(c,_0),additive_identity), -product(additive_identity,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,d,_3), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_0,add(_0,additive_identity),_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_5,_6,_2), -product(_3,_5,_7), -product(_7,_6,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_2,c),_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,additive_identity,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(add(d,_0),_1,d), -product(_0,add(d,_0),add(d,_0)), -product(c,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,c,add(d,_0)), -product(add(d,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(add(_1,additive_identity),_2,_1), -product(c,add(_1,additive_identity),_0), -product(_0,_2,d), -product(_0,c,c)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(c,c,add(_1,_1)), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_1,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_2,_2,add(_4,c)), -product(add(_4,c),_3,d), -product(add(_4,c),_2,additive_identity)]
[-product(d,_0,additive_identity), -product(_0,d,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,additive_identity,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,_4,add(_2,_0)), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(_2,_1,c), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,_3,additive_identity), -product(_4,_0,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,d,c), -product(c,d,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_1,_3,add(_1,d)), -product(d,_3,additive_identity)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,d), -product(_1,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,d), -product(c,_2,additive_identity), -product(additive_identity,_2,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,_0,d)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,c)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_3,add(_1,d)), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,additive_identity,_0), -product(_0,d,c), -product(_1,_0,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(c,_6,_8), -product(_8,_7,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_1,c,d), -product(_0,_1,c)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,c,_0), -product(_1,additive_identity,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_1,add(_2,_1),d), -product(_3,_1,_0), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_0,c)), -product(add(_0,c),_0,d), -product(_2,_2,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_3,_1), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,add(c,_1),c)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_1,additive_identity,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,d), -product(_0,_1,additive_inverse(c))]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_1,d,d), -product(_1,_1,_0), -product(_0,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,additive_identity,d), -product(c,add(_1,_0),_1)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(add(_0,c),add(_0,c),d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,c,d), -product(_2,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_1,additive_identity), -product(additive_identity,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,_1), -product(_2,_0,_0)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_1,add(_2,_0),_4), -product(_3,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,add(_0,d),_1), -product(d,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_2,_2), -product(_3,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_4,_2,_1), -product(_4,additive_identity,d), -product(_1,_2,_1), -product(_5,_0,_3)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_1,add(_0,_0)), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),_0), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,_0,add(_1,d)), -product(c,_2,c)]
[-product(_0,c,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,add(_2,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),d,_1), -product(d,add(_1,_0),_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,add(c,additive_identity),_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(c,_0,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(c,add(_2,c),additive_identity)]
[-product(c,add(additive_identity,_0),_0), -product(d,c,additive_identity), -product(additive_identity,add(additive_identity,_0),c), -product(d,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_2), -product(_2,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,_2,add(_2,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_2,_3,_1), -product(additive_identity,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_0,c), -product(_1,c,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_inverse(_1),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,_0), -product(_1,additive_identity,d), -product(_1,_0,d), -product(d,_1,d)]
[-product(d,_0,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,d,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,_1,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,additive_identity,_0), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_1), -product(d,_0,d), -product(d,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_0), -product(c,_2,d), -product(_2,add(_0,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_0), -product(_2,_1,c), -product(_2,_0,d), -product(c,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(_0,_0)), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,add(_1,additive_identity)), -product(c,_3,_0)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,d,d), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(d,_1,d), -product(_1,add(_1,_0),_2), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,_4,add(_1,c)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(additive_identity,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,d,_1), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(add(_2,d),add(_2,d),_0), -product(add(_2,d),_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_0,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,add(_1,c),c), -product(_1,_0,_0), -product(_0,_0,_1), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(additive_identity,_1,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(_1,_0,d), -product(_0,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(add(c,c),_0,d), -product(_1,_1,_2), -product(_2,add(c,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_3,_4,add(_2,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,_3,add(_0,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,add(d,c),additive_identity), -product(_2,_4,_2)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(add(_0,c),_1,_3), -product(_3,_2,d), -product(c,add(_0,c),additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,_1,add(d,c)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,c)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,c,add(c,_0)), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_6,_2), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(additive_identity,_1,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_2,_0,add(additive_identity,additive_identity)), -product(c,_2,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_7,_8,add(_4,c)), -product(_2,_7,_9), -product(_9,_8,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_1,c,d), -product(additive_identity,_1,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(d,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_1,c), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,c), -product(c,_1,_0), -product(_0,add(c,d),_2), -product(_1,_2,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(add(c,d),add(c,d),c), -product(c,add(c,d),add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,c), -product(c,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,add(c,_1)), -product(add(c,_1),_0,d), -product(_0,_0,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,_2,d), -product(additive_identity,_1,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,c,add(_1,additive_identity)), -product(c,_2,c)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_2,_1,_0)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),_2,_3), -product(_2,add(_2,c),add(_2,c)), -product(_2,_3,d), -product(_3,add(_2,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(c,c,add(_2,d)), -product(add(_2,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,_3,add(_0,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_5,add(_4,c),_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,d,c), -product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,_1,add(_1,_0)), -product(c,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),_0,_0), -product(add(_0,c),_0,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(_2,add(d,_0),c), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_inverse(_1)), -product(c,_2,d)]
[-product(_0,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,add(additive_identity,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(_1,_1),_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(add(c,d),add(c,d),_0), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),_0), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,add(additive_identity,c),_2), -product(_2,_3,_2)]
[-product(_0,add(_0,_1),_1), -product(_2,_0,d), -product(d,add(_0,_1),c), -product(_3,d,_2), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),_3,d), -product(_2,add(d,c),add(d,c)), -product(_2,_2,_4), -product(_4,add(d,c),additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(add(d,d),add(d,d),_0), -product(_0,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),d,_2), -product(d,add(_2,c),_3), -product(_3,d,d), -product(_3,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_2), -product(_0,_1,_3), -product(_3,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_0,c), -product(_2,c,d), -product(_1,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(d,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_2,_2,_5), -product(_5,_3,d), -product(_3,_6,add(_4,c)), -product(_4,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,add(additive_identity,additive_identity),_0), -product(_0,_2,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_1,d), -product(_4,_0,_2), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,c,additive_identity), -product(_0,_2,_0), -product(_1,_3,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_3), -product(_3,_4,d), -product(_3,_4,add(additive_identity,c))]
[-product(_0,_1,c), -product(add(_1,c),_0,_0), -product(_0,_0,add(_1,c)), -product(_0,c,d), -product(_0,_0,additive_identity)]
[-product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,_1), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(c,d,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,_0), -product(d,c,c)]
[-product(d,d,c), -product(d,d,d), -product(_0,add(c,c),_1), -product(_2,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(d,d,additive_identity), -product(_1,d,c), -product(_1,additive_identity,d), -product(c,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,additive_identity,add(d,c)), -product(_2,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_0,additive_identity), -product(_2,c,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_0,d), -product(c,_1,additive_identity), -product(additive_identity,_0,d), -product(c,_0,c)]
[-product(_0,d,c), -product(c,c,additive_identity), -product(_0,c,_0), -product(_0,additive_identity,d), -product(d,c,c)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,d), -product(d,additive_identity,c), -product(additive_identity,_1,_1), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,add(_1,c),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,_2,d), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,c), -product(_0,_3,_1)]
[-product(d,_0,c), -product(_1,additive_identity,d), -product(_2,_1,d), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(c,_0,_5), -product(_5,_0,additive_identity)]
[-product(additive_inverse(c),additive_inverse(c),c), -product(c,additive_inverse(c),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_1,_3), -product(_4,_0,_2), -product(_4,_3,d), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,c,additive_identity), -product(c,c,d), -product(c,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,_0,d), -product(_1,_2,_0)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,_1),additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_0,_2,_1), -product(c,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_0), -product(d,d,c), -product(d,_0,d)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_2,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),_0,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_1,add(d,_1),additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,d,d), -product(_2,_2,_4), -product(_4,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,_1,d), -product(_0,add(c,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_0,add(d,d)), -product(add(d,d),_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(d,_2,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(add(_1,_0),_2,_1), -product(c,add(_1,_0),_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0), -product(_2,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(add(_0,_1),_0,_1), -product(_0,add(_0,_1),_0), -product(_0,_0,c), -product(c,add(_0,_1),d), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_1,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(_1,additive_identity),_1,_2), -product(_3,add(_1,additive_identity),_0), -product(_3,_2,d), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,d), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_2,_2,_1), -product(_1,_2,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(_0,add(_0,c),additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,_0), -product(c,_1,_0)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(c,d,d)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_0), -product(_0,_2,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_1,_2,_0)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_3,add(d,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_0,_2), -product(c,_3,_0)]
[-product(_0,_1,d), -product(_0,_0,add(_1,d)), -product(add(_1,d),_1,c), -product(add(_1,d),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,d), -product(additive_identity,_2,d), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_2), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,_0),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,_2,add(_1,_1)), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(add(_2,c),add(_2,c),_2)]
[-product(_0,d,c), -product(_1,d,_0), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,c,_1), -product(_0,d,_0)]
[-product(add(_0,_1),_1,_1), -product(_1,add(_0,_1),_2), -product(_2,_1,c), -product(_1,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(_0,_1,c), -product(d,add(_2,_1),_2), -product(_0,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(_0,_0,add(additive_identity,_1))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,_0,c), -product(_3,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,add(additive_identity,_0),_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(c,_2,d), -product(_2,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,_2), -product(_1,add(d,c),_4), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(_1,_1,d), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,c), -product(_0,additive_identity,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,c,additive_identity), -product(_3,_5,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_2,_0), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_0,c,_2)]
[-product(_0,_1,additive_identity), -product(_0,_1,add(d,c))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(_3,c),_3), -product(_0,add(_3,c),d), -product(_4,_0,_2), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,c,c)]
[-product(d,d,c), -product(_0,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(c,_2,_0)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(add(_1,c),_2,_1), -product(c,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(additive_inverse(_0),_1,_0), -product(_2,additive_inverse(_0),d), -product(d,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_0,_2)]
[-product(additive_identity,_0,c), -product(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_3,additive_identity,add(_1,c)), -product(_3,_2,d), -product(add(_1,c),_3,add(_1,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_inverse(c),_2), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(d,_1),d), -product(c,_2,_2), -product(_3,_2,c), -product(_3,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,d,add(_0,_0)), -product(add(_0,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_inverse(c),_2), -product(_0,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_1), -product(_1,add(_1,_2),c), -product(_1,_0,d), -product(_3,_1,_0), -product(_3,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_4,_1), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(_0,_1,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_1,d,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(d,_2,additive_identity)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,add(d,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,d), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,add(_2,c),_2), -product(c,add(_2,c),d), -product(_3,c,_0), -product(_3,d,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(c,d)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,additive_identity,c), -product(_2,_5,_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,d), -product(_2,d,additive_identity), -product(d,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(_0,_5,_2)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),add(c,_1),c), -product(c,add(c,_1),_2), -product(_2,add(c,_1),d), -product(add(c,_1),c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_0,add(_0,_1),add(_0,_1)), -product(_0,_2,d), -product(_2,add(_0,_1),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,add(_2,c),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),_2), -product(_2,add(_0,_1),c), -product(c,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(_3,_0,c), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,d)]
[-product(add(additive_identity,_0),_0,c), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),d)]
[-product(d,_0,c), -product(d,d,d), -product(d,add(d,c),_1), -product(d,_1,additive_identity)]
[-product(_0,d,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_1,_2), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_1,_2,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_0,_1)), -product(_2,_0,_0), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,additive_identity), -product(d,_0,d), -product(c,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_4,c), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,d), -product(c,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(c,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_0,add(d,c),_1), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,add(_0,_1),_0), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,_2), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(c,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_2,d), -product(_0,c,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0), -product(_3,_2,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_0,add(c,_1)), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_0,additive_inverse(_0)), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_6,add(_3,_1)), -product(_1,_6,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,additive_identity,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),d), -product(_3,_2,add(_2,c)), -product(_3,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,_0), -product(_1,c,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,d,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,d,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_1,add(d,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_4,_4,_2), -product(_4,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,additive_identity,add(_2,c))]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(c,_1,_0), -product(_0,c,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(additive_identity,_1,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,c,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(d,d,d), -product(d,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_1,_0), -product(c,d,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,c,c), -product(_4,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,_1,additive_identity), -product(_4,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,d), -product(_0,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_3,d), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_0,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,add(_1,additive_identity))]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_2,_4,add(_3,c)), -product(_1,_4,additive_identity)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_3,additive_identity), -product(_2,_1,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_inverse(c)), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,_1), -product(c,_0,c), -product(c,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_2,_1,_1)]
[-product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,add(_1,d),_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,additive_identity), -product(_2,_3,c), -product(c,_3,d), -product(_2,_2,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_inverse(d)), -product(c,_1,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,c), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,c,_4), -product(_3,_6,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(add(_2,c),d,_2), -product(_1,add(_2,c),_1), -product(_3,_1,_1), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,additive_identity,_1), -product(_1,c,d), -product(_2,additive_identity,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(_5,add(_0,_1),add(_0,_1)), -product(_5,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_2,_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(_2,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_2,additive_identity,c), -product(c,_2,_1)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,d,_0), -product(_0,d,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(c,c,c), -product(c,add(d,c),d), -product(c,d,additive_identity)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(_0,_0),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(add(d,_0),add(d,_0),c), -product(add(d,_0),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,_0), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_0,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_1,_0), -product(c,_2,c)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(_2,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_5,_3,_2), -product(_5,additive_identity,d), -product(_6,_4,add(_4,c)), -product(_2,_6,_3)]
[-product(add(_0,_1),_1,c), -product(_2,_0,_3), -product(_1,_2,add(_0,_1)), -product(_1,_3,d), -product(c,_2,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(_0,add(c,d),c), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,c),additive_identity), -product(d,_4,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_4,_0), -product(_0,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_0,add(additive_identity,_0))]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_1,c,additive_identity), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(c,_1,c), -product(c,additive_identity,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(add(d,c),_2,d), -product(_1,_1,_3), -product(_3,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(c,c,add(c,_1))]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_7,_8,add(_5,c)), -product(_2,_7,_9), -product(_9,_8,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(c,c,add(c,c))]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_inverse(_0),_1), -product(_2,_1,d)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,add(d,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_0,_4), -product(_0,_4,additive_identity)]
[-product(add(c,c),_0,c), -product(_0,add(c,c),add(c,c)), -product(_0,add(c,c),_0), -product(_0,_0,d), -product(d,add(c,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_1,_4,add(d,_1)), -product(c,_4,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(d,add(additive_identity,c),additive_identity), -product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,d,additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_0,c,_0)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(_0,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),d), -product(_0,add(additive_identity,c),add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,d,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_0,additive_identity), -product(_1,_2,c)]
[-product(_0,d,additive_identity), -product(_0,_0,_0), -product(_0,d,c), -product(_0,_1,d)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,add(_0,d),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(c,c,_1), -product(c,_1,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(d,add(_0,d),_0), -product(add(_0,d),d,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(add(_0,d),_0,d), -product(add(_0,d),add(_0,d),additive_identity), -product(additive_identity,_0,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(c,add(_3,_1),additive_identity)]
[-product(c,additive_identity,c), -product(d,add(_0,additive_identity),_0), -product(c,d,additive_identity), -product(additive_identity,add(_0,additive_identity),d)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(_0,add(c,c),c), -product(_0,c,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_4,add(d,_1)), -product(_1,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(_0,_1,add(c,c)), -product(d,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_1)]
[-product(_0,c,c), -product(c,_1,d), -product(add(d,c),add(d,c),_0), -product(add(d,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),_2,d), -product(c,add(d,_1),add(d,_1)), -product(_3,c,c), -product(_3,add(d,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,_2,add(_1,c)), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_0), -product(c,_2,_0)]
[-product(_0,d,c), -product(_1,_1,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,d), -product(_2,_3,additive_identity), -product(additive_identity,_1,d), -product(_4,_3,c), -product(_2,_4,_2)]
[-product(_0,_1,additive_inverse(_2)), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_2,d), -product(_1,_0,_2), -product(_2,_1,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(add(c,_1),add(c,_1),c), -product(add(c,_1),c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,_2), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,d,c)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,_1), -product(c,_0,c), -product(c,add(_1,d),_2), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(add(_0,additive_identity),_0,add(_0,additive_identity)), -product(_1,add(_0,additive_identity),d), -product(d,_1,d)]
[-product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(c,c,_1), -product(c,_1,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_inverse(_1)), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_3,_4,add(c,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,_2)]
[-product(_0,d,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_2,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_inverse(d),_0), -product(_0,_1,c)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,d,c), -product(d,c,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_0,add(c,c)), -product(add(c,c),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,_0,add(_2,d)), -product(add(_2,d),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_0), -product(_0,_3,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_3,d), -product(_2,_2,_4), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,add(d,c)), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_2,d,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(c,_4,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,add(c,c),d), -product(_1,c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,d,c), -product(d,c,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,c)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(add(d,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,_3,d), -product(_0,_1,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_0,_4,add(_3,_1)), -product(c,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_2,_0), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_1,d), -product(_2,additive_identity,additive_identity), -product(_3,additive_identity,c), -product(_2,_3,_2)]
[-product(_0,_0,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_0,d,_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,additive_identity,additive_identity), -product(_2,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,additive_identity,add(additive_identity,c)), -product(_1,_3,_1)]
[-product(d,_0,additive_identity), -product(c,d,d), -product(d,_0,c), -product(_0,add(d,additive_identity),_0)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,_0,_1), -product(_5,c,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(add(d,c),_0,_0), -product(_2,d,d), -product(_2,_2,add(d,c)), -product(add(d,c),_2,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,d,additive_identity), -product(_0,additive_identity,d), -product(_1,d,_0), -product(c,_1,c), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(_0,_2,_0), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(additive_identity,c),additive_identity), -product(_2,_2,_3), -product(_3,add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,c,d), -product(_1,_0,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,d,d), -product(_1,_1,c), -product(c,_2,add(d,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_0,d), -product(_0,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,_0), -product(_0,d,c), -product(_0,_0,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,add(_2,c),_2), -product(_1,_3,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,additive_identity,d), -product(additive_identity,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_5,_3,_2), -product(_5,additive_identity,d), -product(_6,add(_4,c),_4), -product(_3,_6,_2)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(_1,_2,add(_0,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),_0), -product(_4,_3,d), -product(_5,_4,_0), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_0,add(_4,_1)), -product(add(_4,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,c), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,d), -product(d,_1,d), -product(_1,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_7,add(_5,c),_8), -product(_9,_7,_2), -product(_9,_8,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,add(_4,_1),_2)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_3,_4,add(_1,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_1,add(_3,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,add(_0,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,_1), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,_4,additive_identity), -product(_5,_0,_4)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,additive_identity), -product(c,_2,_3), -product(_3,_3,d), -product(c,_2,c), -product(c,additive_identity,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d), -product(_1,_3,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_4,add(_2,_0)), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,add(_2,_0)), -product(_0,_1,c), -product(_0,add(_2,_0),d), -product(c,d,additive_identity)]
[-product(_0,d,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(_1,additive_identity,c), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,add(_0,additive_identity)), -product(c,_2,_0)]
[-product(c,_0,c), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,c,_1), -product(_2,_0,_0)]
[-product(_0,c,c), -product(c,_1,d), -product(_0,_0,add(d,c)), -product(add(d,c),_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(_1,c),_1), -product(_0,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(_0,add(_0,c),d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,add(_2,_0)), -product(c,_1,c), -product(c,add(_2,_0),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(c,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,d), -product(d,_2,d), -product(_2,add(d,c),_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,additive_identity), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(_3,d,additive_identity), -product(additive_identity,_3,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,_0), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,d,additive_identity), -product(additive_identity,_2,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_0,_7,add(_4,c)), -product(_0,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,_1), -product(c,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(c,add(_3,_1),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_4,_5,add(c,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_2,add(_1,c)), -product(_0,_2,additive_identity)]
[-product(c,d,c), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,c,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,c,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_0,add(c,d),_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,_0,_1)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_1,_1,add(additive_identity,_0))]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_0,d), -product(_0,_0,_1)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(add(d,_0),d,d), -product(add(d,_0),add(d,_0),c), -product(add(d,_0),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,_4,additive_identity), -product(_1,_6,_1), -product(_7,_0,_4)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(_1,additive_identity),_2,_1), -product(_0,add(_1,additive_identity),_0), -product(_0,_2,d), -product(_0,_0,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(c,_0)), -product(add(c,_0),c,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,c,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_0,c,add(_1,additive_identity))]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,d), -product(c,_0,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,additive_identity), -product(additive_identity,add(c,c),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,additive_identity,d), -product(_1,c,c), -product(_0,_1,c)]
[-product(c,c,_0), -product(d,c,additive_identity), -product(additive_identity,c,c), -product(d,c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(_0,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),d,d), -product(d,add(d,c),add(d,c)), -product(add(d,c),add(d,c),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_2,c,_3), -product(_1,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_0,add(_2,_1),_4), -product(c,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),d,d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),add(d,_0),additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_0,c)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(add(c,c),_0,d), -product(_2,_1,_1), -product(_2,add(c,c),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(c,_1,d), -product(c,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_0,_1,_0), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(_0,_0)), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_6,_2), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_0,_4,add(_1,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,c), -product(_0,add(additive_identity,_0),additive_identity), -product(c,add(additive_identity,_0),d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(c,_3,c), -product(_4,_2,_1)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(d,d,_1), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(_1,_2,d), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,c), -product(c,_3,_1)]
[-product(_0,_1,c), -product(_2,_2,d), -product(_0,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,_0,_1), -product(c,c,_2), -product(_2,_0,c), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(c,_0,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,_0,d), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_0,_3), -product(c,_5,_0)]
[-product(_0,_1,c), -product(add(_0,_1),_0,_0), -product(_0,add(_0,_1),_2), -product(_2,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_4,add(_0,_2),_5), -product(_6,_4,_3), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_4), -product(_5,_2,d), -product(_5,_4,d), -product(_4,add(_3,c),_6), -product(_5,_6,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_0,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,d), -product(d,_1,c), -product(_0,add(_0,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_2,_2,add(_5,c)), -product(add(_5,c),_2,additive_identity)]
[-product(d,_0,c), -product(add(_1,c),d,d), -product(_2,_1,d), -product(add(_1,c),_2,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_0,_0,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,add(d,additive_identity),c), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,c,c), -product(_1,_2,_0)]
[-product(_0,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_0,_1,_0), -product(_0,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,_0,_3), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(c,c,d), -product(_2,_3,c)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,_1),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(c,_1,c)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(c,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,_0,d), -product(c,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,additive_identity,d), -product(c,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_0,_1), -product(_2,additive_identity,_0), -product(_2,_1,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_0,add(d,_0)), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_4,add(_3,_2)), -product(_3,_4,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,c,_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,c,_3), -product(_3,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,add(_0,additive_identity)), -product(d,d,c), -product(d,add(_0,additive_identity),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,add(additive_identity,_1),c), -product(c,_2,c)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,additive_identity,d), -product(c,add(_0,c),_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(add(d,c),_1,d), -product(_0,add(d,c),add(d,c)), -product(c,add(d,c),additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,c,_2)]
[-product(_0,_1,c), -product(c,_0,_0), -product(add(_2,c),_2,_3), -product(_1,add(_2,c),c), -product(_1,_3,d), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,d), -product(_0,c,_1), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,_4,add(_0,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(_0,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_3,_0), -product(_2,_2,_4), -product(_4,_3,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_0,_0,_5), -product(_5,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_1,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,additive_identity)]
[-product(_0,d,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,additive_identity,_1), -product(_1,_2,c)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,add(_1,_0),_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,_2), -product(_2,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,_4), -product(_5,_2,additive_identity), -product(_5,_4,d)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_0,add(_1,c)), -product(add(_1,c),_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(add(_0,_1),_0,_1), -product(_0,add(_0,_1),_0), -product(_0,_0,c), -product(c,add(_0,_1),d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,d,_1), -product(_2,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,add(c,_1),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(c,_2,_0), -product(c,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(c,add(_1,_1),additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(c,_0,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(_2,add(d,_1),_0), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),_1,add(_1,c)), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(_0,_2,c)]
[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_3,_3,_2), -product(_3,add(_4,c),d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,add(additive_identity,c),_4), -product(_3,_6,_2)]
[-product(d,c,d), -product(d,d,additive_identity), -product(additive_identity,c,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(_2,add(_0,c),c), -product(_2,c,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(add(d,_0),_1,d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,_1,c), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,_1), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(c,d,d)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,_2,add(_0,c)), -product(add(_0,c),_2,additive_identity)]
[-product(c,c,c), -product(c,_0,d), -product(_0,_1,add(d,c)), -product(d,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(d,d)), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,add(c,_1),additive_identity)]
[-product(_0,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_1,add(c,_0),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_3,_2,_1), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,d), -product(d,_1,c), -product(_0,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(add(_2,d),add(_2,d),c), -product(add(_2,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,_2,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,add(_3,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,additive_identity,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,additive_identity,c)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,add(_1,_0)), -product(c,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_0), -product(c,_2,c), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_1,_2,add(d,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,d)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_1,_6,add(_4,c)), -product(c,_6,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_4,add(_2,c),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_0,_6), -product(_6,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_2,add(_0,_1),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,_2), -product(_2,add(d,c),_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_2,additive_identity), -product(_2,c,_3), -product(_3,_2,d), -product(c,c,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,c), -product(additive_identity,_2,c)]
[-product(_0,additive_inverse(c),c), -product(_0,_0,_1), -product(_1,additive_inverse(c),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,_4), -product(_5,_0,_4)]
[-product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,c,d), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,add(additive_identity,_0),_1)]
[-product(d,_0,c), -product(c,d,d), -product(_1,additive_identity,d), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,additive_identity,d), -product(additive_identity,_1,add(_1,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_5), -product(_5,add(_4,c),d), -product(_6,_5,_2), -product(_6,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_0,_0,_4), -product(c,_4,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,additive_identity), -product(c,_1,c), -product(_0,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,d), -product(d,_1,c), -product(_1,add(_0,_2),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,add(_1,additive_identity),d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,add(d,d),add(d,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(_1,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_1,add(d,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(c,_4,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(_0,d,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,c,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_1,_6,add(_3,c)), -product(c,_6,additive_identity)]
[-product(additive_identity,d,c), -product(d,additive_identity,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,d), -product(d,_0,c), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(additive_identity,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_0,_5), -product(_5,_0,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,_0,additive_identity), -product(d,additive_identity,d), -product(d,_1,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,add(_0,additive_identity),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,c,d), -product(_3,_4,c)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_3,add(_1,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_0,c),_0), -product(_0,_0,additive_identity), -product(additive_identity,add(_0,c),d)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(c,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,_1), -product(d,d,d), -product(d,_2,add(_1,_0)), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,add(_2,c),_2), -product(c,add(_2,c),d), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(d,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,d), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(c,c,c), -product(c,add(_0,c),_0), -product(c,add(_0,c),d), -product(c,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,add(_2,c)), -product(_2,_3,add(_2,c)), -product(_2,add(_2,c),d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(add(_2,c),d,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,d), -product(_1,_2,_2), -product(_3,additive_identity,d), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(c,_4,c), -product(_5,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,c,_2)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(add(c,_1),_2,c)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(c,_1,c)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(d,_1,_0), -product(_1,d,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(add(_1,_0),add(_1,_0),c), -product(add(_1,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,d,_1), -product(c,_4,_2), -product(_3,_5,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_1,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,c,d)]
[-product(c,additive_identity,c), -product(_0,d,d), -product(_0,_0,c), -product(additive_identity,d,_1), -product(c,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(_1,d,d), -product(_1,_1,d), -product(_1,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,_2,_5), -product(c,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(_3,additive_identity,d), -product(_4,_2,add(_2,c)), -product(d,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,_2), -product(_3,c,c), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,_1,add(d,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,add(_1,_2),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_3,add(c,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(_0,_0,add(_0,_1))]
[-product(add(c,_0),_0,c), -product(c,c,additive_identity), -product(_0,c,add(c,_0)), -product(_0,additive_identity,d)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,c,c)]
[-product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,add(_1,additive_identity)), -product(_1,_2,_0)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_3,_2,_1), -product(_3,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,add(additive_identity,additive_identity)), -product(add(additive_identity,additive_identity),_0,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_2,_1),_2), -product(_0,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_2,_1,c), -product(_2,c,d), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_5,_3), -product(additive_identity,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(add(d,d),add(d,d),c), -product(add(d,d),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_0,_5,_4), -product(_3,_5,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(c,additive_identity,c)]
[-product(_0,_1,c), -product(c,d,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,d,_1), -product(_2,_3,_1)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,d), -product(_2,_2,c), -product(_1,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,_1),_3), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),d,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(_3,add(_0,_1),_4), -product(_4,_2,c), -product(_3,_0,d), -product(_5,_3,_3), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_1,_0), -product(_4,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_0,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_0,add(_0,c),additive_identity)]
[-product(additive_identity,_0,_1), -product(c,additive_identity,d), -product(d,_0,c), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_5,_6,add(d,c)), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_0,_1,_0), -product(_2,_0,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(d,c,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_2,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),d,_1), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_2,additive_identity), -product(_2,additive_identity,d)]
[-product(_0,_1,_2), -product(_0,_0,add(_3,_2)), -product(add(_3,_2),_1,c), -product(_0,_3,d), -product(add(_3,_2),_0,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,add(additive_identity,_0))]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_0,_3,_0), -product(d,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_3,add(_2,d),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_3,add(_0,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,_0,d)]
[-product(_0,_1,c), -product(_0,_2,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,add(c,c)), -product(add(c,c),_0,d), -product(_1,_1,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,_1,add(d,c)), -product(add(d,c),_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,c,_1), -product(_1,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,add(c,_1)), -product(add(c,_1),_1,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(_2,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,_0,d)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_0,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,_5,c), -product(_2,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_3,_2,_1)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_2,_0,additive_identity), -product(c,_2,c), -product(_1,_3,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,d,add(d,c)), -product(add(d,c),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(c,c,additive_inverse(_0)), -product(additive_inverse(_0),c,c), -product(c,_0,_1), -product(additive_inverse(_0),_1,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,add(additive_identity,c),d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_3,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_3,add(c,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,add(_2,c),_5), -product(_0,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_2,c), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,additive_identity,c), -product(_2,_4,_2), -product(_5,_3,c)]
[-product(_0,additive_inverse(_1),c), -product(additive_inverse(_1),_2,_1), -product(c,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(c,c,c), -product(c,c,add(c,c)), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,add(_0,c),additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,d), -product(d,additive_identity,c), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(add(additive_identity,_1),add(additive_identity,_1),_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,d)]
[-product(_0,additive_identity,c), -product(additive_identity,additive_identity,_0), -product(c,additive_identity,d), -product(additive_identity,_1,_1), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,add(_1,additive_identity),c)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,d,_0), -product(_1,_0,c), -product(_1,_0,d), -product(c,c,_0), -product(additive_identity,_0,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,c,add(c,c)), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(_1,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,add(_2,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_2), -product(_5,_3,_2), -product(_5,_2,d), -product(_4,add(_4,c),_6), -product(_3,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_3,add(c,c),_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_1,_0,d)]
[-product(_0,add(_0,_1),_1), -product(d,_0,d), -product(d,add(_0,_1),c), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(d,_1),d), -product(c,_0,_0), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_6,_7,add(_5,_2)), -product(_3,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,d,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(d,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_0,_2), -product(_0,_5,_0)]
[-product(d,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,d), -product(_3,_2,d), -product(_2,_1,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_4,_0,_0), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,additive_identity), -product(c,_2,c), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(d,d,_0), -product(d,_0,d), -product(_1,d,additive_identity), -product(_0,_1,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(add(_2,d),add(_2,d),_0), -product(add(_2,d),_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,additive_identity), -product(_1,_2,_3), -product(_3,_0,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,c,add(d,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,additive_identity,_4), -product(_1,_6,_1), -product(_7,_0,_4)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,d)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_2,_0,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,c), -product(c,_0,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,d,_1), -product(_0,_4,_2), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_4,add(_1,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_4,c), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(add(d,_0),add(d,_0),d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_0,additive_identity), -product(c,_0,add(additive_identity,_0)), -product(add(additive_identity,_0),_0,d)]
[-product(_0,add(additive_identity,c),c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(c,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,add(_3,c),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,_1,add(c,_0)), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,c), -product(_1,_2,c), -product(_1,c,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(c,d,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(d,additive_inverse(_0),c), -product(_1,_0,_1), -product(_2,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_2,_0,_4), -product(_4,_3,d), -product(_0,_3,add(additive_identity,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,add(c,c),_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(d,add(_2,c),d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,_2,add(_2,c)), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,_2,add(c,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,c,d), -product(add(c,c),_0,additive_identity)]
[-product(c,d,c), -product(c,c,additive_identity), -product(additive_identity,d,d)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_0,_1), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_3,_1), -product(_0,_3,d), -product(_4,_0,_2), -product(_4,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(d,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_1,_2,_2), -product(_1,_2,_1), -product(_3,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,d,_0), -product(_0,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_2,add(_3,c),_4), -product(d,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,additive_identity,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_1,c,c)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_2,_0), -product(_4,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,d,d), -product(additive_identity,d,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,d), -product(d,_1,_1), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,c), -product(c,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,c), -product(_0,d,add(_0,d))]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,d), -product(c,_1,_0), -product(_0,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_1), -product(_1,add(_1,_2),c), -product(_1,_0,d), -product(_3,_0,_0), -product(_3,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(_1,_0,c), -product(_1,c,d), -product(c,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_5,c), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(_0,d,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_0,_3), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(c,_1,_2), -product(_2,additive_identity,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(add(d,_0),_1,d), -product(c,add(d,_0),add(d,_0)), -product(_0,add(d,_0),additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_1,_0,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,c), -product(d,_4,d), -product(_4,add(_4,_2),_5), -product(d,_5,additive_identity)]
[-product(c,_0,c), -product(_0,c,additive_identity), -product(c,_0,_0), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(d,d,add(_3,c)), -product(add(_3,c),d,additive_identity)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_0,c,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,c,d), -product(c,add(_0,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(_1,_0,d), -product(_0,add(_0,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,add(d,additive_identity),_0), -product(_0,_3,c)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(additive_identity,c,c), -product(d,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,d)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,add(_0,c))]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_2,_4), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,c), -product(_4,_2,c), -product(_4,c,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(d,additive_identity,additive_identity), -product(additive_identity,d,d), -product(d,d,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_3), -product(d,_1,_4), -product(_4,_2,d), -product(_2,add(_3,_0),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,add(_2,c),_2), -product(add(_2,c),_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(d,_3,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,d,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_2,d), -product(_1,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_3,_2), -product(c,add(_2,_1),_4), -product(_4,_3,d), -product(_5,c,c), -product(_5,_4,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,add(_0,additive_identity),_0), -product(c,_1,_2), -product(_2,add(_0,additive_identity),d), -product(_0,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,d), -product(_3,add(c,_1),_5), -product(_2,_5,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,_2), -product(_2,add(_1,_0),d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(c,c,d), -product(c,c,c), -product(_0,add(c,d),_1), -product(_2,_0,c), -product(_2,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,c,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(d,_0),d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_0,add(c,_1)), -product(add(c,_1),_0,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(_0,c,additive_identity), -product(_0,_0,add(c,_0)), -product(_0,additive_identity,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,d), -product(_0,additive_identity,add(c,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(c,_5,c)]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,c,_3), -product(_2,_5,_2)]
[-product(_0,d,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_2,add(_1,_1),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_0), -product(c,_0,_2), -product(_2,_1,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(c,c,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_1,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_0,_3,add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,add(d,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),add(additive_identity,c),_1), -product(_1,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_4,_2), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_3,_3,c), -product(_3,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(d,_0)), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_3), -product(_3,_0,d), -product(c,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,c)), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,add(_4,_1))]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_3,d), -product(_0,_3,_4), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(d,_1),d), -product(c,c,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,add(_3,c)), -product(add(_3,c),_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,d,_0), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,add(_1,additive_identity)), -product(add(_1,additive_identity),_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(c,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,add(_2,additive_identity),_0), -product(_0,_3,c)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,add(_0,additive_identity),c), -product(additive_identity,add(_0,additive_identity),d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(add(_0,_0),add(_0,_0),c), -product(add(_0,_0),c,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,_0,_1), -product(_2,c,c), -product(_2,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,add(additive_identity,c))]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_0)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(d,_2,additive_identity)]
[-product(d,c,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,d,_2), -product(_2,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,d)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,d), -product(_3,_0,add(c,c)), -product(_2,_3,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,additive_identity,d), -product(_1,c,c), -product(c,_1,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_1,_2,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,d), -product(additive_identity,_2,d), -product(_3,_2,_0)]
[-product(d,d,_0), -product(d,d,_1), -product(_1,d,c), -product(_0,d,d), -product(d,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,additive_identity), -product(c,_2,_1), -product(_1,c,d), -product(c,_2,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,c,_3), -product(_0,_4,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_3,add(_1,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_1,_1,_2), -product(_2,_0,d), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_4,_5,add(_0,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,d,d), -product(_1,_1,c), -product(c,add(d,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,d,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,_0,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_0,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(d,d,c), -product(d,d,d), -product(_0,add(c,d),_1), -product(_2,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1), -product(_3,_5,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_3,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,c), -product(c,_2,d), -product(_2,add(c,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_3,add(_1,_2)), -product(_1,_3,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(additive_identity,_1,c)]
[-product(d,additive_identity,c), -product(_0,c,_0), -product(_1,_0,d), -product(d,d,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(add(d,c),_1,d), -product(c,add(d,c),add(d,c)), -product(_0,add(d,c),additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,c,additive_identity), -product(_0,_0,_1), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_inverse(_1)), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(d,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,c,add(additive_identity,_1)), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(add(d,c),_2,d), -product(_3,_1,_1), -product(_3,add(d,c),additive_identity)]
[-product(_0,d,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,additive_identity,add(d,c)), -product(_1,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_1), -product(c,c,_0), -product(_0,_2,add(_1,d)), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_0,additive_identity,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,_1,d), -product(add(d,c),_0,_0), -product(c,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_2), -product(_1,_3,_0)]
[-product(_0,c,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,add(_0,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_3,add(d,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,add(_3,_1),additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,_0)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(additive_identity,_1,_1), -product(_3,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(additive_identity,_0,d), -product(c,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,d,c), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,d,c), -product(d,_3,additive_identity), -product(_2,_4,c)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),add(_0,_1),_0)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,d,_1), -product(additive_identity,_1,additive_identity)]
[-product(additive_inverse(c),_0,c), -product(_1,additive_inverse(c),additive_inverse(c)), -product(_2,_1,_1), -product(_2,additive_inverse(c),d)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,_4,d), -product(_0,add(_4,_2),_5), -product(_3,_5,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,c,additive_identity), -product(d,_3,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,additive_identity,add(c,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_1,_1,d), -product(_1,_1,_1), -product(d,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,additive_identity), -product(_2,_3,c), -product(c,_2,d), -product(_2,_3,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_3,add(c,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_4,_5,add(_3,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(d,_1,d), -product(_0,d,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,add(d,additive_identity),c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_4,_5,add(d,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_0,add(d,_1),_4), -product(c,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(d,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,d), -product(d,d,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_1,_0,d), -product(_0,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_inverse(d)), -product(_0,_1,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(c,_2,_0), -product(add(_0,_1),c,additive_identity), -product(additive_identity,_2,d), -product(add(_0,_1),_1,add(_0,_1))]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),c,d), -product(add(_0,c),add(_0,c),_1), -product(_1,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_inverse(_1),_2), -product(c,_2,d)]
[-product(c,_0,c), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1), -product(_2,_0,_0)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,c,additive_identity), -product(d,_0,_0), -product(d,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(additive_identity,_0,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,c,add(c,c)), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(c,c,_1), -product(_1,c,d), -product(additive_identity,c,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,c,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,d,add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_0,add(_3,_1),_4), -product(c,_4,additive_identity)]
[-product(d,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,c,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,d,add(_0,d)), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,_0,_3), -product(_3,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),d), -product(_3,add(_2,c),add(_2,c)), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_0)]
[-product(_0,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,_0), -product(_0,_3,_1)]
[-product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,add(_2,_0),_5), -product(c,_5,additive_identity)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_0,_3,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,d), -product(d,_1,_1), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(_3,add(_2,c),d), -product(_4,_3,d), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_3,_4,c), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(d,additive_identity,d), -product(d,d,_0), -product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,c,_5), -product(_0,_5,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_1), -product(_2,_0,d), -product(_2,_1,d), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(c,add(c,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_2,_3,add(d,_0)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_0,_2), -product(c,_5,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,add(_2,additive_identity),d)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_0,additive_identity,d)]
[-product(add(d,c),_0,c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,add(d,c)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(add(_1,_0),add(_1,_0),d), -product(add(_1,_0),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_0,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,d), -product(add(_0,_0),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,additive_identity), -product(additive_identity,c,d)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(_0,d,_1), -product(_0,_1,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,additive_identity,_1), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_inverse(_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_1,_1,_2), -product(_1,_2,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_1,_0), -product(_0,_3,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_0), -product(_3,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_inverse(c),d)]
[-product(d,_0,c), -product(_1,_1,d), -product(d,_1,d), -product(_1,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_0,_4,add(_2,_1)), -product(c,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(additive_identity,_1,c), -product(_1,_1,d), -product(_1,d,_0), -product(_1,_1,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,additive_identity,_0), -product(_0,d,c), -product(c,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,d), -product(d,d,_0), -product(_1,d,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_0), -product(_0,_1,d), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_3,_4), -product(_4,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_0,_1,_0)]
[-product(_0,_0,c), -product(c,_0,d), -product(_1,_2,add(c,_0)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,add(_1,_0))]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,c),_4), -product(d,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,d), -product(d,additive_identity,_1), -product(_1,_0,c), -product(d,additive_identity,d), -product(_0,_1,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,c,d), -product(_1,additive_identity,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(add(d,c),add(d,c),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_3,_0), -product(add(_0,_1),_2,_4), -product(_4,_3,d), -product(_5,_1,add(_0,_1)), -product(_5,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_3,add(_3,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),c), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,_1), -product(_3,_1,d), -product(_0,_4,add(_2,c)), -product(c,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,d,additive_identity), -product(_0,d,c), -product(_0,additive_identity,d), -product(c,d,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,d), -product(d,_2,_2), -product(_3,add(d,c),_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,c,_2), -product(_4,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,c,d)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(add(d,c),add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,additive_identity,_0), -product(_1,_3,_1), -product(_4,_0,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_4), -product(_4,c,d), -product(_5,_4,_2), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(d,_1,d), -product(_0,d,_2), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,_0), -product(_2,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,_0,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,_3,additive_identity), -product(_5,_0,_3)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_2,c,_3), -product(_1,_3,additive_identity)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,add(d,_0),additive_identity)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(_3,d,d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,c), -product(_2,c,_2), -product(_2,c,d), -product(d,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_3,_4,c), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_4,_0), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_4,_2), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,_1), -product(d,additive_identity,d), -product(d,_0,c), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,c), -product(c,_0,d), -product(c,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,d), -product(_1,add(additive_identity,additive_identity),_0), -product(_0,_1,c)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_0,additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_1,_3), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,_0), -product(_0,add(_0,_1),_2), -product(_2,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_4,_5,add(d,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(d,d,additive_identity), -product(additive_identity,_2,d), -product(_2,d,c), -product(_3,_2,c)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_0), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_0,_0,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_1), -product(c,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(c,_1,_0), -product(_0,c,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(_1,add(_0,d),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(d,_0,d), -product(d,d,_1), -product(_1,_0,c), -product(_0,add(_0,d),_2), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_0), -product(_0,_2,_4), -product(_4,_3,d), -product(_3,add(_0,_1),_5), -product(_2,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_2,_3,c), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,add(c,d),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_1), -product(_1,add(additive_identity,c),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_2,_2,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(_2,_0,d), -product(_1,_2,_1), -product(_3,d,_1), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(c,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,add(_0,d),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_inverse(_0)), -product(_0,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_0,_1,_0), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(c,additive_identity,d), -product(c,c,_0), -product(_0,additive_identity,c), -product(additive_identity,d,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_2,_1,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,_1,add(c,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,_1), -product(c,_0,_1), -product(_1,_1,c), -product(c,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_2,c,c), -product(_2,_1,d), -product(_1,_0,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,_0,add(_0,_1)), -product(_0,_2,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,_1,d), -product(_1,_1,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,additive_identity,add(additive_identity,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,add(_2,c),_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,c)), -product(d,_2,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_0,_0,add(_0,additive_identity)), -product(_0,add(_0,additive_identity),d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,_1,d), -product(d,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(additive_inverse(d),additive_inverse(d),d), -product(d,additive_inverse(d),c)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_4,_1), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(d,d,d), -product(d,d,_0), -product(_1,_0,additive_identity), -product(_0,_1,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,_2), -product(_2,_1,c), -product(d,_3,d), -product(_3,_3,_4), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,c,d), -product(_0,_3,add(_1,c)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_1,add(_3,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,additive_identity,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),_2), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),c,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,c,d), -product(add(additive_identity,_1),add(additive_identity,_1),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,_1,d), -product(_2,_3,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_0,_1), -product(_1,c,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_2,d), -product(_1,_3,_4), -product(c,_4,additive_identity)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,c,additive_identity), -product(d,_2,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_4,add(_3,c),_5), -product(_6,_4,_1), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_1,_4,add(_3,c)), -product(c,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,add(additive_identity,c),d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(_1,_1),_0), -product(_0,_2,_0)]
[-product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,c), -product(_0,add(_0,d),d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,d,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(_2,_1),_2), -product(c,c,c), -product(c,add(_2,_1),d), -product(c,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_3,_0,_2), -product(_3,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_1,_1,c), -product(_2,_2,d), -product(_2,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_2,_3,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,add(d,c),d), -product(c,_1,_1), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,additive_identity), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,_5,_3), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_6,add(_4,_1)), -product(_1,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(additive_identity,_3,c), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_0,d,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,add(d,d),c), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_0,add(_1,additive_identity))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_1,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,c,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(c,_1,d), -product(c,c,c), -product(c,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,_3,add(_2,d)), -product(d,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_2,_5,add(_3,_1)), -product(_0,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_1,_1,_2), -product(_2,_0,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(_3,c,c), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,add(additive_identity,c)), -product(_2,_3,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_0,_1,_1), -product(_0,_1,_0)]
[-product(c,c,c), -product(_0,c,d), -product(c,_0,additive_identity), -product(additive_identity,c,d), -product(c,_0,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_1,_2,add(d,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(_1,additive_identity),additive_identity), -product(_0,_0,_2), -product(_2,add(_1,additive_identity),c), -product(_0,_1,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_3,_4,add(_2,d)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(c,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(_0,c)), -product(c,_1,additive_identity)]
[-product(_0,d,c), -product(c,_0,_0), -product(d,d,additive_identity), -product(_0,additive_identity,d), -product(c,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_3,_4,add(_1,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,c), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,d), -product(additive_identity,_2,_2)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,d), -product(_1,additive_identity,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(additive_identity,_1,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),_3), -product(_3,add(_2,c),d), -product(_3,_2,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(_1,d,d), -product(d,_1,_1), -product(_1,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,additive_identity,c), -product(d,_2,d)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(c,add(_1,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(c,_1,c)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),c,d), -product(_1,add(_0,c),add(_0,c)), -product(_1,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_1), -product(_0,_2,d), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,d,additive_identity), -product(_0,_0,_2), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,add(_1,additive_identity)), -product(_2,_0,c), -product(_2,add(_1,additive_identity),d), -product(d,_2,c)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(_0,c,d), -product(d,_1,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_1,d,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_3,add(_0,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,d,_2), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,_0), -product(_2,_1,_0)]
[-product(_0,_1,c), -product(additive_inverse(_1),additive_inverse(_1),_0), -product(additive_inverse(_1),_0,d)]
[-product(_0,c,c), -product(c,c,additive_identity), -product(c,c,d), -product(_0,_0,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_2), -product(_3,add(_3,c),_2), -product(_3,_2,d), -product(add(_3,c),_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,additive_identity,_0), -product(_2,_1,d), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,c,additive_identity), -product(d,_2,c), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(d,d,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(add(_0,_1),_2,_1), -product(_3,add(_0,_1),additive_identity), -product(additive_identity,_2,c), -product(_3,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,c), -product(c,add(d,_1),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(_1,d,d), -product(d,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_2,_0)]
[-product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,add(_1,d)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_0), -product(_0,_2,d), -product(c,d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,c,_1)]
[-product(c,d,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(d,_0,_2)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(_1,_0,d), -product(d,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,c,_0), -product(c,_0,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_0,_2), -product(d,_1,d), -product(d,_0,d), -product(_0,additive_identity,_2)]
[-product(_0,_1,c), -product(_0,_1,additive_inverse(d))]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(c,_2,c)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(additive_identity,_2,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_1,_3,_0)]
[-product(add(c,c),_0,c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(add(_0,c),_1,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(add(_0,c),_2,d), -product(c,c,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,add(_2,additive_identity),_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_0,c)]
[-product(d,_0,c), -product(d,d,_1), -product(_1,_0,d), -product(_0,add(c,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(_0,_0,add(_0,d)), -product(add(_0,d),_0,c), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,_1,add(_0,d)), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,_1,_0)]
[-product(_0,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(add(_0,c),additive_identity,additive_identity), -product(_1,additive_identity,add(_0,c)), -product(_1,c,d), -product(add(_0,c),_1,add(_0,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,add(c,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_5), -product(_5,add(_4,c),d), -product(_6,_3,_2), -product(_6,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,_3,c), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,c,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,d,d), -product(_2,_2,_1), -product(_3,_1,_1), -product(_3,add(d,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,add(d,c),additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_0,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(additive_identity,_0,d), -product(_2,add(c,_1),_1), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,d,_0), -product(d,_0,_0), -product(d,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,c), -product(_4,_3,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_0,_3), -product(_2,_4,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(add(_3,c),add(_3,c),_1), -product(add(_3,c),_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_2,additive_identity),c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,d), -product(d,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),add(d,c),d), -product(d,add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,_0,d), -product(c,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_1,_4,add(_3,_2)), -product(_2,_4,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_1,_3), -product(_2,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(_1,add(c,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(d,add(c,c),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,_0,c)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,add(_1,_0),_1), -product(c,_2,c)]
[-product(c,c,c), -product(additive_identity,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(additive_identity,additive_identity,_0), -product(_1,additive_identity,d), -product(_1,_0,d), -product(_0,d,additive_identity), -product(_1,additive_identity,additive_identity)]
[-product(c,_0,_1), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1), -product(_1,_2,_0)]
[-product(additive_identity,_0,c), -product(_0,_1,_2), -product(c,_1,d)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_1,add(_0,additive_identity),_2), -product(_2,_1,c), -product(_1,_0,d), -product(add(_0,additive_identity),add(_0,additive_identity),_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,_3,d), -product(_2,add(additive_identity,c),_3)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_1,_1,add(_3,c)), -product(add(_3,c),_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,_0,add(c,d)), -product(add(c,d),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,c), -product(c,d,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_4,add(d,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(add(c,c),_0,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_0,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_1,c)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_1,d)]
[-product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,c), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_0,_0,_3), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(d,_0,additive_identity), -product(_0,d,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(c,_0,d), -product(_0,_2,add(_0,_1)), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,_1), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_5,add(_2,_0)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,add(_1,additive_identity),_0)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_3,_0), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_inverse(_1),_1), -product(additive_inverse(_1),_0,additive_inverse(_1)), -product(additive_inverse(_1),additive_inverse(_1),c), -product(c,_0,d)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_0,d), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(c,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_2,d,additive_identity), -product(_0,_2,_1), -product(_0,additive_identity,d), -product(_1,_0,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(d,d,_0), -product(d,c,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,_0,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,_0,_1), -product(_4,c,additive_identity)]
[-product(_0,c,c), -product(c,_1,d), -product(_2,_3,add(d,c)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,additive_identity,_1), -product(_2,_0,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_3,_4,add(_2,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_2,c,_3), -product(d,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),d,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(c,add(d,c),additive_identity)]
[-product(_0,add(d,c),c), -product(d,_0,_0), -product(_1,_0,d), -product(d,_1,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_4,add(c,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_4,_2), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,additive_identity,d), -product(_4,_0,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(_2,c,c), -product(_2,add(c,_1),d), -product(add(c,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_inverse(_1)), -product(_1,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,c)), -product(c,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,add(additive_identity,_0))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,_2), -product(_3,c,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,add(_1,c),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(c,c,c), -product(_0,d,add(d,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,additive_identity,d), -product(_2,_3,add(_3,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d), -product(d,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(add(_0,c),_0,_0), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,c), -product(c,_1,d), -product(_1,c,additive_identity)]
[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),_2), -product(_2,add(_0,_1),c), -product(_1,_0,d), -product(add(_0,_1),_1,additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,add(c,c),d), -product(_2,_0,_1), -product(_2,d,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_0,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_0,add(d,_1),d), -product(_0,_0,_0), -product(_0,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,additive_identity,add(d,c)), -product(_1,_4,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),d,_1), -product(d,add(_1,_0),_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(_2,d,add(_0,d)), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_3,_1,_1), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_2,_2), -product(_5,d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,_0), -product(d,_2,_1)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_5,add(_3,_0)), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(d,c),d), -product(_2,_3,_3), -product(_4,_3,_2), -product(_4,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,c,d), -product(c,_1,c)]
[-product(_0,c,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_0), -product(_0,_0,d), -product(_2,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,add(d,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(c,_0),_1), -product(c,_1,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(_0,d,d), -product(_0,add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,d), -product(d,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,add(_0,c)), -product(_0,additive_identity,d)]
[-product(_0,additive_identity,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,_0), -product(_0,_0,_0), -product(_1,_2,add(_1,d)), -product(_0,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_3,_2), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_5,_4,_2), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,d), -product(c,_0,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_3), -product(_3,_1,d), -product(_4,_2,c), -product(_4,additive_identity,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_2,_6), -product(_6,add(_0,c),additive_identity)]
[-product(_0,_1,_2), -product(d,_0,d), -product(d,_1,c), -product(_1,_3,add(_0,_2)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,additive_identity,_2), -product(_4,_0,_2)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,c,additive_identity)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,add(_3,_0))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,additive_identity,d), -product(_1,_4,_1), -product(_5,_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(d,_0,add(_0,additive_identity))]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_inverse(_0)), -product(d,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_0,_0,d), -product(c,_0,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_0,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_5,_1), -product(c,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_2), -product(_2,_1,c), -product(_3,additive_identity,d), -product(_3,_3,_4), -product(_4,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(additive_identity,additive_identity,_2), -product(_2,_0,c), -product(_2,additive_identity,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_1,add(c,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(d,c),d), -product(_3,_0,_2), -product(_3,d,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_2,d), -product(add(_0,c),add(_0,c),_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_1,_1,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,c),additive_identity), -product(d,_3,d)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(d,d,d), -product(d,_2,add(_1,_0)), -product(_1,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_2), -product(_2,_3,d), -product(_3,add(additive_identity,c),_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_2,additive_identity,c), -product(d,_2,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,additive_identity), -product(_3,_2,add(_2,c)), -product(_3,additive_identity,d), -product(add(_2,c),_3,_2)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_1,d,_2)]
[-product(_0,additive_identity,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,d), -product(_1,additive_identity,_1), -product(_1,_2,c)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(add(_2,c),_2,_3), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(d,c,_0), -product(d,additive_identity,d), -product(d,_1,_1)]
[-product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(additive_identity,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(add(_0,d),_0,d), -product(add(_0,d),add(_0,d),_1), -product(_1,_0,c), -product(_2,add(_0,d),add(_0,d)), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(_2,add(_0,d),c), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_0,c), -product(c,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(add(_1,_0),_1,_2), -product(c,add(_1,_0),c), -product(c,_2,d), -product(_0,c,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_1,d), -product(c,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_2,add(_1,d)), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(d,c,_1), -product(_1,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_0), -product(_0,_2,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,add(_0,_1),c), -product(_5,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,c), -product(c,_0,c), -product(_1,c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,additive_identity,add(_2,c))]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,add(_3,additive_identity),_0), -product(_0,_5,_0)]
[-product(_0,additive_identity,c), -product(_0,d,_1), -product(d,_0,_0), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_3,_4,_1), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_0,_2), -product(_6,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,c), -product(c,_4,d), -product(_1,add(_4,_2),_5), -product(_3,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_5,d), -product(_3,_6,add(_4,c)), -product(_2,_6,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_1), -product(_0,_1,_0), -product(_0,_2,d), -product(_0,_0,_0)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(c,add(_0,d),_0), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(c,c,add(d,d)), -product(add(d,d),c,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(add(_3,_2),add(_3,_2),_0), -product(add(_3,_2),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_2,_2,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_1,_0,_0)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,d)]
[-product(add(_0,_0),_0,c), -product(_0,_0,add(_0,_0)), -product(_0,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,_3), -product(_4,_0,_3)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_1,additive_identity), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_2,add(_1,_1)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(c,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,add(_4,c),_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,_1,_2)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_1,_4,_2), -product(c,_4,additive_identity)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,add(c,c),d), -product(_0,c,additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(c,additive_identity,_0), -product(_0,c,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,d,_0), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(d,d,c), -product(c,c,additive_identity), -product(d,c,d)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),_6), -product(c,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_1,additive_identity), -product(c,d,additive_identity), -product(additive_identity,_1,d), -product(c,additive_identity,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_inverse(c),d), -product(_1,_2,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_0,_1), -product(c,add(_0,additive_identity),c), -product(c,_1,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(additive_identity,_1),_2,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),_0,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,c), -product(_0,_1,d), -product(_1,add(c,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,c,_0), -product(_1,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_2,_0), -product(c,c,c), -product(c,_2,d), -product(c,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_0), -product(_0,_0,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,additive_identity), -product(_2,_0,add(_0,_1)), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(_3,add(_2,c),d), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_7,add(_4,c),_8), -product(_9,_7,_2), -product(_9,_8,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_2,c,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_2), -product(_0,_3,d), -product(_3,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),_2), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,add(_1,c),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,_1), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_3,_2), -product(_4,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d), -product(_1,c,_0)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(add(d,d),d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(add(_0,_1),_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,_0), -product(d,c,c)]
[-product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,additive_identity), -product(_4,_3,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(c,add(d,d),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(_2,d,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,c), -product(c,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,add(c,d),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,c,_2)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,add(c,c),d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0)]
[-product(c,c,d), -product(c,c,c), -product(add(d,d),add(d,d),c), -product(add(d,d),c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,d), -product(_3,c,additive_identity), -product(d,_3,d)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(add(d,c),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_2,_4,add(_2,c)), -product(_3,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,_3), -product(_3,_2,d), -product(_1,_1,_1), -product(_4,_0,_3)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(_0,d,add(additive_identity,c))]
[-product(_0,c,c), -product(c,_0,_0), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_0,c), -product(_2,c,additive_identity)]
[-product(c,_0,c), -product(c,additive_identity,d), -product(_0,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,c,additive_identity), -product(_1,_0,_2), -product(_2,c,c), -product(_1,c,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,d), -product(_2,additive_identity,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(_1,_2,d), -product(_3,_1,add(_0,_1)), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,add(_0,additive_identity),_0), -product(_0,_1,c)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_3,_0), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,d), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,additive_identity,_0), -product(_0,_4,c)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,additive_identity,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d), -product(d,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,_3), -product(_4,_2,_2), -product(_4,_3,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,add(_0,_1))]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,add(_1,_0),additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,d,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_1,_2,d), -product(_2,add(_0,_1),_3), -product(_0,_3,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,_1,add(c,c)), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,c), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(_1,c,c)]
[-product(c,_0,additive_identity), -product(_1,c,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_1,_3,add(_1,_1)), -product(c,_3,additive_identity)]
[-product(c,_0,_0), -product(d,c,additive_identity), -product(additive_identity,_0,c), -product(d,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,add(d,additive_identity),c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_inverse(_1),additive_inverse(_1),_0), -product(additive_inverse(_1),_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_inverse(d),_0), -product(_0,_1,_0)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),_2,d), -product(c,add(d,_1),add(d,_1)), -product(c,c,_3), -product(_3,add(d,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,_0), -product(d,d,d)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,additive_identity,d), -product(_2,additive_identity,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,c,c), -product(_5,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,add(_2,_0),_2), -product(d,_1,add(_2,_0)), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(add(_1,_0),add(_1,_0),d), -product(add(_1,_0),d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_1,_1,_3), -product(_3,add(c,c),additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(c,c,d), -product(_0,_0,add(_0,additive_identity))]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,_1), -product(d,additive_identity,d), -product(d,_0,c), -product(additive_identity,_1,_2), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,_1,add(_0,_0)), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,d), -product(_2,additive_identity,additive_identity), -product(_3,additive_identity,c), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,add(additive_identity,c),_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(c,c,_2), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_1,_0), -product(c,_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(c,c,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_0,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(additive_identity,d,_0), -product(additive_identity,additive_identity,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,_1,add(c,c)), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(_1,_1),_0), -product(c,_2,c)]
[-product(d,c,additive_identity), -product(c,d,c), -product(c,c,c), -product(c,d,d), -product(d,c,add(c,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,c,additive_identity), -product(_2,additive_identity,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(_0,add(additive_identity,d),_0), -product(add(additive_identity,d),add(additive_identity,d),_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,d)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(c,c,d)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(d,add(_3,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_1,_3,add(_1,_0)), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,d), -product(_2,additive_identity,d), -product(d,d,_1), -product(_2,_3,_0)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(_1,c,additive_identity), -product(add(additive_identity,_0),_1,_2), -product(_2,c,d), -product(_1,_0,add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,_2,additive_identity), -product(_4,_0,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(add(_2,_0),add(_2,_0),c), -product(add(_2,_0),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,additive_identity,_1), -product(d,_3,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,_2,_1)]
[-product(c,c,additive_identity), -product(_0,c,d), -product(d,c,c), -product(c,d,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_0,_3)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,d,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,_2), -product(_2,d,c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),_3,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(d,_0,_1), -product(_1,_1,c), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(_2,add(d,_1),_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(additive_identity,_3,d), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_0), -product(_2,_3,_2), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,_1,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_2,c), -product(_3,_1,c)]
[-product(d,add(_0,_1),_1), -product(d,d,_0), -product(_0,add(_0,_1),c), -product(_0,d,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_2,_3,c), -product(_1,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_4,_3,additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,add(_1,additive_identity),d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_2,add(d,c),additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(d,d,additive_identity), -product(c,d,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(_1,_2,add(_0,_0)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,add(_2,_1),_2), -product(c,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(c,additive_identity,c)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,additive_identity,add(_4,c)), -product(_1,_6,_1)]
[-product(_0,_1,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_3,_0,_0), -product(_3,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_3,add(_0,c)), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(d,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,additive_identity), -product(_0,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_3,add(_4,c),_7), -product(_6,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(c,_1,_1), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_2), -product(add(_0,c),_2,d), -product(add(_0,c),add(_0,c),_3), -product(_3,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,additive_identity,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(_1,add(_0,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_4), -product(_4,_0,d), -product(_5,_3,additive_identity), -product(_1,_5,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_0,_2), -product(_3,_1,add(_0,_1)), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_2,_3,add(_1,c)), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(add(c,c),c,additive_identity), -product(additive_identity,add(c,c),d), -product(add(c,c),c,add(c,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_2,_0), -product(_0,_5,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_3,_1), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,c,add(c,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_2,_2,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,additive_identity), -product(_0,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(_0,_0,_2)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_4,add(_1,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(_1,_2,add(_0,d)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,c,additive_identity), -product(d,_1,_0), -product(d,additive_identity,d), -product(_2,c,c), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,d,c), -product(_2,_5,_3), -product(_4,_6,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(d,d,c), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_inverse(c)), -product(c,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,_4,add(_3,c)), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_1,_1,_0)]
[-product(c,_0,d), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,c,additive_identity)]
[-product(d,additive_identity,c), -product(d,_0,d), -product(_0,_0,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_1,d), -product(_2,additive_identity,additive_identity), -product(_3,c,additive_identity), -product(_2,_3,_2)]
[-product(c,c,_0), -product(c,c,c), -product(_1,c,c), -product(_1,c,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,c), -product(_5,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(d,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,d), -product(d,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,add(_0,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_1,d,c), -product(c,_1,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,add(_1,additive_identity),_0), -product(_0,_3,c)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,d), -product(d,_0,c), -product(d,_0,add(d,additive_identity))]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,additive_identity), -product(additive_identity,_0,c), -product(_2,c,d), -product(_2,_0,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(d,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(c,d,d), -product(c,c,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(add(_0,_1),_0,_2), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_0,_5,_1), -product(c,_5,additive_identity)]
[-product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,_1,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,c), -product(_2,_3,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(c,c,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,additive_identity,additive_identity), -product(c,c,d), -product(d,additive_identity,c), -product(d,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(add(c,d),add(c,d),c), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_4,_5,add(_3,_2)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(_2,c,_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,add(_3,c),_3), -product(c,_2,_1), -product(_1,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(d,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,d,c)]
[-product(_0,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,_2,d), -product(add(d,_0),_1,_1), -product(_3,add(d,_0),add(d,_0)), -product(_3,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,additive_identity,add(_1,c))]
[-product(_0,additive_identity,c), -product(_0,_0,_0), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,c)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_2), -product(_2,add(c,c),d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),add(_0,_0)), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,add(_1,c),additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(add(_0,d),add(_0,d),d), -product(add(_0,d),d,additive_identity)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_3,_1,_1), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,add(_0,additive_identity)), -product(c,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_0,_2), -product(_2,_1,d), -product(_1,add(c,c),_3), -product(_2,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_2), -product(_2,_3,_5), -product(_5,_4,d), -product(_4,add(_2,c),_6), -product(_3,_6,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,add(_0,additive_identity)), -product(add(_0,additive_identity),d,c), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d)]
[-product(add(d,_0),_0,c), -product(_0,d,d), -product(_0,_0,add(d,_0)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,additive_identity,d), -product(additive_identity,_3,add(_3,c))]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(d,add(_1,_0),_3), -product(_3,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,additive_identity,add(_0,c)), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,additive_identity,_3), -product(_2,_0,_2), -product(_2,_3,d), -product(_2,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,c,additive_identity), -product(_0,d,c), -product(_0,additive_identity,d)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_1,_3,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_0,add(c,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_2,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,c,_4), -product(_4,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_0,additive_identity), -product(c,_1,c), -product(c,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,c)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(_0,d,_1), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,d), -product(_2,c,additive_identity), -product(additive_identity,_3,d), -product(_4,_3,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,c), -product(c,_1,c), -product(c,_0,d), -product(_0,c,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_1), -product(_2,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(c,_0,_0), -product(d,_0,c)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,d,add(d,d)), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(c,c),additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(add(d,additive_identity),_0,d), -product(c,add(d,additive_identity),add(d,additive_identity)), -product(c,c,add(d,additive_identity))]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,_3), -product(additive_identity,_1,_4), -product(_4,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_4,_1), -product(_0,_4,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,d), -product(d,_0,c), -product(_1,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_4,_5,add(_0,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_1,add(additive_identity,_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_2,c),_2), -product(_2,_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(_3,d,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,_3,d), -product(_1,_2,_2), -product(_1,_1,_4), -product(_4,add(d,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_2,d,d), -product(_2,_2,_1), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_2,_1), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(d,_1,_0), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,additive_inverse(c)), -product(additive_inverse(c),_0,c), -product(_0,additive_inverse(c),_1), -product(_1,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_0,_0), -product(_1,additive_identity,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,_2), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2), -product(_2,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,c), -product(c,add(c,_1),_2), -product(_2,c,d), -product(add(c,_1),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(_2,_2,add(_2,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,additive_identity,_3), -product(_5,_0,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_1,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(_0,_5,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_0), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,c,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_1,_2)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_1,_2), -product(_3,_0,add(_3,_2)), -product(add(_3,_2),_1,c), -product(_3,_3,d), -product(d,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,c), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_1), -product(_1,_2,_1), -product(d,add(_1,c),_3), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_0), -product(additive_identity,_1,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,_1,d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,_2,d), -product(_0,_1,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_4), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_4,d), -product(add(_3,c),_2,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,c,_0), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_6,_4), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_1), -product(d,_0,_1), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_0,add(_3,additive_identity))]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_1), -product(c,_1,d), -product(additive_identity,_2,_0), -product(_1,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(_0,_1,add(c,d)), -product(d,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,_0,add(_0,_1)), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_3,_4,add(c,c)), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_1,d), -product(d,_0,d), -product(d,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),_0), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,c), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,c,d)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(d,d,_0), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,additive_identity), -product(c,_2,_1), -product(_1,_2,d), -product(c,c,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_2,additive_identity), -product(d,_4,d), -product(_5,_0,_2)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,d,d), -product(_1,_0,c), -product(_0,_1,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_1,_2,add(_0,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,_2,c), -product(_0,add(_0,_1),d), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_0,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,_2), -product(d,_1,_0), -product(d,_2,d), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,_2,c), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,d,_1), -product(d,_2,d)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(_0,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_1)]
[-product(_0,_1,_2), -product(_0,_0,d), -product(d,_1,c), -product(_1,_3,add(_0,_2)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(c,add(_1,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(_2,d,d), -product(d,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,c,d), -product(_0,_0,additive_identity), -product(additive_identity,c,c), -product(_1,d,_0), -product(_0,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,_0,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(d,d,c), -product(d,c,additive_identity), -product(c,c,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,c,_2), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_0,_1), -product(_2,add(_0,additive_identity),c), -product(_2,_1,d), -product(c,_2,c)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_3,_0,_0), -product(_3,add(d,_1),additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,c,d), -product(c,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_4), -product(d,_2,_5), -product(_5,_3,d), -product(_3,add(_4,c),_6), -product(_5,_6,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,c,_1), -product(_1,d,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,d), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,c,_1), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_0), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,additive_identity,d), -product(_1,c,_2), -product(_0,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,_0,c)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_1,add(d,_0),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,c), -product(c,_1,d), -product(_0,c,_1), -product(_2,_0,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(_0,d,add(c,d)), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_0,_2), -product(_3,_4,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,_2), -product(_2,c,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(add(_0,c),add(_0,c),additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,c,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,add(additive_identity,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_2), -product(additive_identity,_1,_0), -product(additive_identity,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,d,c)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,d), -product(d,d,_0), -product(_0,d,_0)]
[-product(_0,d,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,_2), -product(_1,_1,_1), -product(d,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_1,add(_3,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(d,_1,add(c,d)), -product(_0,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,add(_1,_0),_1), -product(_0,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_1,_1,_1), -product(_2,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),add(_0,_1),_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,additive_identity,c), -product(d,_3,d)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,_2), -product(c,_1,d), -product(_1,add(_2,c),_3), -product(c,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,add(d,c)), -product(c,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(c,c,d), -product(_0,_0,_0)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,additive_identity,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,c,d), -product(c,additive_identity,_1), -product(c,c,c)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,_0), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,add(_2,additive_identity),_0), -product(_0,_5,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,c), -product(_0,c,d), -product(c,add(_0,additive_identity),_0)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(additive_identity,_2,d), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_3,_2,c)]
[-product(_0,add(_1,c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_1,_2,_3), -product(_3,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_3,add(c,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,add(_2,_1)), -product(_3,_0,_0), -product(_3,add(_2,_1),d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_2,add(_1,_1),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,add(additive_identity,_0),_1), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_inverse(c),_4), -product(_5,_3,_2), -product(_5,_4,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_0,d), -product(_1,c,d), -product(c,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_inverse(c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_2,add(_0,additive_identity),_1), -product(_1,_1,c), -product(_2,_0,d), -product(add(_0,additive_identity),_2,_2)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,_1,_2)]
[-product(_0,additive_identity,c), -product(d,d,_0), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,add(_1,c),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_0,add(_3,additive_identity)), -product(_0,_5,_0)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(_3,c,c), -product(_3,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,c,_7), -product(_8,_6,_2), -product(_8,_7,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(d,d,_0), -product(_1,d,d), -product(_1,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_1,_0), -product(_2,_3,_0)]
[-product(c,additive_identity,c), -product(_0,_0,c), -product(_0,c,d), -product(additive_identity,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,_1,add(_0,c)), -product(c,_1,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_4,_1), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_1,add(_2,additive_identity)), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,_4,d), -product(_1,_5,add(_4,_2)), -product(c,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,_1,additive_identity), -product(_1,additive_identity,d)]
[-product(additive_identity,_0,c), -product(_1,_2,_3), -product(additive_identity,_1,_4), -product(_4,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,add(_0,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_2,d), -product(d,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_0,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(c,c,c), -product(c,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_0,additive_identity,_0), -product(_0,_0,_0)]
[-product(d,d,c), -product(d,d,d), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_0,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,d,c), -product(d,_1,d)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(c,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_1,d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,add(c,c),additive_identity)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,d), -product(_1,additive_identity,_1)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),c,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(add(d,_0),add(d,_0),_0), -product(add(d,_0),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,add(d,_0),_2), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,c)), -product(c,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,additive_identity,_0), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,d,_1), -product(d,_3,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,c),additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,c), -product(_3,_2,c), -product(_3,c,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,add(c,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,_1,d), -product(_2,_3,_1)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,_1), -product(_0,c,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_2,_0), -product(add(_0,_1),_1,add(_0,_1)), -product(add(_0,_1),_2,d), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,_0), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,d,_1), -product(d,_0,_0), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,c,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,c,additive_identity), -product(_0,_1,c)]
[-product(add(_0,additive_identity),d,additive_identity), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,d,c), -product(_0,add(_0,additive_identity),d), -product(add(_0,additive_identity),_0,add(_0,additive_identity))]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(d,c,_3), -product(_3,additive_identity,additive_identity)]
[-product(c,d,additive_identity), -product(c,c,d), -product(d,d,c), -product(additive_identity,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,c,d)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_0,_0,_0), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,_2,d), -product(c,_1,_2)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,add(_1,additive_identity),c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,c), -product(c,_3,_1)]
[-product(d,d,_0), -product(c,d,c), -product(_1,d,additive_identity), -product(d,_1,c), -product(d,additive_identity,d), -product(c,d,_1)]
[-product(d,_0,c), -product(_1,_2,_3), -product(_4,_1,d), -product(_4,_3,d), -product(_3,add(_2,_0),_5), -product(_4,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,_3,add(_2,d)), -product(d,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_3,_0), -product(add(_0,_1),_2,_4), -product(_4,_3,d), -product(_5,add(_0,_1),add(_0,_1)), -product(_5,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_0,c,_4), -product(_0,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_1,additive_identity,c)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_0,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_2,add(_2,d),_3), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,add(_1,_0),_1), -product(c,c,_2), -product(_2,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(c,_2,c), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,c), -product(_0,c,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(d,c,d), -product(_1,d,additive_identity), -product(additive_identity,c,d), -product(_1,additive_identity,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,d,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(add(c,_1),add(c,_1),_0), -product(add(c,_1),_0,additive_identity)]
[-product(c,_0,c), -product(_0,add(_0,_0),_0), -product(c,_0,additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_3,add(_0,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_0,_1)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,add(additive_identity,_1))]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(d,d,_0), -product(_1,d,_1), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,add(d,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_1,d)]
[-product(additive_identity,additive_identity,d), -product(d,additive_identity,c)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,_0,d), -product(c,_2,c), -product(_0,_3,d)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,_4), -product(additive_identity,_2,_5), -product(_5,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(c,_1,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_2,_0,_1)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_0,_0,d), -product(_1,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(d,_0,_0), -product(d,_0,d)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,add(d,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_0,additive_identity), -product(_0,d,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_3,_6,c), -product(_5,_6,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_0,additive_identity,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,c), -product(_1,_0,_0), -product(d,_0,additive_identity), -product(_1,d,_1), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_1,d), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_2,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,_0,_2), -product(_2,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,_3,add(_2,d)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_3,_4,add(_0,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,additive_identity), -product(_2,_0,add(_0,_1)), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,_1,add(_1,_0))]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_0,d), -product(additive_identity,d,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(d,c,c), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,_2), -product(d,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_0,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d), -product(_3,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,c), -product(_1,_3,c)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,additive_identity,_1), -product(d,_2,d)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,_2,d), -product(d,_1,_1), -product(_2,add(d,_0),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,d,_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_0,d), -product(c,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(add(_0,c),add(_0,c),_2), -product(add(_0,c),_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_3,_4,add(_2,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(_0,additive_inverse(_0),c), -product(_1,additive_inverse(_0),additive_inverse(_0)), -product(_1,_0,d)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(_1,add(d,c),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,add(_1,_0),additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(_1,c,additive_identity), -product(_2,_1,add(c,_0)), -product(_2,additive_identity,d), -product(_1,_0,add(c,_0))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(c,c,additive_identity), -product(_0,c,add(c,c)), -product(_0,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,add(_1,c),_1), -product(_0,_2,c)]
[-product(_0,additive_identity,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_5,c), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,add(additive_identity,_1),c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,add(_5,c)), -product(add(_5,c),_4,d), -product(_2,_2,_6), -product(_6,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,_2,c), -product(_1,_2,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,c,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,d), -product(c,_3,_1)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,add(additive_identity,c),c), -product(_1,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,_1), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,c,additive_identity), -product(_0,c,add(additive_identity,c)), -product(add(additive_identity,c),c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_inverse(c)), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d)]
[-product(_0,_1,additive_inverse(_1)), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,_3,d), -product(_2,c,_3)]
[-product(_0,_1,_2), -product(c,_0,d), -product(d,_1,c), -product(_1,add(_0,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_2,add(_5,c),additive_identity)]
[-product(d,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,add(additive_identity,c),_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(_0,c),_0)]
[-product(d,_0,additive_identity), -product(_1,d,_2), -product(_2,_0,c), -product(_1,_3,d), -product(_3,_0,add(_3,additive_identity))]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,d), -product(d,_2,d), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(d,_0),d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_1,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(_0,_5,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_3), -product(_3,_0,d), -product(_0,_0,_2)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(add(additive_identity,c),add(additive_identity,c),c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),c,additive_identity), -product(add(additive_identity,c),c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,add(_0,d),c), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(add(_1,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_1), -product(_3,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_0,_1), -product(_0,_3,_2)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),add(_1,c),_1), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,d,add(additive_identity,c)), -product(_1,_3,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(c,c,_2), -product(_2,_1,d), -product(_1,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_5,_6,add(_4,c)), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,c), -product(d,c,d), -product(c,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(_2,_0,c), -product(_2,c,d), -product(_1,add(_1,additive_identity),_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_1,_0,_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,additive_identity,_1), -product(_2,c,c), -product(_2,_1,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,add(_0,_1),_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,add(_2,_0)), -product(add(_2,_0),_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,additive_identity), -product(_2,_3,add(additive_identity,c)), -product(add(additive_identity,c),_3,d), -product(_2,_2,_3)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(additive_identity,_1),additive_identity), -product(c,c,_2), -product(_2,add(additive_identity,_1),d)]
[-product(d,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,c), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_1,_6,add(_3,_1)), -product(c,_6,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(_3,add(_0,_1),c), -product(_3,_1,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,add(_3,_2),additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_4,additive_identity,_1), -product(_1,_4,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,d,_1), -product(_1,additive_identity,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_inverse(_1)), -product(additive_inverse(_1),c,d)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_7,c), -product(_2,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(additive_identity,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(add(d,c),add(d,c),c), -product(add(d,c),c,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(add(_1,_2),_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(add(_1,_2),_1,d), -product(c,_0,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(c,d,_1), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_0,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_0), -product(_0,_1,c), -product(_1,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),_1,d), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_1,_3,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,_0,add(_0,_0)), -product(_1,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,d,_3), -product(_3,d,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(d,c,d), -product(c,_0,add(d,c)), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_2,_2,_3), -product(_2,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(d,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(_0,_1,_0), -product(_0,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,_0), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(_0,c,d), -product(_0,_0,additive_identity), -product(additive_identity,c,c), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(_3,add(_0,_1),c), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,add(d,_0),_3), -product(_0,_3,additive_identity)]
[-product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_0)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,_1,add(_0,d)), -product(_0,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(c,c,_1), -product(_1,_0,c), -product(_1,c,d), -product(_0,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,additive_identity,d), -product(_3,_2,add(_2,_1)), -product(c,_3,_0)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(_0,_3,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_3,_3,add(_5,_2)), -product(add(_5,_2),_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,_1,add(_1,c)), -product(c,_2,_0)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(c,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(d,c,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_2), -product(_0,_3,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_0,_3), -product(_0,_5,_0)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(c,_0,_1), -product(_0,c,_0)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_0)]
[-product(additive_identity,d,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_0,_1,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_0,_2,add(_2,c))]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_2,c,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_0,add(_2,additive_identity)), -product(c,_3,_0)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_0,additive_identity), -product(_1,c,d)]
[-product(_0,_1,_2), -product(_0,_0,additive_inverse(_2)), -product(additive_inverse(_2),_1,c), -product(additive_inverse(_2),_0,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_0,d), -product(_4,_2,_2), -product(_4,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_2,_6), -product(_6,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,d), -product(_0,_0,d), -product(_1,d,additive_identity), -product(d,_1,d)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_2,_0,_3), -product(_1,_2,add(_0,c)), -product(_1,_3,d), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,c,_3), -product(d,_3,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(additive_identity,add(d,additive_identity),c), -product(_0,_1,d), -product(add(d,additive_identity),_0,_0)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(add(_0,c),_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,c,d), -product(_1,_2,add(_0,_1)), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_4,add(_0,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_3,c,_0), -product(_3,additive_identity,d), -product(_1,_2,add(_2,c))]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(additive_identity,_2,_0), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,additive_identity,add(_1,c))]
[-product(_0,c,c), -product(c,_1,d), -product(_0,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_0,additive_identity), -product(c,_0,_0), -product(_0,_0,d)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,d,c), -product(d,c,c), -product(d,c,d), -product(d,additive_identity,c)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(additive_identity,d,_0)]
[-product(d,_0,c), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,d,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_1,_2), -product(_3,_2,d), -product(_4,_0,d), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]


Total execution time was 603633 ms.


Execution time was 603629 ms.

status 103
---System Timeout---
SOLAR PROBLEM
RNG005-2.C2i1_all_ld-1-4_Solar-Carc
------------------  TIME OUT --------------------
resultFilename :RNG005-2.C2i1
nethod:Solar
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:
timout :600000
Starting SolveToClause...
Launching solver...
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), +equalish(additive_inverse(_0),additive_inverse(_1))]
 [-equalish(_0,_1), +equalish(add(_0,_2),add(_1,_2))]
 [-equalish(_0,_1), -sum(_0,_2,_3), +sum(_1,_2,_3)]
 [-equalish(_0,_1), -sum(_2,_0,_3), +sum(_2,_1,_3)]
 [-equalish(_0,_1), -sum(_2,_3,_0), +sum(_2,_3,_1)]
 [-equalish(_0,_1), +equalish(multiply(_0,_2),multiply(_1,_2))]
 [-equalish(_0,_1), -product(_0,_2,_3), +product(_1,_2,_3)]
 [-equalish(_0,_1), -product(_2,_0,_3), +product(_2,_1,_3)]
 [-equalish(_0,_1), -product(_2,_3,_0), +product(_2,_3,_1)]
 [+sum(additive_identity,_0,_0)]
 [+sum(_0,additive_identity,_0)]
 [+product(_0,_1,multiply(_0,_1))]
 [+sum(_0,_1,add(_0,_1))]
 [+sum(additive_inverse(_0),_0,additive_identity)]
 [+sum(_0,additive_inverse(_0),additive_identity)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_2,_3,_5), +sum(_0,_4,_5)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_0,_4,_5), +sum(_2,_3,_5)]
 [-sum(_0,_1,_2), +sum(_1,_0,_2)]
 [-product(_0,_1,_2), -product(_1,_3,_4), -product(_2,_3,_5), +product(_0,_4,_5)]
 [-product(_0,_1,_2), -product(_1,_3,_4), -product(_0,_4,_5), +product(_2,_3,_5)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -product(_0,_5,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -sum(_2,_4,_6), +product(_0,_5,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -product(_5,_1,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -sum(_2,_4,_6), +product(_5,_1,_6)]
 [-sum(_0,_1,_2), -sum(_0,_1,_3), +equalish(_2,_3)]
 [-product(_0,_1,_2), -product(_0,_1,_3), +equalish(_2,_3)]
 [+product(additive_identity,_0,additive_identity)]
 [+product(_0,additive_identity,additive_identity)]
 [-sum(c,d,additive_identity)]
Top clauses:
 [-sum(c,d,additive_identity)]
Production field:
 [-product(_0,_1,_2)]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
>>>>>>>>>>>> Solve - measure : [599859, 2259968, 51898, 221841, 1074551, 0, 0, 0]
Solver finished.
SolveToClause Finished!
5644 CHARACTERISTIC CLAUSES

[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_2,_2,add(_1,c)), -product(add(_1,c),_2,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_0,c), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_0,_0,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_0,_1)]
[-product(d,d,c), -product(_0,d,d), -product(_1,d,additive_identity), -product(_0,_1,_0), -product(_0,d,_1)]
[-product(_0,c,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,d), -product(d,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_inverse(_2),d)]
[-product(_0,d,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,d), -product(_1,_0,add(additive_identity,additive_identity)), -product(c,_1,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(d,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_3,_0,_2), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_3,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_0), -product(c,_1,d), -product(_1,_0,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_0), -product(_0,_2,_4), -product(_4,_3,d), -product(_3,add(_0,_1),_5), -product(_2,_5,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_0,d,d), -product(_0,_0,add(d,_0)), -product(_0,c,additive_identity)]
[-product(d,c,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(d,_0,_1), -product(_1,d,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_3,_0), -product(_2,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_5,add(_3,c),_6), -product(_7,_5,d), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_0,additive_identity,d), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_5,d), -product(_5,_6,add(_4,c)), -product(d,_6,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(c,_0,add(_0,d)), -product(add(_0,d),c,c), -product(add(_0,d),c,additive_identity)]
[-product(d,_0,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),d), -product(add(d,_0),d,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_2,add(c,_1),_0), -product(_0,_2,_0)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_1,_0,_0)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(_0,_0,add(_0,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(c,c,c), -product(_0,d,d)]
[-product(d,d,c), -product(c,d,d), -product(d,add(c,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_2,_0,_4), -product(_4,_3,d), -product(_4,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(additive_identity,additive_identity,_1), -product(additive_identity,_1,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(additive_identity,_0),additive_identity), -product(c,add(additive_identity,_0),d)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,add(additive_identity,_0),c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,_1,add(d,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,d), -product(additive_identity,_1,_0)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_1,_0,_2), -product(_3,_1,add(_0,additive_identity)), -product(_3,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_2), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_4,_0,_2), -product(_4,additive_identity,d), -product(_0,_3,add(_3,c))]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,c,_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_4,_2), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(c,_1,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(_1,_0,additive_identity), -product(add(additive_identity,_0),_1,_2), -product(_2,_0,d), -product(_1,add(additive_identity,_0),add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,additive_identity,_2), -product(d,_3,d), -product(_4,_0,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(c,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,additive_identity), -product(c,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(c,c,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_0,d), -product(_0,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(c,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,add(additive_identity,c)), -product(add(additive_identity,c),_0,d)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_1), -product(_2,additive_identity,_0), -product(_2,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(add(d,d),add(d,d),_0), -product(add(d,d),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,add(d,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,_3,add(_2,_0)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_0,_1), -product(_1,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,c), -product(_0,c,d), -product(_2,add(_2,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_0,_5), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_1), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,add(_0,c),_2), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(add(additive_identity,c),d,d), -product(d,d,additive_identity), -product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(add(c,_0),add(c,_0),c), -product(c,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,add(_1,_1),_2), -product(_0,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_1,_0,additive_identity), -product(_2,_1,add(_0,_0)), -product(_2,additive_identity,d), -product(_1,add(_0,_0),add(_0,_0))]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,c), -product(_1,c,d), -product(_0,add(_0,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_3,d), -product(_2,add(_4,_1),_5), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,_0), -product(_1,_1,additive_identity), -product(additive_identity,_1,d), -product(_1,_0,_1)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_1), -product(c,_1,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_1,_0,_3), -product(_2,_3,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,_1)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_1,_2,add(c,c)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,c,d), -product(_2,_3,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_1,d), -product(_1,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_0,_2,_5), -product(_5,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,d,additive_identity), -product(c,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(c,_4,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_0,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(d,add(_1,_0),_1), -product(c,d,additive_identity), -product(additive_identity,add(_1,_0),d)]
[-product(_0,c,_0), -product(c,_0,_1), -product(_1,c,c), -product(c,additive_identity,d), -product(_1,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(d,c,d), -product(_1,d,additive_identity), -product(additive_identity,c,d), -product(_1,d,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_inverse(_1)), -product(c,_2,d)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(add(c,c),additive_identity,d)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(c,_2,_1), -product(_0,c,additive_identity), -product(additive_identity,_2,d)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,_2), -product(c,_1,c), -product(_0,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(_2,add(_0,d),add(_0,d)), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_2,_0,_0), -product(_0,_2,_3), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(c,add(_2,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_2,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_6,add(_5,c)), -product(d,_6,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,add(d,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(add(_1,_1),add(_1,_1),c), -product(add(_1,_1),c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,d), -product(c,c,_1), -product(_1,d,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_4), -product(_4,add(_1,_2),c), -product(_3,_1,d), -product(_5,_4,_3), -product(_5,c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,add(_2,c),_2), -product(c,_1,_3), -product(_3,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,add(d,d),_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(add(_1,c),add(_1,c),_2), -product(add(_1,c),_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(additive_identity,_0,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_0,_4,add(_0,c)), -product(_0,_4,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,_1,_1), -product(_4,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d)]
[-product(c,d,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_1,d), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_4,_3), -product(_2,add(_3,c),additive_identity), -product(additive_identity,_4,d)]
[-product(_0,additive_inverse(_1),c), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(_2,_0,c), -product(_2,c,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_2,c),_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),_2,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),c,c)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_0,additive_identity), -product(d,_1,_2), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,_2,d), -product(c,_1,c), -product(_0,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_1), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_3,_0), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_0,_1),_1), -product(_2,_0,d), -product(d,add(_0,_1),c), -product(_3,_0,_2), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,_3,d), -product(_3,_3,add(additive_identity,c))]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,add(_0,c),add(_0,c)), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,add(_3,_0),_5), -product(c,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(d,d,d), -product(d,d,_0), -product(_1,d,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,d), -product(_2,additive_identity,d), -product(d,_2,d)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_inverse(_0)), -product(additive_inverse(_0),_0,c), -product(_1,additive_inverse(_0),_0), -product(_1,c,d)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_4,d), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(_2,d,_0), -product(_1,_2,_1), -product(_3,d,_1), -product(_3,c,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_2,d,_3), -product(_2,_3,additive_identity)]
[-product(c,_0,c), -product(_0,add(_1,_0),_1), -product(c,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,d,c), -product(d,d,additive_identity), -product(c,d,d), -product(d,c,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,c),_0,_0), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(additive_identity,add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,additive_identity,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,_4,d), -product(_5,_0,add(_4,_2)), -product(_3,_5,_3)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,additive_identity,_1), -product(_0,_1,d), -product(additive_identity,_2,c), -product(_1,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(add(d,_0),_1,_2), -product(_2,_1,additive_identity)]
[-product(c,additive_identity,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_0,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,_0,_0)]
[-product(_0,d,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_1,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,c,_2), -product(_2,_3,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_5,_2,_2), -product(_5,_4,d), -product(_3,_6,add(_3,c)), -product(_4,_6,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_0), -product(_1,c,c), -product(_1,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(_0,_0,add(_0,_1))]
[-product(_0,_1,additive_identity), -product(d,_0,d), -product(d,_1,c), -product(_1,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_4,_5,add(d,_2)), -product(_3,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_0,_5), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_4,d), -product(_2,_5,add(_3,_1)), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,_2), -product(c,additive_identity,_1), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(add(_0,_0),_0,c), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,c,d), -product(_2,_1,add(_0,_0)), -product(_2,add(_0,_0),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(add(_0,c),add(_0,c),_2), -product(_2,_0,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_4,add(d,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,d), -product(additive_identity,_1,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_2,add(_3,c),_4), -product(_1,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,_1), -product(d,c,c), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(additive_identity,_5,_2), -product(d,_5,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,_0), -product(_0,c,c), -product(_1,_2,add(_1,d)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(_0,_5,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,_2,d), -product(_2,_2,_1)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_3,add(additive_identity,c)), -product(_2,_4,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(add(_0,c),_3,_0), -product(add(_0,c),_3,d), -product(_4,_2,_2), -product(_4,add(_0,c),additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,d,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(additive_identity,d,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_4,_5,add(_2,c)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,c,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,_4,d), -product(_5,add(_4,_2),_0), -product(_3,_5,_3)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,add(_2,c)), -product(_0,_1,c), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,_3,add(_2,d)), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_0,_0,_1), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,d,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(add(_0,c),add(_0,c),_2), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,d,d), -product(_2,_2,_0), -product(_1,_3,add(d,c)), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_1), -product(_1,_1,c), -product(c,_1,d), -product(_1,additive_identity,_1)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,c,additive_identity), -product(d,d,_0), -product(d,additive_identity,d), -product(_0,c,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,d), -product(_2,_2,d), -product(d,add(d,c),_3), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_4,_0), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,d,c), -product(c,additive_identity,additive_identity), -product(d,c,_0), -product(d,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_0,add(_3,c)), -product(add(_3,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,c), -product(_0,add(_3,_1),d), -product(c,d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_3,_1,_1), -product(_3,add(c,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_3,_4,add(_2,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,c,_2)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,_3), -product(_3,_0,c), -product(_2,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_1,_0,additive_identity), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,c), -product(c,add(_3,_1),d), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,c,_0), -product(_2,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,additive_identity,d), -product(_1,_4,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,add(additive_identity,c),_3), -product(_0,_4,_2)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(d,additive_identity,_0), -product(c,d,additive_identity), -product(d,_1,d)]
[-product(d,_0,additive_identity), -product(c,d,d), -product(d,_0,c), -product(_0,d,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_2,d,add(_1,additive_identity))]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,add(_1,d),_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,d), -product(_2,_3,c)]
[-product(_0,c,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,c,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(additive_identity,add(d,additive_identity),c), -product(_0,d,d), -product(_0,_0,add(d,additive_identity))]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_1,_2,add(c,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_1,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_0,c), -product(_4,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,d,add(_0,additive_identity))]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,add(d,_0),c), -product(_3,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_0,add(_3,_1),_6), -product(c,_6,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_0,_4,add(c,c)), -product(_0,_4,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_0,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,c,_5), -product(_2,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_0,_4,add(c,c)), -product(_3,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,d,_3), -product(_3,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_7,c), -product(_2,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_0,additive_identity,d), -product(_2,c,d), -product(_1,_2,c)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_1,_0,add(_0,_0)), -product(_2,_1,add(_0,_0)), -product(_2,add(_0,_0),d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(add(c,_0),add(c,_0),c), -product(c,add(c,_0),d), -product(add(c,_0),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,_0,additive_identity), -product(_1,d,c), -product(_1,additive_identity,d), -product(c,_0,_0), -product(_1,_2,_0)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0)]
[-product(additive_identity,_0,_0), -product(_1,additive_identity,d), -product(d,_0,c), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_0), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,additive_identity,_2), -product(_4,_0,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,d,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_2,_1,_1), -product(_2,_0,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_2,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,c,add(c,_1)), -product(add(c,_1),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_0,d), -product(_1,_1,_0)]
[-product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,additive_identity,d), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_1,_4,add(_2,c)), -product(c,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,d,additive_identity), -product(_1,_2,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,_0,add(c,_0)), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(c,d,additive_identity), -product(d,c,d), -product(d,d,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_1,c), -product(_4,_2,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(d,d,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_3), -product(d,_1,_4), -product(_4,_2,d), -product(_2,add(_3,_0),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(_0,add(_2,_1),c), -product(_0,_3,d), -product(c,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,add(c,_1)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_2,d), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,d), -product(_0,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,add(_0,_1)), -product(_0,_2,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,add(c,c),c), -product(add(c,c),_0,_0), -product(add(c,c),_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(d,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_3,add(d,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,add(additive_identity,c),_2), -product(_2,_3,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(c,c,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(add(_0,_2),add(_0,_2),_3), -product(add(_0,_2),_3,additive_identity)]
[-product(_0,c,c), -product(d,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,d,_0)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_1,_1,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,add(_3,c),_3), -product(_2,d,additive_identity), -product(additive_identity,add(_3,c),d), -product(_2,additive_identity,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,add(d,c),_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,c), -product(_3,_5,_2)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(additive_identity,_3,_2), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,additive_identity,add(c,c))]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,additive_inverse(d),c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,d), -product(_1,additive_identity,_1), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,additive_identity,_0)]
[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,_0,_1), -product(_1,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,additive_identity,_1), -product(d,_1,d), -product(_1,c,_2), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,add(_0,_0),additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_1), -product(_1,_0,d), -product(_1,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,_0), -product(_5,_3,additive_identity)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_2,_3,_5), -product(_5,additive_identity,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(add(_0,_1),_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_1,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(d,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,c,add(_0,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_1,_1,_2), -product(_2,_0,d), -product(_0,additive_identity,_1)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,add(c,_0),c), -product(_2,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(_0,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(d,_0,c), -product(_1,_1,additive_inverse(_0)), -product(d,_1,d)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(_0,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_1,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(add(_3,c),add(_3,c),_1), -product(add(_3,c),_1,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(add(d,_0),d,d), -product(add(d,_0),add(d,_0),c), -product(c,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_1,_2,add(c,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,c), -product(c,add(c,_0),d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_0,d), -product(c,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_1,_6,add(_4,_1)), -product(c,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,_0,add(c,_0)), -product(add(c,_0),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,c,_2), -product(_2,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,add(_2,additive_identity),c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,add(d,additive_identity),additive_identity), -product(_0,_0,d), -product(d,add(d,additive_identity),c), -product(_0,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,add(additive_identity,_0),_2)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,c)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,d,_0), -product(c,_2,c), -product(_0,_3,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_1,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(_0,_5,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(_0,_1,_1)]
[-product(c,c,c), -product(add(_0,c),_1,_0), -product(c,add(_0,c),_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,add(_2,c)), -product(_3,_1,_0), -product(_3,add(_2,c),d), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(c,_0,d)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_1), -product(_2,_0,_0), -product(_2,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_1,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_0,_4,add(_2,c)), -product(_0,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,c,c), -product(_1,_0,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,add(_1,_2)), -product(add(_1,_2),_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_1,_1,c), -product(_2,_0,d), -product(_0,_2,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,d), -product(c,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,additive_identity,add(_3,c))]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_2), -product(_2,add(c,c),d), -product(_3,_2,_1), -product(_3,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_0,_1,c), -product(_0,_3,d), -product(_1,add(_2,additive_identity),_0)]
[-product(_0,_1,c), -product(_1,_2,add(_2,_1)), -product(_3,_1,_0), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,add(_2,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),_3,d), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_3,_0,c), -product(_3,additive_identity,d), -product(_1,add(_2,c),_2)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,_1)]
[-product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,c), -product(c,_3,d), -product(_1,_3,_4), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_2,c,add(c,_1)), -product(c,_2,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(d,d,add(additive_identity,c))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(c,add(_0,c),additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_2,d,c), -product(d,_2,additive_identity)]
[-product(_0,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_2), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(_1,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,additive_identity,d), -product(_4,_0,_3)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(_1,_2,add(d,c)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(c,c),c), -product(d,_0,_0), -product(d,_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,add(_0,d),add(_0,d)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),add(d,c),d), -product(d,add(d,c),add(d,c)), -product(add(d,c),d,additive_identity)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,c,_0), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_0,_6), -product(_6,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,c), -product(_4,add(_3,_1),d), -product(c,_2,_5), -product(_5,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,d,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_0,_3,add(d,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,c,_2), -product(_1,_3,_0)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_0,additive_identity,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_4,_1), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(_1,c),_1), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_3,_1), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(c,additive_inverse(_0),c), -product(additive_inverse(_0),_0,_1), -product(c,_1,d)]
[-product(add(_0,c),_1,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(add(_0,c),_2,d), -product(_3,c,c), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_3), -product(_4,_1,d), -product(_4,_3,d), -product(_3,add(_2,_0),_5), -product(_4,_5,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,add(d,c)), -product(c,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(d,additive_identity),d,d), -product(add(d,additive_identity),add(d,additive_identity),_0), -product(_0,add(d,additive_identity),_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_1,d), -product(_4,_3,_2), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_1,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,c), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_inverse(c),_1), -product(_0,_1,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,add(_1,additive_identity),_1), -product(c,_0,_2), -product(_2,add(_1,additive_identity),d), -product(d,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_3,add(_1,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_1,add(_4,_2),_5), -product(_0,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_1,_2,_1)]
[-product(add(d,c),_0,c), -product(add(d,c),add(d,c),add(d,c)), -product(add(d,c),add(d,c),d), -product(d,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_inverse(_1)), -product(c,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_4), -product(_5,add(_3,c),_2), -product(_5,_4,d), -product(_6,_5,_2), -product(_6,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_4,_0,_0), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(d,_0)), -product(d,_1,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,_1,_2), -product(_0,_2,d), -product(_1,_3,add(_1,c)), -product(_2,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_0,_2,c), -product(_0,additive_identity,d), -product(_3,d,_1), -product(c,_3,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(add(d,c),add(d,c),_1), -product(add(d,c),_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_2,_0,_1)]
[-product(d,add(_0,additive_identity),additive_identity), -product(d,d,_0), -product(_0,add(_0,additive_identity),c), -product(d,d,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,additive_identity,d), -product(_1,_3,_1)]
[-product(additive_inverse(c),_0,c), -product(_1,additive_inverse(c),additive_inverse(c)), -product(_1,_1,_2), -product(_2,additive_inverse(c),d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_4), -product(_4,_0,d), -product(_5,additive_identity,_3), -product(_1,_5,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_0,_0,_2), -product(_2,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_1,_4), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(d,add(d,_0),_0), -product(d,d,d), -product(d,add(d,_0),c), -product(d,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,add(_2,additive_identity),_1), -product(_0,_3,_0)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,_2,d), -product(add(d,_0),_1,_1), -product(_3,_0,add(d,_0)), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,_0), -product(_1,additive_identity,_2), -product(_2,additive_identity,c), -product(_1,_2,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,d), -product(_1,_3,c)]
[-product(d,_0,c), -product(d,d,d), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,c)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,c,c), -product(_1,_0,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),_0), -product(_4,_3,d), -product(_5,_4,_0), -product(_5,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,c,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_2,_2,add(c,c)), -product(add(c,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_1,d), -product(c,c,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_3,_2), -product(_2,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(c,c,add(_3,_1)), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_1,c,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,c), -product(c,_4,d), -product(_2,_2,_5), -product(_5,_3,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(add(_1,c),_2,_1), -product(c,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_1,_0,_0), -product(additive_identity,_1,d)]
[-product(_0,_0,additive_inverse(d)), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(additive_identity,_3,_1), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,d), -product(_3,_1,_0)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(c,_0,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(_0,additive_inverse(_0),c), -product(_1,_0,additive_inverse(_0)), -product(_1,c,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,c,add(_0,additive_identity))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(add(additive_identity,d),_0,additive_identity), -product(additive_identity,_0,c), -product(add(additive_identity,d),add(additive_identity,d),_0), -product(add(additive_identity,d),add(additive_identity,d),add(additive_identity,d))]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_1,add(_0,additive_identity)), -product(_2,_3,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,additive_identity,_2), -product(_1,c,c), -product(_1,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_2,add(_1,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_3,_4,add(_2,d)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_0), -product(_0,_2,d), -product(_1,_0,add(_3,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(add(_2,c),_3,_2), -product(_0,add(_2,c),_4), -product(_4,_3,d), -product(_0,_4,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,_2), -product(_2,d,c), -product(_1,_3,d), -product(_0,_1,_1)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_0,_1), -product(d,_0,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_4), -product(_4,additive_identity,d), -product(_1,_2,_1), -product(_5,_0,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_3), -product(c,c,_2), -product(c,_3,d), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(add(c,c),add(c,c),_0), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(add(_5,_2),add(_5,_2),_3), -product(add(_5,_2),_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,d), -product(_2,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,additive_identity,add(_2,c)), -product(_1,_3,_1)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(c,_0,d), -product(c,additive_identity,d), -product(d,c,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_2,additive_identity,_0), -product(c,_2,c), -product(_1,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_5,_1), -product(_1,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(d,d,c), -product(additive_identity,c,additive_identity), -product(d,additive_identity,d), -product(_0,c,c), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_4,c), -product(_2,_6,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(c,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),add(_0,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,_6,_1), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,c,add(_2,_0)), -product(add(_2,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_0,c,d), -product(_2,_3,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(d,add(c,c),c), -product(_0,d,d), -product(_0,d,additive_identity), -product(additive_identity,add(c,c),d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_1,_1,_1), -product(_1,_1,_0)]
[-product(_0,_1,additive_identity), -product(_0,_0,c), -product(c,_1,c), -product(c,_0,d), -product(_0,c,_0)]
[-product(_0,_1,c), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_2,_0), -product(_3,_1,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(_2,_2,_3), -product(_3,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(d,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,c)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_inverse(_1),additive_inverse(_1),c), -product(additive_inverse(_1),c,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),_1,d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,add(_0,_1),_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(d,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,add(_0,additive_identity),_1), -product(_0,_3,_2)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,additive_identity), -product(_4,_3,d)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(c,_1,d), -product(add(_0,c),c,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(d,_0)), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_2,c,c), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,d,_1), -product(_2,_3,_1)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(c,add(d,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_0,_3,_2), -product(_0,additive_identity,d), -product(_4,c,d), -product(_3,_4,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,_4), -product(_4,_3,d), -product(_5,_2,_2), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,d), -product(additive_identity,additive_identity,_1), -product(_1,_0,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(_0,add(additive_identity,d),_0), -product(add(additive_identity,d),_0,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_0,_5,_1), -product(c,_5,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,d), -product(d,_0,c), -product(_1,d,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,_2,add(_0,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_0,d,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,_1,_2), -product(c,additive_identity,_2), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_0,_3,_0)]
[-product(additive_identity,additive_identity,d), -product(add(_0,d),additive_identity,_0), -product(_0,additive_identity,c), -product(add(_0,d),add(_0,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,additive_identity), -product(additive_identity,_0,c), -product(_2,additive_identity,d), -product(_2,_0,_2)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(d,_2,d), -product(d,d,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(c,additive_identity,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_1,d,c)]
[-product(add(_0,_1),c,_1), -product(c,add(_0,_1),_2), -product(_2,c,c), -product(c,_0,d), -product(_2,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,c,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_0), -product(_0,_0,c), -product(d,d,d)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_0,d,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d), -product(_2,_3,c)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(add(_0,additive_identity),_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,additive_identity), -product(_2,_2,_3), -product(_3,c,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,add(_1,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,c), -product(c,additive_identity,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,c)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_1,add(d,additive_identity)), -product(_2,_3,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_3)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_4,d), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_0), -product(_2,add(_2,_1),_0), -product(_2,_0,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_1,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_2,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,d,add(additive_identity,c)), -product(d,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,c), -product(_8,_7,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(_1,_0,d), -product(_1,c,d), -product(c,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,additive_identity,add(_2,c)), -product(d,_4,d)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_2,_1), -product(additive_inverse(_1),_2,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_2), -product(_4,_3,d), -product(additive_identity,_5,c), -product(_3,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,_1)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(additive_identity,d,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,add(_2,d),additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,add(c,c),_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_0), -product(_0,_1,c), -product(c,_2,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(add(c,_0),add(c,_0),c), -product(add(c,_0),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,add(_0,_1)), -product(_2,_0,_0), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_0,_2), -product(_3,_1,_2)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_0,_4,add(_2,_0)), -product(c,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,_0,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(additive_identity,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_3,add(_5,_2),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),c), -product(_2,_0,c), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,_0,add(_1,d))]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,add(_2,d),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,c,_2), -product(c,_3,c)]
[-product(d,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,add(_2,_0),_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_1,d), -product(_0,_2,additive_identity), -product(additive_identity,_1,d), -product(_0,c,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,c,d), -product(c,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(d,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(add(_1,c),add(_1,c),_0), -product(add(_1,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_3,_3,_0), -product(_3,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,d,additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(_0,_4,_2)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_3,_4,add(_1,_2)), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,_0),c,_0), -product(c,add(c,_0),c), -product(c,c,c), -product(c,add(c,_0),d), -product(c,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,c)), -product(d,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(_0,add(c,d),c), -product(c,_0,add(c,d)), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,d), -product(_2,_3,additive_identity), -product(additive_identity,_1,d), -product(_4,c,_3), -product(_2,_4,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_2,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_2,d), -product(add(additive_identity,c),add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,c,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,_1,add(c,_0)), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),add(_0,d),_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(d,d,d), -product(d,d,_0), -product(_1,additive_identity,_0), -product(_0,_1,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,add(additive_identity,_0),_1), -product(_1,_2,d)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,additive_identity,c), -product(_0,_2,_0), -product(_1,_3,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(c,_3,c)]
[-product(d,_0,c), -product(add(_1,c),d,d), -product(_2,d,_1), -product(add(_1,c),_2,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,d,c)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(add(c,_0),_0,c), -product(add(c,_0),add(c,_0),_1), -product(_1,_0,d), -product(_2,add(c,_0),add(c,_0)), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,_1), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_0,_2), -product(_4,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_0), -product(c,additive_identity,d), -product(_2,d,c), -product(_0,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_2,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,add(_3,c),_3), -product(_0,_2,_0), -product(_0,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,add(_3,c),_3)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_0,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,c,_0), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(add(_3,_1),add(_3,_1),c), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,d), -product(_1,_2,_2), -product(_3,d,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_4), -product(_4,_3,d), -product(_3,_5,c), -product(additive_identity,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_2,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_3,_0,_0), -product(_3,d,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(c,c,add(_2,d)), -product(add(_2,d),c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(_0,c,c), -product(c,d,additive_identity), -product(_0,c,_0), -product(_0,additive_identity,d), -product(c,d,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_1,_2,_0), -product(c,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_1,add(c,c),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(add(d,_0),_0,c), -product(add(d,_0),add(d,_0),d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(c,_0),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,_2), -product(d,_2,d), -product(_2,add(_1,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,d), -product(_3,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(c,_2,c)]
[-product(_0,_0,additive_inverse(_0)), -product(additive_inverse(_0),_0,c), -product(_1,_0,_0), -product(_1,additive_inverse(_0),d)]
[-product(c,_0,c), -product(c,_1,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(add(c,_1),add(c,_1),c), -product(add(c,_1),additive_identity,d)]
[-product(_0,_1,c), -product(_2,add(_2,_1),_2), -product(_0,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,_3), -product(_3,add(_2,c),d), -product(_3,_3,d), -product(_3,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,c,additive_identity), -product(d,_1,_0), -product(d,additive_identity,d), -product(_2,c,c), -product(_0,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,_1), -product(c,_0,c), -product(_0,add(_1,d),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_0,_1,add(c,d)), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_1,_1,_0), -product(_1,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(_1,_0,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,d), -product(_0,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_1,_2)]
[-product(_0,_1,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_2,add(c,_1),c), -product(c,_2,c)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_0,d), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,_0,d), -product(c,c,_1), -product(_1,_0,c), -product(_0,add(_0,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_2), -product(_2,_0,d), -product(c,c,_1)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,c,additive_identity), -product(_0,_0,_0), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(c,_1),c), -product(c,_2,add(c,_1)), -product(add(c,_1),add(c,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,_3,_5), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_0,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_0,add(_2,additive_identity))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,c), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,add(c,_0)), -product(_0,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(_1,add(c,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,d), -product(d,_1,c), -product(c,c,c), -product(_1,add(d,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(d,_0,d), -product(d,c,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,c), -product(_1,_1,_0), -product(_0,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_0,_5,_2), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,d,d), -product(_0,_0,additive_identity)]
[-product(c,add(_0,_1),_1), -product(_2,c,additive_identity), -product(additive_identity,add(_0,_1),c), -product(_2,_0,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,_1,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(_0,_5,_2)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,_4), -product(_0,_3,add(_2,c)), -product(_0,_4,d), -product(_0,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_3,c), -product(c,_3,additive_identity)]
[-product(_0,d,c), -product(_1,d,c), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,_0,_1), -product(_0,d,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_6,add(_5,_2),_7), -product(_8,_6,_3), -product(_8,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_3,_0), -product(_2,_4,_2), -product(_5,_1,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_4,_5,add(_3,c)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_3,_2), -product(c,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(additive_identity,_0,d), -product(_1,additive_identity,d), -product(d,_0,c), -product(_1,_1,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,d), -product(_0,_0,c), -product(_0,add(d,additive_identity),_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,_0,add(_0,_0)), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_0,add(_4,_1)), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,c), -product(c,_3,d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(c,_0,_3), -product(_3,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(add(c,c),_0,c), -product(c,add(c,c),add(c,c)), -product(_0,c,c), -product(add(c,c),c,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,_4,add(_0,c)), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_0,_0), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,additive_identity,c), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,additive_identity), -product(_0,_1,d)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),add(_0,_0)), -product(_2,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(d,_0,additive_identity), -product(c,d,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(add(c,_1),add(c,_1),_0), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(c,d,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(d,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,c), -product(c,_1,d), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(_1,c,additive_identity), -product(_0,_1,_0)]
[-product(_0,additive_identity,c), -product(_0,_0,additive_identity), -product(additive_identity,additive_identity,d)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,_0,_1), -product(_5,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_0,add(d,additive_identity)), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(c,add(additive_identity,d),_0), -product(add(additive_identity,d),c,c)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,c,additive_identity), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,_1)]
[-product(_0,add(d,c),c), -product(c,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),c), -product(_0,c,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,d), -product(c,_0,_0), -product(additive_identity,d,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_1), -product(_1,_0,d), -product(_0,_2,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_0,_2,c), -product(_0,_1,d), -product(c,d,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,c,_0), -product(c,_0,d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,d,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,c,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,add(c,_1)), -product(add(c,_1),_1,d), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(c,c,d), -product(c,additive_identity,d), -product(c,_2,c)]
[-product(_0,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,c,d), -product(additive_identity,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,add(d,additive_identity),_0), -product(_0,_2,c)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_1,_4), -product(additive_identity,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_1,_1,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_1,additive_identity), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,c,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,add(c,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_0,add(c,_0),additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_3,_1,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_0,_2), -product(_6,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),c), -product(c,c,additive_identity)]
[-product(_0,_0,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,d,_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,c,d), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,c,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,_3,add(_1,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(c,_0,d)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_3,c),_3), -product(_2,_3,additive_identity), -product(additive_identity,add(_3,c),d), -product(_2,_3,_2)]
[-product(_0,additive_identity,c), -product(_1,d,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_3,_4,add(c,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_0)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,d), -product(_0,_0,_0)]
[-product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,add(c,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,_2), -product(_2,_0,d), -product(_1,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(c,_0,additive_identity), -product(d,c,d), -product(d,_0,c), -product(_0,_0,add(c,additive_identity))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,c)), -product(c,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_4,_1), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,additive_identity), -product(additive_identity,add(c,_0),d), -product(add(c,_0),add(c,_0),add(c,_0))]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,d,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(_0,_2,add(_0,c)), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_0), -product(_0,_2,d), -product(_1,_0,_3)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,c,_0), -product(_1,_0,d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_2,_2,add(c,c)), -product(add(c,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(add(c,c),d,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(d,c,c), -product(c,d,d), -product(add(_0,c),d,_0), -product(c,add(_0,c),c), -product(d,c,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(d,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,add(d,_1),_1), -product(_2,_0,d), -product(d,add(d,_1),c), -product(_2,_2,_2), -product(_3,_0,_2), -product(_3,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,_0,additive_identity), -product(_1,_3,_1), -product(_4,_0,_0)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(_0,d,_1), -product(additive_identity,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_2,_2,add(_4,c)), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,additive_identity), -product(_0,_2,_1), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(additive_identity,_1,add(_1,c))]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(_2,_0,c), -product(_2,_1,d), -product(d,_2,c)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,add(c,additive_identity),c), -product(c,d,add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,d,_0), -product(d,_2,_3), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_2,additive_identity), -product(_2,c,_3), -product(_3,_2,d), -product(_2,_2,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_1,_3,add(d,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_0,_0,_0), -product(_0,add(_2,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(c,c,add(d,_1)), -product(add(d,_1),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(d,additive_identity,d), -product(_1,d,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(d,d,_0), -product(d,_0,d), -product(_1,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(add(d,_0),d,d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),add(d,_0),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_0,_5,add(_3,c)), -product(_0,_5,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,c), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,add(c,_1)), -product(add(c,_1),_0,d), -product(_1,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_0,_5), -product(_5,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(d,d,c), -product(add(c,c),d,d), -product(add(c,c),d,add(c,c)), -product(add(c,c),add(c,c),_0), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,d), -product(_1,_2,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(_1,add(_0,_0),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,_2), -product(_2,add(_2,c),_3), -product(_3,_2,d), -product(add(_2,c),_3,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,c), -product(d,d,d), -product(c,additive_identity,additive_identity)]
[-product(add(d,_0),_1,_0), -product(d,add(d,_0),_2), -product(_2,_1,c), -product(d,d,d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_0,add(d,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,c), -product(_0,_2,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_0,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,add(d,additive_identity),_0), -product(_0,_3,_0)]
[-product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,additive_identity), -product(_2,_3,_2), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(c,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_0,_1)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,additive_identity,d), -product(_1,d,c), -product(additive_identity,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_0,add(c,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_3,d), -product(_1,_4,_3), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,c,c), -product(c,_0,d)]
[-product(_0,_0,c), -product(c,c,additive_identity), -product(_0,c,_0), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_0,_1,_5), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(_1,_1)), -product(c,_2,c)]
[-product(add(_0,c),_0,c), -product(c,add(_0,c),add(_0,c)), -product(_0,add(_0,c),c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_4,add(_3,c),_5), -product(_6,_4,_1), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(_0,_3,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_2,add(additive_identity,_1))]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,_1,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(c,_1,d), -product(c,c,_0)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,additive_identity,d), -product(c,_2,add(_2,_1))]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,add(_1,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(c,c,_0), -product(c,additive_identity,d), -product(c,c,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(add(_2,c),add(_2,c),c), -product(add(_2,c),c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),d), -product(add(d,_0),d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,add(c,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(c,add(_0,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_4,d,c), -product(_2,_4,_3)]
[-product(_0,_0,additive_inverse(d)), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,add(c,c))]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,add(_0,_1),_0), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_0,_1,_3), -product(_3,additive_identity,d), -product(_0,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(add(_2,c),_2,_3), -product(_0,add(_2,c),_0), -product(_0,_3,d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,d), -product(_1,_0,d), -product(_0,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_1,add(c,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_0,_1),_0), -product(_0,_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_1,add(_4,additive_identity)), -product(_2,_5,_0)]
[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(d,add(_0,d),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,additive_identity), -product(_0,_1,d), -product(_1,_0,_2), -product(_0,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,d,d), -product(_2,_2,_1), -product(_1,_1,_3), -product(_3,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(add(_1,_1),add(_1,_1),c), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(add(_1,c),_1,_2), -product(_0,add(_1,c),c), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,d), -product(d,d,c), -product(d,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(_0,d,add(d,d)), -product(add(d,d),_0,add(d,d)), -product(_0,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(_2,add(_2,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_0,add(_0,_1)), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,d), -product(d,c,c), -product(d,d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,add(_2,_0),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,d), -product(additive_identity,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,add(_2,c),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(c,_0,_3), -product(_3,_2,d), -product(_1,add(additive_identity,c),_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_0,_4,add(d,_1)), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_0,add(_0,_1),_3), -product(c,_3,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,add(_0,_2),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_3,_7,add(_5,c)), -product(_6,_7,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_inverse(_1),d)]
[-product(add(additive_identity,d),add(additive_identity,d),d), -product(_0,add(additive_identity,d),additive_identity), -product(additive_identity,add(additive_identity,d),c), -product(_0,_0,add(additive_identity,d))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(additive_identity,c),_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_1,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(additive_identity,d,_2), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(c,additive_identity,d), -product(_1,d,c), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_2,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,_1,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,add(_2,_1),_2), -product(_0,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,c)), -product(_0,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,c), -product(c,c,_0), -product(_0,_1,d)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,c,d), -product(_4,_0,_2), -product(_3,_4,_3)]
[-product(d,_0,c), -product(_1,_0,additive_identity), -product(d,_1,_0), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,add(_0,d),additive_identity)]
[-product(_0,d,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,c,c), -product(_0,_2,_1)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),add(_0,d),_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,additive_identity), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,d,_0), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,add(c,_0),add(c,_0)), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,add(additive_identity,_0),_1), -product(_1,_2,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(add(additive_identity,c),_0,c), -product(d,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),d,d)]
[-product(_0,_1,c), -product(_1,_2,_0), -product(c,_2,d), -product(_2,add(_0,_1),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d)]
[-product(additive_identity,c,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_0,c)]
[-product(c,additive_identity,c), -product(_0,_1,_1), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,d,additive_identity)]
[-product(c,c,additive_inverse(_0)), -product(c,c,c), -product(c,_1,_0), -product(additive_inverse(_0),_1,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,_1), -product(_2,_0,_0), -product(_2,_1,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(_1,_0,_0), -product(_1,c,d), -product(_0,additive_identity,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,add(_2,_0),_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,c,_7), -product(_8,_6,_2), -product(_8,_7,additive_identity)]
[-product(_0,c,c), -product(_1,c,additive_identity), -product(_0,_1,_2), -product(_2,c,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_2), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(d,_0,additive_identity), -product(additive_identity,_0,c), -product(d,_1,d), -product(_1,_0,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,_1), -product(_4,_3,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,d,c), -product(_1,_3,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(add(c,_1),add(c,_1),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(d,d,c), -product(_2,_3,c)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(d,d,d), -product(d,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,c,d), -product(c,_3,add(_1,c)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_0,d), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(c,_2,c), -product(c,_3,d), -product(_2,_4,_1), -product(c,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,_3,d), -product(c,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_0), -product(_0,_5,_0)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_2,_0), -product(_0,_3,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_2,_0), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(c,c,c)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,c,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,c,add(d,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_0,c)), -product(add(_0,c),_0,d), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_3,add(_0,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(_5,_1,add(_0,_1)), -product(_5,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,c), -product(c,_2,d), -product(_1,_1,_1), -product(_4,_2,c)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(d,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),_2), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_0), -product(d,_1,d), -product(d,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,add(_1,additive_identity),c), -product(c,_2,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_4,_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_inverse(c)), -product(_2,_3,_5), -product(_5,_4,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(d,c,_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_2,_2,_1), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,additive_identity,_3)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_4,d), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_0,c,d), -product(additive_identity,_0,_1), -product(c,_1,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),_0), -product(_0,add(_0,d),c), -product(c,c,add(_0,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(_0,d,additive_identity), -product(additive_identity,_0,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,_0), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,c,d), -product(c,add(_0,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,_1), -product(_1,_0,c), -product(c,c,_0), -product(_0,add(_1,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,d), -product(d,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_2,_1),_2), -product(c,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,_2,add(c,c)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,_0,d), -product(_0,_0,add(additive_identity,d))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,_0,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(c,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_0,add(_2,additive_identity)), -product(c,_5,_0)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(add(c,c),add(c,c),_0), -product(_0,add(c,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_0,c,_3), -product(_2,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(additive_identity,_0,_3), -product(_3,_1,c), -product(additive_identity,_4,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,add(additive_identity,_1)), -product(add(additive_identity,_1),_1,d)]
[-product(_0,_1,additive_identity), -product(c,_0,_0), -product(_0,_1,c), -product(c,_2,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_0,_3,_2), -product(_0,additive_identity,d), -product(_4,d,c), -product(_2,_4,_3)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_2,_3,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,_0,_1), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_1,add(d,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,add(d,_1),d), -product(_0,_2,_2), -product(_3,_2,_0), -product(_3,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_1,_0), -product(c,add(_0,additive_identity),c), -product(c,_1,d)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,add(additive_identity,_0))]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,add(_2,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,c), -product(_0,c,d), -product(_1,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(d,c,c), -product(c,_0,d), -product(_0,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,_4,add(_3,c)), -product(_3,_4,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_4,_1), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(d,_0,add(_0,d)), -product(add(_0,d),d,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_1,add(_1,_0))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,_1), -product(_0,_1,_0), -product(_0,_1,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_2,d), -product(_3,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,c), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,add(_0,_2)), -product(add(_0,_2),_3,additive_identity)]
[-product(d,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,d), -product(_0,_0,d), -product(d,d,_1), -product(_0,_1,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,_0), -product(c,c,d)]
[-product(c,additive_identity,c), -product(c,c,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_1,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,c,_1), -product(_2,_0,c), -product(_2,_1,d)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_0,c), -product(_0,_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,_1), -product(additive_identity,_0,_0), -product(additive_identity,_1,d), -product(_1,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,add(d,_0))]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,add(_4,additive_identity),_1), -product(_0,_5,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,d), -product(_3,add(c,c),_0), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),_3), -product(_3,add(_2,c),d), -product(add(_2,c),_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,add(_1,c),_1), -product(c,_0,_2), -product(_2,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d), -product(add(additive_identity,c),_1,_1)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(add(_1,d),add(_1,d),_0), -product(add(_1,d),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(add(_2,c),_3,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,additive_identity,d), -product(additive_identity,_0,_1), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_0,_0,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,add(_0,additive_identity))]
[-product(_0,_0,additive_identity), -product(_1,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_0,c), -product(_1,_2,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_0,_0,add(additive_identity,c))]
[-product(_0,_1,_2), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_1,_3,add(d,_2)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,add(_0,additive_identity))]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,add(_3,_0),_5), -product(_0,_5,additive_identity)]
[-product(d,c,c), -product(_0,d,d), -product(_1,d,additive_identity), -product(_0,_1,_0), -product(_2,d,_0), -product(_2,c,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(d,add(c,c),additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_1,_0), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(c,c,add(_3,_1)), -product(add(_3,_1),c,additive_identity)]
[-product(_0,_1,_2), -product(additive_identity,_0,d), -product(d,_1,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,_0), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,add(_4,c),_4)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,c), -product(_0,d,d), -product(c,_0,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,add(_0,_1),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_4,_0), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,_0), -product(_0,_2,d), -product(_0,c,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,additive_identity,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_2,_4,add(_3,_1)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,add(c,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,add(_4,_1),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,add(c,_0),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,c), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(_2,c,add(c,_1))]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,additive_identity,add(_3,c)), -product(_1,_6,_1)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(add(c,c),add(c,c),c)]
[-product(_0,_1,c), -product(add(_1,c),_0,_0), -product(_2,_0,add(_1,c)), -product(_2,c,d), -product(add(_1,c),_2,_3), -product(_3,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_3), -product(_3,_1,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_0,additive_identity), -product(d,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_2), -product(_2,_3,_2), -product(_2,_2,d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_5,_3,_2), -product(_5,add(_4,c),d), -product(_6,_5,_2), -product(_6,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_2), -product(_1,_0,_2), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(c,d,c), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(_0,c))]
[-product(_0,d,c), -product(_1,d,c), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,_1,_0), -product(_0,d,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_4,_5,_4), -product(d,_5,additive_identity)]
[-product(_0,add(c,c),c), -product(d,_0,_0), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,d), -product(additive_identity,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_2), -product(_4,_3,_2), -product(_4,_2,d), -product(additive_identity,c,_5), -product(_3,_5,additive_identity)]
[-product(d,_0,c), -product(_1,d,additive_identity), -product(d,_1,_2), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,d,c), -product(d,_1,c), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,c,_0), -product(_0,d,d), -product(_0,d,c), -product(_0,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(d,d,d), -product(d,_1,_0), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,c,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_3,_4,add(_2,d)), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,d), -product(_0,_2,add(_1,_0)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_3,_3,_0), -product(_3,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,_0), -product(_2,add(_2,_1),_0), -product(_2,_0,d), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,additive_identity,c), -product(c,_1,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,c,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_4,_5,add(_2,c)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(add(_1,_0),_2,_1), -product(c,add(_1,_0),_3), -product(_3,_2,d), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,c), -product(_1,_1,_0), -product(_0,add(_1,d),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_2,add(_2,_1)), -product(_0,add(_2,_1),_0), -product(_0,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,additive_identity,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(add(_1,d),_0,_1), -product(c,add(_1,d),_0), -product(_2,c,c), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,_3,d), -product(_0,_1,add(_3,additive_identity))]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(_0,_5,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,add(_3,c),additive_identity), -product(_1,_6,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,_1,additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(c,_0,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,c,_0), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(c,d,c), -product(d,d,_0), -product(c,d,additive_identity), -product(additive_identity,d,d)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_2,additive_identity), -product(d,_3,d), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(c,add(_0,_1),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_3,add(_0,_1),c), -product(_3,_2,d), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(_3,additive_identity,d), -product(c,_3,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(d,additive_identity,_0), -product(_0,d,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_4,_2), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,additive_identity,_2), -product(_3,_0,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(c,_0)), -product(c,add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_5,_6,add(_5,_2)), -product(d,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_4,_5,add(_3,c)), -product(_1,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(additive_identity,_2,_0), -product(_1,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,c,_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,add(_3,c)), -product(_4,_0,_2), -product(_4,add(_3,c),d), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,d,_0), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,add(d,additive_identity))]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(add(d,c),d,d), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,c,d), -product(c,_2,c), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(_3,_4,add(d,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),d,d)]
[-product(_0,_1,c), -product(add(d,c),_0,_0), -product(add(d,c),add(d,c),d), -product(add(d,c),add(d,c),add(d,c)), -product(d,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,add(_4,c)), -product(add(_4,c),_3,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_0,_0,_2), -product(_2,add(additive_identity,_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_5,add(d,c),_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_3,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_3,d), -product(add(additive_identity,c),_2,_2)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_3), -product(_3,add(_1,_2),c), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,additive_identity,_2), -product(_0,c,_0), -product(_0,_2,d), -product(_0,_0,additive_identity)]
[-product(d,d,additive_inverse(_0)), -product(additive_inverse(_0),d,c), -product(_1,_1,_0), -product(d,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,add(_4,c))]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_3,add(_1,_0)), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_1,_2), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,c,d), -product(c,add(_0,c),_1), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_0,add(d,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(c,_2,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(_2,c,c), -product(_2,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_5,_6,add(_3,c)), -product(d,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,_2), -product(_2,_0,d), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_6,_3,add(_5,c)), -product(_2,_6,_2)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,add(c,_0),c)]
[-product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(c,additive_identity,c), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_1,c), -product(_5,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,add(d,additive_identity),d), -product(c,_0,_0), -product(d,_0,c)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(additive_identity,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(_4,add(_2,c),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,add(_0,d),additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d)]
[-product(d,d,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_2,c), -product(_2,c,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_0), -product(_4,_2,_0), -product(_4,_0,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_4,_3), -product(_2,add(_3,c),_5), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_1,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,_3,additive_identity), -product(_1,_6,_1), -product(_7,_0,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_3,_0), -product(_0,_5,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,c), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,c)]
[-product(_0,d,additive_identity), -product(d,_0,_0), -product(_0,d,c), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_2,c)), -product(_3,_2,_2), -product(_3,add(_2,c),d), -product(add(_2,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(add(c,_1),_0,d), -product(add(c,_1),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,additive_identity,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(c,_3,c), -product(_4,_2,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,additive_identity,_3), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,c,d), -product(_3,_5,_2), -product(_4,_6,c)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,additive_identity,_1), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,_0,d), -product(d,additive_identity,d), -product(_1,d,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,additive_identity,d), -product(_4,_0,_2), -product(_3,_4,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,c,d), -product(d,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(_2,d,d), -product(d,add(_2,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,_2,d), -product(c,add(additive_identity,_1),_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,d), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2), -product(_3,c,c)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,add(_3,_0),_1)]
[-product(_0,add(_0,_1),_1), -product(d,_0,_2), -product(_2,add(_0,_1),c), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,c), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_2,_0), -product(_2,_0,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,add(c,_1)), -product(_0,_2,_0)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_3,d), -product(_3,add(_3,_2),_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_1,_0), -product(_5,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(add(c,_1),_0,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,add(additive_identity,c),d), -product(_2,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(c,_2,add(_1,c)), -product(d,_2,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(add(c,_0),add(c,_0),c), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,_2,add(_0,_1)), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,_1,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_0,add(d,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,add(_3,c),_3), -product(d,_2,add(_3,c)), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,c,add(_1,additive_identity))]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,additive_identity,_0), -product(_0,_4,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,_2,c), -product(c,_3,c)]
[-product(add(_0,_0),_0,c), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,c,d), -product(add(_0,_0),_1,_2), -product(_2,add(_0,_0),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(additive_identity,_1,c), -product(_0,_1,additive_identity)]
[-product(add(c,c),d,c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,d,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,_3,c), -product(_2,_5,_2)]
[-product(c,additive_identity,c), -product(additive_identity,_0,c), -product(c,c,d), -product(_0,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_1,d),_0,_1), -product(_0,add(_1,d),_0), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_0,c)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,add(_2,additive_identity),_1)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_2,c,additive_identity), -product(d,_2,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_1,d), -product(_1,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,add(_0,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,d), -product(d,_0,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_3,additive_identity,_1), -product(_3,_2,d), -product(_1,_3,_1), -product(_4,_0,_1)]
[-product(d,d,d), -product(_0,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,d)]
[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(add(_2,c),_2,d), -product(_1,add(_2,c),_1), -product(_3,_1,_1), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),d,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,c,_0), -product(add(c,c),_0,d), -product(_0,add(c,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),d,additive_identity)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(_2,c,_1), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(c,d,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_2,_3,add(_1,c)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_0), -product(c,_1,_2), -product(_2,_0,d), -product(_0,_1,c)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),d,_0), -product(c,d,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,c), -product(c,c,additive_identity), -product(additive_identity,_2,d), -product(_2,add(c,_1),c)]
[-product(_0,d,c), -product(c,_1,d), -product(_0,c,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_0), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_1,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,d), -product(_0,_0,d), -product(d,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,_1), -product(c,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,add(d,_0),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_2,add(_1,c),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(add(c,c),add(c,c),_0), -product(add(c,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,d)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(c,c,_4), -product(_4,_2,d), -product(_2,_5,add(_3,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,c), -product(c,_0,add(_0,c)), -product(c,add(_0,c),d), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_5,_2), -product(additive_identity,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(c,c,add(d,_1)), -product(add(d,_1),c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,c,add(c,_0)), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_0), -product(_0,_5,_0)]
[-product(_0,_0,additive_identity), -product(_0,_0,d), -product(d,_0,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(c,_5,_2)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_1), -product(add(_0,c),c,d), -product(add(_0,c),_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0), -product(_2,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,_2)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_2,add(_1,c),_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,add(_1,c),_1), -product(c,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(c,add(_2,d),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(_1,_0,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_1,add(_0,_0),c)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,_2), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(add(_4,c),add(_4,c),_2), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0), -product(_3,_2,_1)]
[-product(additive_identity,c,c), -product(c,additive_identity,additive_identity), -product(c,c,_0), -product(_0,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,d,d), -product(additive_identity,d,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_0,_3,add(c,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_2,_4,add(_3,_1)), -product(_3,_4,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(_0,d,add(_0,additive_identity))]
[-product(_0,_1,c), -product(_0,_0,_1), -product(_1,_1,c), -product(_0,additive_identity,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,add(_1,d),_0), -product(c,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_4,_2), -product(additive_identity,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,add(d,d),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_0,_5,add(_4,c)), -product(_0,_5,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_0,d), -product(c,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,add(additive_identity,c),d)]
[-product(_0,add(d,_1),_1), -product(_2,_0,d), -product(d,add(d,_1),c), -product(_2,_2,_2), -product(_3,d,_2), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_2,_1,_0), -product(_2,additive_identity,additive_identity)]
[-product(c,d,d), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,_0,d), -product(_0,additive_identity,_0)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),_0,add(_0,c)), -product(_1,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_5,_1), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,additive_identity), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,add(_1,additive_identity),d), -product(d,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,d), -product(_2,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,add(d,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,_5,_2), -product(c,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_3,d), -product(_3,_0,add(_3,_2))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_1,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(d,d,c), -product(d,d,d), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,d,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,c), -product(c,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_3,_0,_2), -product(_1,_3,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(c,additive_identity,d), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(c,_5,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,_0),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,d), -product(_4,_3,d), -product(_3,c,_5), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_1,c), -product(_1,c,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,add(additive_identity,c)), -product(_3,_2,_1), -product(_3,add(additive_identity,c),d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_3,c), -product(_2,_4,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(add(_2,c),add(_2,c),_0), -product(add(_2,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_1,_1),add(_1,_1),_0), -product(add(_1,_1),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_0,additive_identity,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,add(d,d),add(d,d)), -product(_0,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_2,c,additive_identity), -product(c,_2,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,add(_4,c),additive_identity), -product(_1,_6,_1)]
[-product(_0,_1,c), -product(_2,_2,additive_identity), -product(_0,_2,_1), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_0,add(_2,additive_identity)), -product(_0,_5,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,_0)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,d)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_5,c), -product(c,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,c,d)]
[-product(add(_0,_1),_1,c), -product(_2,_0,add(_0,_1)), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_0), -product(c,additive_identity,d), -product(_2,c,d), -product(_1,_2,_0)]
[-product(d,additive_inverse(_0),c), -product(_1,_1,_0), -product(d,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_0,c), -product(_0,_0,add(c,_0)), -product(add(c,_0),_0,d), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,_1), -product(c,_3,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_1,add(d,d)), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,d)]
[-product(d,_0,c), -product(_1,_2,add(_2,_0)), -product(add(_2,_0),_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,d,c), -product(d,_0,_0), -product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,d), -product(_1,_0,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,c), -product(c,_1,c), -product(_2,c,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_1), -product(_2,_1,_0), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_0,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(d,_0,d), -product(_1,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_1,add(_4,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,add(_1,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_0,_1,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,d), -product(d,d,c), -product(_0,_0,d)]
[-product(_0,_1,_2), -product(_3,_0,add(_4,_2)), -product(add(_4,_2),_1,c), -product(_3,_4,d), -product(_3,_3,_5), -product(_5,_0,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,additive_identity,c), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,additive_identity), -product(additive_identity,_0,c), -product(c,c,_0), -product(_0,d,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,c), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(c,_5,_2)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_0)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_2,_1), -product(d,_2,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_5,c), -product(c,_5,additive_identity)]
[-product(d,add(d,c),c), -product(d,d,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(d,c),d), -product(_2,_2,_2), -product(_2,d,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_0,_0,_1), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_3,d), -product(_1,_4,_2), -product(c,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(c,c,add(d,c)), -product(add(d,c),c,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(add(additive_identity,_1),add(additive_identity,_1),_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,add(_1,d),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,d), -product(_0,_0,d), -product(_1,additive_identity,d), -product(d,_1,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,add(_3,c)), -product(add(_3,c),_2,d), -product(_1,_1,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,c,_3), -product(_0,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_3,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(c,_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(c,_1,d), -product(add(_1,_2),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_1,_2,add(d,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,d), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,add(additive_identity,c),additive_identity), -product(_1,_3,_1)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,add(_0,c),add(_0,c)), -product(_1,c,d), -product(_1,add(_0,c),additive_identity)]
[-product(d,_0,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_1,d,_0), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_1,_2,add(_1,c)), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,d,additive_identity), -product(c,_0,d), -product(d,d,c), -product(c,c,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_0), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,d,_0), -product(d,c,c), -product(d,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,_0)]
[-product(_0,add(_1,_2),_2), -product(d,_0,_1), -product(_1,add(_1,_2),c), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(_0,add(_0,c),c), -product(c,_0,_0), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(c,_0,c)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,c,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_2,c)]
[-product(c,c,d), -product(d,c,c), -product(add(_0,d),_0,c), -product(c,add(_0,d),c), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,_2,d), -product(_2,add(_2,additive_identity),_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,additive_identity,_2), -product(_2,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,_1), -product(_1,_0,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_1,_2), -product(_4,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(_0,_1,c), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(_1,d,d), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(_0,additive_identity,_3), -product(_3,_1,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,add(_3,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_0,_2,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),d,_0), -product(add(_0,c),d,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),_3,d), -product(_2,add(d,c),add(d,c)), -product(_4,_2,_2), -product(_4,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_0,_1,_2), -product(_2,d,d), -product(_1,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(c,_1,_2), -product(_2,d,d), -product(_1,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_3,_4,add(c,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(add(_1,_0),_1,_2), -product(_0,add(_1,_0),c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(additive_identity,_0,d), -product(_1,additive_identity,d), -product(d,_0,c), -product(_1,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(_2,add(d,_0),add(d,_0)), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(additive_identity,d,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_2,add(additive_identity,c)), -product(d,_3,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_0,_1,_1), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),_2), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,add(_3,additive_identity),_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,additive_identity,d), -product(additive_identity,add(_1,c),_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,c,d), -product(additive_identity,_3,d), -product(_4,_3,c)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,add(d,_0),additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_2), -product(add(_0,c),_2,d), -product(_3,add(_0,c),add(_0,c)), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,_2), -product(_1,_4,add(d,c)), -product(c,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_2,add(d,_0),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,add(c,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_2,c), -product(d,_3,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,_5,_1), -product(_1,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,_2), -product(_1,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_0,_0,d), -product(_0,d,d), -product(_0,c,additive_identity)]
[-product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,add(_0,_0),_2), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(c,_0,d), -product(c,additive_identity,d), -product(d,d,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_0,_1),_0), -product(c,_0,additive_identity), -product(additive_identity,add(_0,_1),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_0,_1,_1), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_1,c), -product(_1,c,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,c,additive_identity), -product(_2,_4,_2), -product(_5,_3,c)]
[-product(_0,_1,d), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d)]
[-product(c,_0,additive_identity), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(additive_identity,_5,_3), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,d,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(add(_3,c),add(_3,c),_0), -product(add(_3,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_2,_2,add(_4,c)), -product(add(_4,c),_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_2,_0), -product(_2,_3,_2), -product(_2,_2,d), -product(d,add(_0,c),additive_identity)]
[-product(add(d,_0),_0,c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(add(d,_0),_1,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),d,d), -product(add(d,c),add(d,c),_2), -product(_3,add(d,c),_2), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(_1,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,c,_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_2), -product(_0,_0,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(_1,additive_identity,d), -product(d,_0,c), -product(_0,_1,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_1,_2,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_2,_0), -product(add(_0,_1),_1,additive_identity), -product(additive_identity,_2,d), -product(add(_0,_1),add(_0,_1),add(_0,_1))]
[-product(d,d,c), -product(d,d,d), -product(d,d,add(c,d)), -product(add(c,d),d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,d,_1)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_0,_4,d), -product(_1,_5,add(_4,_2)), -product(_2,_5,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_0,_4,add(_0,_2)), -product(d,_4,additive_identity)]
[-product(add(_0,_0),_0,c), -product(_0,add(_0,_0),add(_0,_0)), -product(_0,c,d), -product(c,add(_0,_0),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,_2), -product(_3,_0,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,add(_0,_1))]
[-product(add(additive_identity,additive_identity),add(additive_identity,additive_identity),additive_identity), -product(additive_identity,add(additive_identity,additive_identity),c), -product(add(additive_identity,additive_identity),add(additive_identity,additive_identity),_0), -product(_0,add(additive_identity,additive_identity),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_4,_5,add(d,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(additive_identity,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,add(_1,_0),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_6,_2), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,additive_identity,d), -product(_3,add(_2,_1),_2), -product(_0,_3,c)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_2,d), -product(_1,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,add(_2,_0),_2), -product(c,_1,c), -product(c,add(_2,_0),d), -product(_0,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_1), -product(_1,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,c,additive_identity), -product(_0,_2,_0), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,c,additive_identity), -product(c,c,d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,c), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,_0,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(_1,_2,c), -product(c,_1,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_0), -product(_2,_1,c), -product(_2,_0,d), -product(c,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(d,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(_3,c,c), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(_3,_2,add(_2,c)), -product(_3,d,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),d,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,add(_0,d))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_0,add(_2,additive_identity))]
[-product(_0,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(d,add(_3,c),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(d,add(_0,_0),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_3), -product(_3,_2,d), -product(_0,_3,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,add(_2,_1)), -product(c,add(_2,_1),c), -product(c,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_3,_1), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_2,add(_1,_1)), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(c,_3,c)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_2,d), -product(c,_3,add(_1,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(_0,_1,d)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,d,additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,additive_identity,_0), -product(c,_1,c), -product(c,_0,d), -product(_0,d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,c), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,_0), -product(_0,c,c), -product(additive_identity,_1,d), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_3,add(d,_1)), -product(_1,_3,additive_identity)]
[-product(_0,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,c,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,additive_identity), -product(c,_2,_3), -product(_3,_0,d), -product(c,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(d,d,additive_identity), -product(additive_identity,_2,d), -product(_2,c,d), -product(_3,_2,c)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_1,_4), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,c,d), -product(additive_identity,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,add(_1,d)), -product(add(_1,d),_1,c), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,d,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_1,add(_0,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_1,_1,add(_2,d)), -product(add(_2,d),_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(_0,_3,_1)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_1,additive_identity,_0), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_3,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,d), -product(_2,_2,c), -product(c,add(d,_1),additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_0,add(_3,_2)), -product(add(_3,_2),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,c,additive_identity), -product(additive_identity,_2,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,_1), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,add(_2,_1)), -product(_0,add(_2,_1),_0), -product(_0,add(_2,_1),d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(additive_identity,c),additive_identity), -product(_0,add(additive_identity,c),d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_0,_0,_4), -product(_4,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,_2), -product(additive_identity,_1,_0), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(_3,add(_2,c),d), -product(d,add(_2,c),_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,c), -product(additive_identity,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_3,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(c,c,add(_4,_1)), -product(add(_4,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,_2), -product(_3,c,c), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_1,d,_0), -product(c,_1,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,additive_identity,c), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_4,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_0,_2,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_4,c,_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,_3,c), -product(additive_identity,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_inverse(c)), -product(additive_inverse(c),_2,d)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_3,c,_0), -product(_3,additive_identity,d), -product(_1,_2,add(_2,_1))]
[-product(_0,_0,c), -product(c,c,additive_identity), -product(_0,c,add(additive_identity,_0)), -product(add(additive_identity,_0),c,d)]
[-product(_0,c,c), -product(c,_1,d), -product(_2,add(d,c),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(add(_1,c),_2,_1), -product(c,add(_1,c),_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_0,_2,add(_1,c)), -product(c,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,d,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,c),_2), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,add(_0,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_1,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(c,add(_1,_0),d), -product(c,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,d), -product(_2,_3,additive_identity), -product(additive_identity,_3,d), -product(_4,_3,c), -product(_2,_4,_2)]
[-product(_0,add(additive_identity,c),c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_2,_0,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,d), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,add(_2,_1),_2), -product(_0,_0,_0), -product(_0,add(_2,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_0), -product(_3,_4,_3)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_0,d), -product(_0,d,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d), -product(_2,_0,_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(_0,_2,_1), -product(_1,_0,d), -product(_0,_2,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_0,_3,add(_2,d)), -product(_2,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_4), -product(_4,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,additive_identity,_3), -product(_0,_5,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(_5,c,c), -product(_5,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,add(_3,c)), -product(_1,_2,c), -product(_1,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_2,c,_4), -product(_3,_4,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,d)]
[-product(d,_0,c), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),d,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,c,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,_2), -product(_2,_0,c), -product(_1,_3,d), -product(_3,_0,_3)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,add(_0,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(c,_0,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(d,_0,_0)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_2,_1,additive_identity)]
[-product(add(d,_0),_1,_0), -product(add(d,_0),add(d,_0),d), -product(d,_1,c), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(add(_0,additive_identity),add(_0,additive_identity),_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,add(d,d),additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,c,add(c,_0))]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,add(_1,additive_identity)), -product(_2,_0,d), -product(_2,add(_1,additive_identity),d), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(_0,add(d,d),_1), -product(_2,_0,c), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,additive_identity,d), -product(c,_1,c), -product(_0,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_1,_0), -product(_5,_3,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),c), -product(_2,add(d,_1),c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_1,add(_2,_1),d), -product(_3,_0,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_3,_2,_1), -product(_3,c,d), -product(_1,_2,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_0,add(_1,c),_4), -product(_3,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(additive_identity,_0),additive_identity), -product(_0,add(additive_identity,_0),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(c,_4,c), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,additive_identity,c), -product(_1,_0,d), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(c,_1,d), -product(c,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(add(_4,c),add(_4,c),_2), -product(add(_4,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,c), -product(_2,add(_2,_1),c), -product(_2,c,d), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,d,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,additive_identity,_2), -product(_3,_0,_2)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,add(c,c),add(c,c)), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,_2), -product(_3,_2,d), -product(_4,d,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(_3,c),_3), -product(_2,_2,_2), -product(_2,add(_3,c),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,additive_identity,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_0,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(d,d,additive_identity), -product(_1,d,_1), -product(d,d,add(additive_identity,c))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,d,additive_identity), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,c,add(_1,_0)), -product(add(_1,_0),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,c), -product(_1,_0,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_2,_3,add(_1,_1)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,_0,additive_identity), -product(_1,_4,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_2,add(_3,c),_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(c,additive_inverse(_0),c), -product(_1,c,c), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(add(additive_identity,_0),c,additive_identity), -product(_0,c,d), -product(add(additive_identity,_0),_0,add(additive_identity,_0))]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,_2), -product(_3,_4,add(d,c)), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,d,additive_identity), -product(c,d,d), -product(_0,c,c)]
[-product(_0,add(_0,additive_identity),additive_identity), -product(_0,_0,d), -product(d,add(_0,additive_identity),c)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,d,add(_1,additive_identity))]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_2,additive_identity), -product(_3,_0,_2)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,_2,add(_2,c)), -product(c,_3,_1)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,c),additive_identity)]
[-product(_0,c,d), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,_1,_0), -product(_1,c,_1)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_0,_3,add(_2,_0)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_2,_3,add(_0,_1)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_1,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,add(_0,_1)), -product(c,add(_0,_1),d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,c,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,add(_1,_0),_0), -product(_2,_0,additive_identity), -product(additive_identity,add(_1,_0),c), -product(_2,_1,d), -product(_2,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(_0,_1,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_0,_2,d), -product(_1,_0,add(_2,_0))]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(additive_identity,d,c), -product(d,d,d), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,add(additive_identity,c)), -product(_1,_2,_1), -product(_1,add(additive_identity,c),d)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,add(_1,_0),_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,d,add(_1,additive_identity)), -product(d,_3,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),add(_0,d),add(_0,d)), -product(_0,add(_0,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,_3,c), -product(_2,_5,_2), -product(_6,_4,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,c), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,add(_4,_1),_5), -product(_0,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_2,d,c), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_2), -product(_2,add(_4,c),d), -product(_2,_4,additive_identity)]
[-product(_0,c,c), -product(c,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,d)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,d), -product(d,_1,_1), -product(_2,add(d,_0),_3), -product(_1,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_1,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(_5,add(_0,_1),c), -product(_5,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,_0), -product(_0,_0,add(d,additive_identity))]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(_0,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_1,_2,_0), -product(add(_0,additive_identity),_1,_3), -product(_3,_2,d)]
[-product(_0,add(_1,_2),_2), -product(_3,_0,_4), -product(_4,add(_1,_2),c), -product(_3,_1,d), -product(_5,_0,_3), -product(_5,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_0,_0,_3), -product(_3,add(d,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_1,add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(_0,_1,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_0,_2,d), -product(_1,add(_2,_0),_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,_0,_3), -product(_3,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_1,_2,add(c,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(_0,d,_1), -product(c,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(_0,_0,c), -product(_0,_1,d), -product(_0,d,c), -product(_0,additive_identity,additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(_0,c,d)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,_0), -product(_0,_1,c)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_4,add(_2,_0)), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_0,add(d,_1),_3), -product(_0,_3,additive_identity)]
[-product(d,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_1,_1,_0), -product(_1,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,d), -product(c,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(c,_0,_3), -product(_3,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(add(d,_2),_0,d), -product(d,_1,c), -product(add(d,_2),add(d,_2),add(d,_2)), -product(_3,add(d,_2),add(d,_2)), -product(_3,add(d,_2),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,c),_4), -product(_0,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_0), -product(_0,add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,c,c), -product(_0,add(d,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_0,_3,add(_0,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,additive_identity,add(_2,c))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,add(additive_identity,_1))]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(_2,_0,c), -product(_2,_1,d), -product(_2,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_5,_2,_6), -product(_7,_5,_3), -product(_7,_6,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_0,_1,_1), -product(_0,_1,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,_0), -product(d,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,_5,add(_2,_0)), -product(_0,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,add(additive_identity,c))]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,_2,additive_identity), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),c), -product(_4,_3,d), -product(_5,_4,c), -product(_5,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,_5,add(d,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(c,c,d)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(_2,_0,_0), -product(_3,_2,_0), -product(_3,_0,d), -product(_2,add(_0,c),additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_1,_0,d), -product(c,_1,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_1,d,add(_2,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_5,c), -product(d,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(_3,_4,add(_0,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,c,d)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_1,additive_identity,c), -product(_0,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_0,_2), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_1,_1,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_0,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(c,additive_identity,c), -product(c,c,_0), -product(_1,c,c), -product(_1,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,d,add(d,additive_identity))]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,add(_2,_0),_2), -product(d,_1,add(_2,_0)), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_2,_5,add(_3,_1)), -product(_0,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(_1,add(_1,_0),_2), -product(d,_2,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,c), -product(c,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,_2,_1), -product(_3,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(add(_2,d),add(_2,d),c), -product(add(_2,d),c,additive_identity)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(d,add(d,c),c), -product(_0,d,d), -product(_1,d,_0), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(d,c,d), -product(c,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(d,d,c), -product(_0,_1,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,add(_0,additive_identity)), -product(_2,_1,c), -product(_2,add(_0,additive_identity),d), -product(c,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_6,add(_5,c),_3), -product(_2,_6,_2)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(_4,c,c), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,_1,_0), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(additive_identity,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_0,_1,c), -product(_0,_3,d), -product(_1,_2,_0)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,d,d), -product(c,d,additive_identity)]
[-product(d,add(_0,c),c), -product(_0,d,d), -product(_1,d,_0), -product(_0,_1,_0), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,_3,c), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_2,c),_2), -product(_0,add(_2,c),d), -product(_0,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(add(_2,c),add(_2,c),_2), -product(add(_2,c),additive_identity,d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,_2), -product(_3,_2,d), -product(d,d,_4), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,_0),_5), -product(_6,_4,d), -product(_6,_5,additive_identity)]
[-product(_0,add(_1,c),c), -product(c,_0,_0), -product(add(_1,c),_1,_2), -product(_0,_2,d), -product(_3,_0,c), -product(_3,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,_2,add(_1,c)), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_inverse(c),_2), -product(_3,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,additive_identity,d), -product(_1,_1,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,_0), -product(_5,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_0,c,_4), -product(_0,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,_1), -product(_1,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(d,_1,d), -product(_1,additive_identity,add(_2,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(c,add(_4,_1),additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_3), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_3,d), -product(add(_2,_1),_0,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,c,add(_2,additive_identity))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_4,add(_0,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,c), -product(c,_0,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,additive_identity,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_5,_2,_1), -product(_5,_4,d), -product(_6,additive_identity,_3), -product(_1,_6,_1), -product(_7,_0,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,d), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,d,_2), -product(_3,c,c)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,add(c,c)), -product(add(c,c),_1,d), -product(_2,_2,_3), -product(_3,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_4,_5,add(_1,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_1,d), -product(_2,_0,d)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,add(additive_identity,_1),_3), -product(_2,_5,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,d,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,d,c), -product(_2,_3,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_2,d), -product(_1,_3,add(_1,_0)), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_0,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(c,_2,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,c,_1)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_0,_4,add(_3,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),c), -product(add(_3,_1),c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(d,_0,_1), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(c,_0,additive_identity), -product(_1,c,d), -product(d,_0,c), -product(_1,d,c)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(additive_identity,additive_identity,c)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_0,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,c,_1), -product(c,_2,c)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(_3,c),_3), -product(_0,add(_3,c),d), -product(_4,_0,_2), -product(_4,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,_2,add(_0,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_0,add(d,additive_identity)), -product(c,_3,_0)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(d,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(c,_4,c)]
[-product(_0,add(_1,additive_identity),additive_identity), -product(_0,_0,_1), -product(_1,add(_1,additive_identity),c), -product(_1,_0,d)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),c), -product(_0,add(additive_identity,_0),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(additive_identity,c,_3), -product(additive_identity,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_1,additive_identity), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,d), -product(c,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_1,_1,_0)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_2,d), -product(_1,_2,_0), -product(_2,_1,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_2,additive_identity)]
[-product(c,_0,c), -product(_0,add(d,_0),d), -product(c,_0,_0), -product(c,d,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(_2,d,_0), -product(_1,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(c,_4,_1), -product(_3,_5,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,add(_1,additive_identity),d), -product(d,_2,d)]
[-product(_0,_1,_0), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_2,_2), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_0,_6,add(_4,_1)), -product(c,_6,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,c), -product(d,_0,d), -product(d,d,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_1,c,c), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,add(d,additive_identity),_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_1,additive_identity), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,additive_identity,_1)]
[-product(d,c,c), -product(_0,d,d), -product(_1,additive_identity,d), -product(_0,_1,_0), -product(_2,d,_0), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_1), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_1,d,_0), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_2,_3,c), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,add(_0,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,additive_identity,_2), -product(_0,_5,_0)]
[-product(add(additive_identity,c),_0,c), -product(d,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d), -product(d,d,add(additive_identity,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,c,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,c,add(d,additive_identity)), -product(c,_1,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,add(_5,c),_6), -product(_2,_6,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,add(c,_0),c), -product(c,_1,_2), -product(_2,add(c,_0),d), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(_1,additive_inverse(_0),_1), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,d), -product(_3,additive_identity,c), -product(d,_3,d)]
[-product(_0,_1,d), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_1,_1,_1), -product(_3,_0,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_1), -product(_1,_2,d)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(d,_0,d), -product(_0,d,_2), -product(_2,_0,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(_2,_0,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_0,additive_identity,d), -product(_2,d,c), -product(c,_2,_1)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,add(additive_identity,_0),d)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(d,_0,_1), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,c,c), -product(_3,d,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,_2,c), -product(_0,add(_0,_1),d), -product(_3,_0,add(_0,_1)), -product(_3,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,d,d), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,add(_1,_0),_1), -product(additive_identity,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,c,_0)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,add(_2,c),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,add(d,d)), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,additive_inverse(_0)), -product(_2,_0,d), -product(d,_1,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_3,c,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,add(_1,additive_identity),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,add(c,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(c,c,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,_1), -product(_1,additive_identity,_1), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,d,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,_1,additive_identity), -product(_2,_0,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,_2,_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(c,_1,_2), -product(_2,c,additive_identity)]
[-product(add(_0,additive_identity),_0,additive_identity), -product(_0,add(_0,additive_identity),_0), -product(_0,_0,c), -product(c,add(_0,additive_identity),d), -product(add(_0,additive_identity),_0,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,add(additive_identity,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,additive_inverse(_2)), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_2,d)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_2,c,additive_identity), -product(_1,_2,c)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,add(c,c),_1), -product(d,_1,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(d,add(d,d),additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(d,d,add(_3,c)), -product(add(_3,c),d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,add(_2,additive_identity)), -product(add(_2,additive_identity),_1,d), -product(_0,_0,_0)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(d,_1,_1), -product(_2,_3,_1)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,d,d), -product(_1,c,_0), -product(_0,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_1,d), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_1,_2,_3), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,d,add(_2,additive_identity))]
[-product(d,_0,c), -product(d,d,d), -product(add(additive_identity,c),d,additive_identity), -product(d,add(additive_identity,c),d), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_0,_7,add(_5,c)), -product(_0,_7,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_1,_0),_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,_0), -product(_2,additive_identity,d), -product(_0,_1,_1)]
[-product(add(d,_0),_0,_0), -product(_0,add(d,_0),d), -product(d,_0,c), -product(_0,_0,_0), -product(add(d,_0),d,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_2,_3,add(d,c)), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_2,_4,add(_3,c)), -product(_1,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,add(_0,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,additive_identity), -product(additive_identity,_2,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,_0,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(c,_4,c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,additive_identity,_2), -product(d,_4,d), -product(_5,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,additive_identity,_0)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_3,_1), -product(_2,_0,_2), -product(_2,_3,d), -product(_2,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,d,_1), -product(_0,_4,_2), -product(_3,_5,_1)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(c,_0,add(c,c)), -product(add(c,c),add(c,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(d,d)), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,_0,_0), -product(_1,additive_identity,c), -product(_1,_0,d), -product(c,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_2,add(additive_identity,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_1,add(_0,additive_identity),_2), -product(_2,_1,c), -product(_1,_0,d), -product(_1,_1,add(_0,additive_identity))]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(c,_0,c), -product(_1,add(_2,_0),_2), -product(c,_1,_0), -product(_0,add(_2,_0),d), -product(c,d,additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_1), -product(c,_0,_2), -product(_2,_1,d), -product(d,_2,c)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_4,add(_3,_2),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,additive_identity,d), -product(_0,c,_1), -product(_0,_1,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,add(c,d),_0), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(add(c,d),add(c,d),_0), -product(add(c,d),_0,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(additive_identity,d,c), -product(d,d,d), -product(d,d,_0)]
[-product(_0,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d)]
[-product(c,additive_identity,c), -product(additive_identity,_0,c), -product(c,additive_identity,_1), -product(_1,_0,d), -product(_0,_1,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,_0,add(_2,c)), -product(add(_2,c),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_0,add(_2,d),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_1,add(d,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1), -product(_3,_5,_2)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_2), -product(_3,_1,d), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_2,add(d,_1),_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(_2,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,_2), -product(_2,c,d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,add(_1,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(c,c)), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_0,_1,_5), -product(c,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_3,c,_6), -product(_5,_6,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_4), -product(_4,_3,d), -product(_3,c,_5), -product(_4,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(_2,add(_3,c),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,additive_inverse(d),d), -product(_0,_0,_1), -product(_1,additive_inverse(d),c)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_1,_3,_0)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_1,_2,add(d,_0)), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_0,_1,_2), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_0,_6,add(_3,_1)), -product(c,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,additive_identity,add(_2,c)), -product(d,_3,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_1,d), -product(_2,_1,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_0,_2,c), -product(_0,additive_identity,d), -product(_3,_1,d), -product(_2,_3,c)]
[-product(c,additive_identity,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(additive_identity,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(_2,_1,_1), -product(_2,c,d), -product(_1,additive_identity,_1), -product(_1,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_0), -product(_0,add(_3,_1),d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_3,d), -product(_2,_1,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2), -product(_4,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,additive_identity), -product(c,_2,c), -product(c,c,d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,add(d,c),c), -product(d,_0,_0), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(add(c,d),add(c,d),c), -product(add(c,d),c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(c,c,_0), -product(_0,add(d,d),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,_2), -product(_2,add(_1,_0),d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_1,_4,add(_3,c)), -product(c,_4,additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(add(c,c),add(c,c),_1), -product(_1,_0,d), -product(add(c,c),_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_2,add(_0,c)), -product(_2,_3,_2)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0), -product(_3,_5,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(add(_0,d),additive_identity,_0), -product(c,add(_0,d),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(d,d,additive_identity), -product(_1,d,_1), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,additive_identity), -product(d,d,c), -product(c,additive_identity,c), -product(d,d,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,_4,add(d,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_2), -product(additive_identity,c,_2), -product(additive_identity,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_4,c), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,c), -product(d,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(_0,add(c,d),add(c,d)), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_1,c,additive_identity), -product(c,c,d), -product(_1,_0,_0)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(_1,d,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,add(_0,d),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(add(c,_0),add(c,_0),_0), -product(add(c,_0),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_2,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,d,additive_identity), -product(additive_identity,_1,c)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(c,add(additive_identity,c),_0)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_0,c,_1)]
[-product(c,c,d), -product(d,c,c), -product(_0,_1,c), -product(c,_0,c), -product(c,add(_1,d),_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(c,_1,additive_identity)]
[-product(c,_0,c), -product(_1,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(_0,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,_0), -product(_3,_5,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_1,_2,_3), -product(_3,additive_identity,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_0,_1), -product(_2,_1,d), -product(d,c,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_1,_1,_1), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,_2), -product(additive_identity,_2,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,additive_identity), -product(additive_identity,_1,c), -product(_3,c,d), -product(_4,_2,_0), -product(_3,_4,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_3,_4,add(_2,_1)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(_3,add(_1,_0),_1), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(c,c,add(_1,_1)), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_1,_2), -product(c,_3,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,c,c), -product(c,d,d), -product(add(_0,c),_0,d), -product(c,add(_0,c),c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_3,c,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_0,_0,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,additive_inverse(_0),_1), -product(c,_1,d)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,additive_identity,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_1,_3,add(d,_1)), -product(c,_3,additive_identity)]
[-product(c,d,c), -product(d,additive_identity,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(_1,_2,add(c,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_4,_1), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,additive_identity), -product(_0,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(_0,_0,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,c,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(_0,_0),additive_identity)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_0,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,add(_0,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(c,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_0), -product(_0,add(_1,_2),c), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_0), -product(_4,_2,_0), -product(_4,_0,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,add(d,additive_identity),c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_1,d), -product(_1,d,_0)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,additive_identity), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,add(_2,c),_2), -product(c,_1,_0), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,c), -product(c,_3,d), -product(_2,_1,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(_0,_3,_1), -product(c,_3,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,d,d), -product(_1,_1,add(d,_0)), -product(_2,_0,add(d,_0)), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,c,additive_identity), -product(_0,_2,_3), -product(_3,c,d), -product(_2,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,_1)]
[-product(_0,additive_inverse(d),c), -product(_1,_2,d), -product(_0,_1,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_1,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(additive_identity,c),_2,additive_identity), -product(_2,add(additive_identity,c),_3), -product(_3,_2,d), -product(_2,_2,add(additive_identity,c))]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(add(_0,c),_3,_0), -product(add(_0,c),_3,d), -product(_2,_2,_4), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,d,additive_identity), -product(_1,_4,_1), -product(_5,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_3,_0), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,add(d,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d), -product(_1,add(c,additive_identity),_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(d,_1),d), -product(_0,_2,_2), -product(_3,_2,_0), -product(_3,d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(_3,_0,d), -product(_3,_2,d), -product(_2,_1,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,_1,d), -product(_2,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(c,c,_2), -product(_2,_1,d), -product(_1,_0,add(_0,additive_identity))]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_4,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,_1), -product(_1,c,c), -product(_0,c,d), -product(c,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_1,_1,_2)]
[-product(d,_0,_1), -product(d,d,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(d,d,d)]
[-product(add(additive_identity,c),add(additive_identity,c),c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),c,additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_4,add(additive_identity,c)), -product(_2,_6,_3)]
[-product(_0,additive_identity,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(d,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(_0,_1,add(_3,c)), -product(add(_3,c),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,_1), -product(_1,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,c,d), -product(additive_identity,_3,d), -product(_2,_4,c)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_1,_0), -product(_3,_2,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,add(c,c),add(c,c)), -product(_0,add(c,c),additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_inverse(c),additive_inverse(c),_2), -product(additive_inverse(c),_2,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,c,c), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_0,_0,_2), -product(_2,add(additive_identity,_1),d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,d), -product(c,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,_4), -product(_5,_3,add(_2,c)), -product(_5,_4,d), -product(add(_2,c),_5,_6), -product(_6,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(add(_5,c),add(_5,c),_2), -product(add(_5,c),_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(c,_5,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),d), -product(d,add(d,_0),c), -product(_0,_0,_0), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,d), -product(_2,d,d), -product(d,add(_2,c),_3), -product(_2,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,_0,additive_identity), -product(add(_0,_0),_0,add(_0,_0)), -product(add(_0,_0),additive_identity,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_1), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_inverse(c)), -product(_1,_2,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,additive_identity,_1), -product(_4,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_1,_3,_2), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(additive_identity,_5,_2), -product(c,_5,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_0,_4,add(_0,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(_3,_1,c), -product(_3,c,d), -product(_2,_2,_4), -product(_1,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_0,add(_3,additive_identity)), -product(c,_5,_0)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_2,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_3,_0,c), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,_3,d), -product(_3,_3,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,_0),_3), -product(d,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1), -product(_0,_2,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,_0,additive_identity)]
[-product(add(_0,c),_0,c), -product(c,add(_0,c),add(_0,c)), -product(c,add(_0,c),c), -product(c,c,d), -product(d,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_4,additive_identity,_3), -product(_1,_4,_1)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(d,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(d,add(c,d),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_4,add(_2,_1),_5), -product(_6,_4,c), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_3,_4,add(_0,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,d,_0), -product(_0,_2,d)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_3,add(_1,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,_2), -product(add(d,_2),_0,d), -product(d,_1,c), -product(add(d,_2),add(d,_2),add(d,_2)), -product(add(d,_2),add(d,_2),_3), -product(_3,add(d,_2),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,_1,d), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_0), -product(_0,_1,c), -product(_0,_2,d), -product(_0,_2,_1)]
[-product(d,d,c), -product(d,d,d), -product(add(c,d),add(c,d),d), -product(add(c,d),d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_1,add(c,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(d,d,d), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,_0,_2), -product(_2,_1,d), -product(_1,add(c,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_0,_0,_3), -product(_3,add(d,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(c,_0,_3), -product(_3,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,_2), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,add(c,_1),_2), -product(c,_2,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(c,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(d,_2,d), -product(_2,_2,_0)]
[-product(d,_0,additive_identity), -product(d,d,d), -product(d,_0,c), -product(d,add(d,additive_identity),_0)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,_0,d), -product(_2,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_1,_0), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_0), -product(d,_1,d), -product(d,_0,d), -product(_0,additive_identity,d)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_1,_0), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_5,_3,_2), -product(_5,add(_4,c),d), -product(_2,_3,_6), -product(_6,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,add(c,d)), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,add(_3,c)), -product(_2,add(_3,c),_2), -product(_2,add(_3,c),d), -product(d,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]
[-product(additive_identity,d,c), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,additive_identity,d), -product(c,_1,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_4,_1,additive_identity), -product(_1,_4,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_0,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,additive_identity,_1), -product(_1,_0,d)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),_1,d), -product(add(additive_identity,c),add(additive_identity,c),_1)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,c,additive_identity), -product(c,_2,_1), -product(_1,c,d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_2,_3,add(_1,_1)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,d), -product(_0,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(add(_0,c),_0,c), -product(d,add(_0,c),add(_0,c)), -product(c,add(_0,c),d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,_1)]
[-product(_0,_1,additive_identity), -product(c,_0,d), -product(d,_1,c), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,add(_0,_0),_1), -product(d,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,c,add(_1,_0)), -product(add(_1,_0),c,additive_identity)]
[-product(d,d,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,d,_1), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(_0,add(d,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,additive_identity,c), -product(_2,_1,_0), -product(_2,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,add(_2,c)), -product(add(_2,c),_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_1,_3,add(_2,_0)), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_1,additive_identity)]
[-product(d,_0,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_1,_0),_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_0), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,d,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(d,d,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_1), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_2,add(c,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,_3), -product(_4,c,_2), -product(_4,_3,d), -product(_5,_4,_2), -product(_5,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_2,additive_identity), -product(_3,_0,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,add(_3,_1),_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,_1,add(c,d)), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_2), -product(_2,_1,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,c,c), -product(c,add(d,c),d), -product(_1,c,_0), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_2,c,d), -product(additive_identity,_2,d)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_1,_1,_0)]
[-product(_0,c,c), -product(d,c,_0), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_1,_1,add(_3,c)), -product(add(_3,c),_1,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(add(d,additive_identity),_0,d), -product(c,add(d,additive_identity),add(d,additive_identity)), -product(add(d,additive_identity),c,c)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_0,_1), -product(_1,additive_identity,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_1,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_3,_0,_0), -product(_3,additive_identity,d), -product(_0,add(_2,c),_2)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(d,_0,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,c,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_0), -product(_3,_2,_1), -product(_3,_0,d), -product(_4,additive_identity,_0), -product(_1,_4,_1)]
[-product(_0,additive_identity,c), -product(_1,d,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(add(_0,c),add(_0,c),d), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,c), -product(_4,add(_3,_1),d), -product(_5,_4,c), -product(_5,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,c,d), -product(_2,_3,_1)]
[-product(d,d,c), -product(_0,d,d), -product(d,d,additive_identity), -product(_0,d,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_1), -product(_1,_3,d), -product(c,c,_4), -product(_4,_2,additive_identity)]
[-product(_0,c,c), -product(d,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_0), -product(c,_0,_2), -product(_2,_1,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,additive_identity,c), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(c,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,c,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(d,_0,c)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,c,_1), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(c,d,_0), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,additive_identity,_0)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_1,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(_1,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(d,d,_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(d,c,_0), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(additive_identity,_1,c), -product(_1,_1,d), -product(_1,_0,d), -product(_1,_1,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_3,d), -product(_1,_4,_3), -product(c,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(add(_0,_1),add(_0,_1),add(_0,_1)), -product(add(_0,_1),_2,d), -product(add(_0,_1),_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,additive_identity), -product(_0,_2,_0)]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,_1), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,additive_identity,_2), -product(_2,additive_identity,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_4,_5,add(d,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(add(d,c),add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_3,_4,add(_1,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,_3), -product(_3,_3,d), -product(c,_2,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_0), -product(_0,_0,d), -product(additive_identity,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,d), -product(d,_0,c), -product(d,d,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_1,add(c,c),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_0,_3,c)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,additive_identity,d), -product(_0,c,c), -product(c,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,d), -product(_1,_1,d), -product(d,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,_0,additive_identity), -product(d,c,d), -product(d,_0,c), -product(_0,_0,c)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_0,add(c,c),additive_identity)]
[-product(c,_0,c), -product(_0,add(_1,_0),_1), -product(c,_0,_2), -product(_2,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(d,d,additive_inverse(_0)), -product(additive_inverse(_0),d,c), -product(_1,_0,_1), -product(_2,_1,d)]
[-product(_0,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,d), -product(_1,_3,_0)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,_3,add(_1,_0)), -product(_0,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_1,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,_1), -product(_1,_0,d)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(additive_identity,_2,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_2,_1), -product(c,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),c,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,c,d), -product(c,c,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_0,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,_0,add(_0,additive_identity)), -product(c,_1,_0)]
[-product(_0,c,d), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,_0,_1), -product(_1,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_2,_1,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_0,_1,_0), -product(_0,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,d,d), -product(d,add(_0,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,add(_2,additive_identity),_0), -product(_0,_5,_0)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_1), -product(c,_1,d), -product(_1,d,add(_0,additive_identity))]
[-product(_0,_1,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,additive_identity,d)]
[-product(_0,additive_identity,c), -product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,_4,add(_2,c)), -product(_0,_4,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),d), -product(d,add(d,_0),c), -product(c,c,c), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,_0)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(additive_identity,_1),_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(c,_0)), -product(c,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(_0,c,_1), -product(_1,_0,additive_identity), -product(additive_identity,c,c), -product(_1,c,d), -product(c,d,_0), -product(_1,c,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,add(_1,additive_identity),_0)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_3,add(_1,_2)), -product(c,_3,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,c), -product(d,additive_identity,d), -product(additive_identity,_2,_4), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,_2), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(c,additive_identity,d), -product(_1,c,d), -product(additive_identity,_1,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,additive_identity,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(add(c,_0),c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_0,_6,add(_5,_2)), -product(_4,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,add(_3,additive_identity),_0), -product(_0,_5,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,d,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(d,_2,d), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_1,_2,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,add(_0,additive_identity),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,d), -product(d,d,c), -product(_1,d,c), -product(_1,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_inverse(_0),_1), -product(_0,_1,d)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,add(_0,c)), -product(_3,_2,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(_0,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(c,add(c,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_0,_3), -product(_2,_4,_2), -product(_5,_1,_3)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_2,_2,add(_0,c)), -product(add(_0,c),_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_1), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_0,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,_1,d)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_0,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(d,d,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(additive_identity,_3,c), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(add(_0,_1),_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(_4,_5,c), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_1), -product(_1,_3,d), -product(_0,_0,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,add(_3,_1),_3), -product(_2,_5,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(c,d,c), -product(d,c,additive_identity), -product(c,additive_identity,d), -product(_0,c,c), -product(d,_0,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,add(d,d)), -product(add(d,d),c,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),_0,_2), -product(_0,add(_0,_1),add(_0,_1)), -product(_0,_2,d), -product(_2,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_0,_1), -product(_1,d,d), -product(d,add(c,_0),_2), -product(_1,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_1,_1,_2), -product(_2,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(_1,c,c), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(additive_identity,c,c), -product(d,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,c)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,additive_identity), -product(d,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,_0,add(d,additive_identity))]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_0,_2), -product(d,_1,d), -product(d,_0,d), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,c), -product(_0,_2,d), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,d), -product(d,_0,_0), -product(_1,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,_0), -product(_0,_1,c), -product(c,_2,d), -product(_1,add(_2,additive_identity),_1)]
[-product(_0,_1,d), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,c),_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,additive_identity), -product(_2,_3,_4), -product(_4,_1,d), -product(_2,_0,_3)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,d,c), -product(c,_4,_2)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,c,d), -product(_1,_3,add(_1,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,_4,add(d,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(c,_3,_1), -product(_2,c,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,add(_0,_0),c), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_1), -product(c,_1,_3), -product(_3,_2,d), -product(_4,c,c), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(_3,c,c), -product(_3,additive_identity,d), -product(_0,add(_2,_1),_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,c), -product(_0,c,d), -product(_1,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(c,c,_0)]
[-product(d,_0,c), -product(c,d,d), -product(_0,add(d,c),_1), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,add(additive_identity,_1),_2)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(c,_4,c)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_4,_5,add(_3,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_1,_4,add(_3,_1)), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,_0), -product(_3,_5,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_1,_0), -product(_4,_2,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(_0,add(d,c),c), -product(_0,c,additive_identity)]
[-product(additive_identity,add(c,c),c), -product(d,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,_4,add(_3,_1)), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_0,d), -product(_2,c,d), -product(c,add(_1,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,additive_identity,_0), -product(d,_0,d), -product(c,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,add(additive_identity,_1)), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,c,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(d,add(additive_identity,c),d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,add(d,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_1,add(_2,_0),_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),c), -product(add(_4,_1),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),add(_0,d),_0), -product(c,add(_0,d),add(_0,d)), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,add(d,additive_identity),_0), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_0,_1,d), -product(_1,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(_3,additive_identity,d), -product(_4,add(_2,c),_2), -product(additive_identity,_4,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,add(_1,additive_identity),c)]
[-product(c,c,d), -product(d,c,c), -product(add(_0,d),c,_0), -product(c,add(_0,d),c), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,c,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_2,_0,c), -product(_2,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_0,add(_1,d)), -product(add(_1,d),_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_0,_0,_2), -product(_0,_2,d), -product(_3,_2,_2), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_0,_3,add(c,c)), -product(_0,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,add(_1,c),_1), -product(c,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,c), -product(c,c,d), -product(_2,add(_2,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(c,_4,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,_0,add(d,additive_identity)), -product(_0,_3,_0)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_0), -product(_0,_1,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,c,add(_1,additive_identity))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,_0,c), -product(_0,additive_identity,d), -product(_0,_1,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,add(_1,c),_2), -product(d,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,additive_identity,d), -product(_0,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,c), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,_1,add(_1,c))]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,_3,_2), -product(c,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,d,_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_0,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_4), -product(_4,c,d), -product(_5,_3,_2), -product(_5,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(_1,_2,_3), -product(_0,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_5,add(_2,_0)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(c,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,d,d), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_0,c), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(add(c,c),add(c,c),_2), -product(add(c,c),_2,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(d,_1,c), -product(c,_2,_0)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(d,d,_0), -product(d,d,d), -product(_0,add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,d,add(_1,additive_identity)), -product(d,_2,d)]
[-product(_0,_1,c), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,add(additive_identity,_1))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_1,d), -product(_2,c,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(c,_0,_0), -product(add(_0,c),_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(d,add(_1,_0),_3), -product(_3,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(add(_1,_0),add(_1,_0),c), -product(add(_1,_0),c,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,_0), -product(_0,_0,d), -product(additive_identity,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_1), -product(_2,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_2,add(additive_identity,_1)), -product(c,_3,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,add(_3,c)), -product(_0,_2,_0), -product(_0,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,add(c,d),_0), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_0,_1), -product(c,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_2,d), -product(_2,_4,_3), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(c,_2,c), -product(c,add(_3,_1),d), -product(c,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_0,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_0,_2,_5), -product(_5,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(c,_2,c), -product(c,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_2), -product(_2,_3,d), -product(_3,c,_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,_1), -product(d,additive_identity,d), -product(_2,_0,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,_2), -product(_0,_1,d), -product(_1,add(_2,_0),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(c,_4,c)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,add(additive_identity,c),d), -product(d,_1,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,c,additive_identity), -product(c,c,d), -product(_2,_1,_0), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(add(c,c),add(c,c),_2), -product(add(c,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(c,c,add(_2,c)), -product(add(_2,c),c,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_1,_2,add(d,_0)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_1,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_0,_1), -product(d,_2,_3), -product(_3,_0,d), -product(_3,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,add(_0,_1)), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_0,_1),_0), -product(_0,_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,d,additive_identity), -product(_0,_1,_2), -product(_2,d,d), -product(_1,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_2), -product(_2,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,add(_2,c),_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,_0,add(_2,d)), -product(add(_2,d),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,d), -product(_0,_0,c), -product(_0,d,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_4,_5,add(_2,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,add(_4,c))]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(_1,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(d,d,additive_identity), -product(_2,d,c), -product(_2,additive_identity,d), -product(c,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_3,d,_1), -product(c,_3,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_1,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(c,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,c), -product(c,_2,c), -product(c,c,d), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,c,_3), -product(_2,_5,_2), -product(_6,_4,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_0,add(_0,_0)), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_3,add(c,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(additive_identity,_0,_2)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,_1,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,add(c,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_4,_5,add(_0,_2)), -product(_3,_4,_6), -product(_6,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,c,d), -product(_2,_4,c)]
[-product(_0,_1,c), -product(_1,additive_identity,_1), -product(_0,_1,_0), -product(_0,_1,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_1,_0,_2), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(d,_1),d), -product(_0,_0,_0), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(c,add(c,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(_1,_1)), -product(_0,_2,_0)]
[-product(d,c,c), -product(d,c,d), -product(d,d,additive_identity), -product(additive_identity,c,d), -product(c,d,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,d,additive_identity), -product(_0,additive_identity,d), -product(_1,_0,d), -product(c,_1,c), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_4,_5,add(_3,c)), -product(_1,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_1,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_0,_2,_4), -product(_4,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,_3), -product(_4,c,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_2,_3,_2), -product(_2,add(_4,c),d), -product(_2,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(_0,_2,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,additive_identity), -product(_2,d,_0), -product(_2,additive_identity,d), -product(_0,_1,_1), -product(_2,_3,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(c,_2,c)]
[-product(add(c,_0),_0,c), -product(add(c,_0),add(c,_0),additive_identity), -product(additive_identity,_0,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,add(_3,_0)), -product(add(_3,_0),_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,d,_3), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_0,add(_0,additive_identity),_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_5,_6,_2), -product(_3,_5,_7), -product(_7,_6,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,add(_2,c),_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,additive_identity,d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(add(d,_0),_1,d), -product(_0,add(d,_0),add(d,_0)), -product(c,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,c,add(d,_0)), -product(add(d,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(add(_1,additive_identity),_2,_1), -product(c,add(_1,additive_identity),_0), -product(_0,_2,d), -product(_0,c,c)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(c,c,add(_1,_1)), -product(add(_1,_1),c,additive_identity)]
[-product(_0,_1,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_2,_2,add(_4,c)), -product(add(_4,c),_3,d), -product(add(_4,c),_2,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,additive_identity), -product(_0,d,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,_4,add(_2,_0)), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,_4,c), -product(_1,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(_2,_1,c), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,d), -product(d,additive_identity,_0), -product(_0,additive_identity,c), -product(d,d,additive_identity), -product(d,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,_3,additive_identity), -product(_4,_0,_3)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,d,c), -product(c,d,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_1,_3,add(_1,d)), -product(d,_3,additive_identity)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,d), -product(_1,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,d), -product(c,_2,additive_identity), -product(additive_identity,_2,d), -product(_0,_2,_1)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_3,add(_1,_2),_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,_0,d)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_1,_4,c)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_3,add(_1,d)), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,additive_identity,_0), -product(_0,d,c), -product(_1,_0,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_6,_7,add(_3,_1)), -product(c,_6,_8), -product(_8,_7,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_1,c,d), -product(_0,_1,c)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(additive_identity,c,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,c,_0), -product(_1,additive_identity,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(_2,_1),_2), -product(_1,add(_2,_1),d), -product(_3,_1,_0), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,add(_0,c)), -product(add(_0,c),_0,d), -product(_2,_2,_3), -product(_3,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_3,_1), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(_1,add(_2,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,add(c,_1),c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,c,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_1,additive_identity,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,d), -product(_0,_1,additive_inverse(c))]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_1,d,d), -product(_1,_1,_0), -product(_0,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_0,_3,d), -product(d,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,additive_identity,d), -product(c,add(_1,_0),_1)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(add(_0,c),add(_0,c),d), -product(d,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,c,d), -product(_2,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_1,additive_identity), -product(additive_identity,_0,d)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,_1), -product(_2,_0,_0)]
[-product(d,_0,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_1,add(_2,_0),_4), -product(_3,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,add(_0,d),_1), -product(d,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_2,_2), -product(_3,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_4,_2,_1), -product(_4,additive_identity,d), -product(_1,_2,_1), -product(_5,_0,_3)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_1,add(_0,_0)), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_1,d),_1,_0), -product(_0,add(_1,d),_0), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,_0,add(_1,d)), -product(c,_2,c)]
[-product(_0,c,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,add(_2,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),d,_1), -product(d,add(_1,_0),_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,c,additive_identity), -product(_1,_5,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,add(c,additive_identity),_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(c,_0,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,_3), -product(_0,_3,d), -product(c,add(_2,c),additive_identity)]
[-product(c,add(additive_identity,_0),_0), -product(d,c,additive_identity), -product(additive_identity,add(additive_identity,_0),c), -product(d,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_2), -product(_2,_2,additive_identity), -product(additive_identity,_3,d), -product(_3,_2,add(_2,c))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_2,_3,_1), -product(additive_identity,_3,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_0,c), -product(_1,c,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,additive_inverse(_1),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,_0), -product(_1,additive_identity,d), -product(_1,_0,d), -product(d,_1,d)]
[-product(d,_0,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,d,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,_1,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_0), -product(_1,_0,d), -product(_2,additive_identity,_0), -product(d,_2,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_1), -product(d,_0,d), -product(d,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,_0), -product(c,_2,d), -product(_2,add(_0,c),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_0), -product(_2,_1,c), -product(_2,_0,d), -product(c,_1,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(_0,_0)), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,add(_1,additive_identity)), -product(c,_3,_0)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,d,d), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(d,_1,d), -product(_1,add(_1,_0),_2), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,_4,add(_1,c)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(additive_identity,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,d,_1), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,c,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,additive_identity,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(add(_2,d),add(_2,d),_0), -product(add(_2,d),_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_0,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,add(additive_identity,_0),_1)]
[-product(_0,add(_1,c),c), -product(_1,_0,_0), -product(_0,_0,_1), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(c,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(additive_identity,_1,_4), -product(c,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(_1,_0,d), -product(_0,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(add(c,c),_0,d), -product(_1,_1,_2), -product(_2,add(c,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_3,_4,add(_2,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,_3,add(_0,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_1,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,add(d,c),additive_identity), -product(_2,_4,_2)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(add(_0,c),_1,_3), -product(_3,_2,d), -product(c,add(_0,c),additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),_0), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,_1,add(d,c)), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,_2), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,c)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,c,add(c,_0)), -product(add(c,_0),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_6,_2), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(additive_identity,_1,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_2,_0,add(additive_identity,additive_identity)), -product(c,_2,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_7,_8,add(_4,c)), -product(_2,_7,_9), -product(_9,_8,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_1,c,d), -product(additive_identity,_1,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(d,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(_0,_1,c), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,c), -product(c,_1,_0), -product(_0,add(c,d),_2), -product(_1,_2,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(add(c,d),add(c,d),c), -product(c,add(c,d),add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,c), -product(c,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,add(c,_1)), -product(add(c,_1),_0,d), -product(_0,_0,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,_2,d), -product(additive_identity,_1,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,c,add(_1,additive_identity)), -product(c,_2,c)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_2,_1,_0)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),_2,_3), -product(_2,add(_2,c),add(_2,c)), -product(_2,_3,d), -product(_3,add(_2,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(c,c,add(_2,d)), -product(add(_2,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_0), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_0,_3,add(_0,_1)), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_5,add(_4,c),_6), -product(_7,_5,_2), -product(_7,_6,additive_identity)]
[-product(_0,d,c), -product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,_1,add(_1,_0)), -product(c,_2,c)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),_0,_0), -product(add(_0,c),_0,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,_1,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(_1,d,d), -product(_1,_1,c), -product(_2,add(d,_0),c), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_inverse(_1)), -product(c,_2,d)]
[-product(_0,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,add(additive_identity,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(_1,_1),_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(add(c,d),add(c,d),_0), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),_0), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,add(additive_identity,c),_2), -product(_2,_3,_2)]
[-product(_0,add(_0,_1),_1), -product(_2,_0,d), -product(d,add(_0,_1),c), -product(_3,d,_2), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_1,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(d,c),_3,d), -product(_2,add(d,c),add(d,c)), -product(_2,_2,_4), -product(_4,add(d,c),additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_1,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(add(d,d),add(d,d),_0), -product(_0,add(d,d),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),d,_2), -product(d,add(_2,c),_3), -product(_3,d,d), -product(_3,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,_2), -product(_0,_1,_3), -product(_3,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_0,c), -product(_2,c,d), -product(_1,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(d,c),d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,_4), -product(_2,_2,_5), -product(_5,_3,d), -product(_3,_6,add(_4,c)), -product(_4,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,add(additive_identity,additive_identity),_0), -product(_0,_2,_0)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_1,d), -product(_4,_0,_2), -product(_4,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_2,c,additive_identity), -product(_0,_2,_0), -product(_1,_3,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_3), -product(_3,_4,d), -product(_3,_4,add(additive_identity,c))]
[-product(_0,_1,c), -product(add(_1,c),_0,_0), -product(_0,_0,add(_1,c)), -product(_0,c,d), -product(_0,_0,additive_identity)]
[-product(c,_0,c), -product(_0,_0,additive_identity), -product(c,_0,_1), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(c,d,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,_0), -product(d,c,c)]
[-product(d,d,c), -product(d,d,d), -product(_0,add(c,c),_1), -product(_2,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(d,d,additive_identity), -product(_1,d,c), -product(_1,additive_identity,d), -product(c,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,additive_identity,add(d,c)), -product(_2,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_0,additive_identity), -product(_2,c,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_0,d), -product(c,_1,additive_identity), -product(additive_identity,_0,d), -product(c,_0,c)]
[-product(_0,d,c), -product(c,c,additive_identity), -product(_0,c,_0), -product(_0,additive_identity,d), -product(d,c,c)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,d), -product(d,additive_identity,c), -product(additive_identity,_1,_1), -product(additive_identity,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,add(_1,c),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,_2,d), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,c), -product(_0,_3,_1)]
[-product(d,_0,c), -product(_1,additive_identity,d), -product(_2,_1,d), -product(_2,d,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(c,_0,_5), -product(_5,_0,additive_identity)]
[-product(additive_inverse(c),additive_inverse(c),c), -product(c,additive_inverse(c),d)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,d,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_1,_3), -product(_4,_0,_2), -product(_4,_3,d), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,c,additive_identity), -product(c,c,d), -product(c,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,_0,d), -product(_1,_2,_0)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(_0,add(_3,_1),additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_0,_2,_1), -product(c,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,_0), -product(d,d,c), -product(d,_0,d)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_2,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),_0,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_1,add(d,_1),additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_1)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,d,d), -product(_2,_2,_4), -product(_4,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_1,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,_1,d), -product(_0,add(c,c),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_0,add(d,d)), -product(add(d,d),_0,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(d,_2,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(add(_1,_0),_2,_1), -product(c,add(_1,_0),_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0), -product(_2,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,add(d,_2),additive_identity)]
[-product(add(_0,_1),_0,_1), -product(_0,add(_0,_1),_0), -product(_0,_0,c), -product(c,add(_0,_1),d), -product(_2,_0,_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_1,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(_1,additive_identity),_1,_2), -product(_3,add(_1,additive_identity),_0), -product(_3,_2,d), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_1,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,d), -product(_1,_0,_1), -product(_1,_1,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_2,_2,_1), -product(_1,_2,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(_0,add(_0,c),additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,_0), -product(c,_1,_0)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(c,d,d)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_0), -product(_0,_2,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_1,_2,_0)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(d,_0,additive_inverse(_1)), -product(d,d,_1), -product(_1,_0,c), -product(d,d,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_3,add(d,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_0,_2), -product(c,_3,_0)]
[-product(_0,_1,d), -product(_0,_0,add(_1,d)), -product(add(_1,d),_1,c), -product(add(_1,d),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,d), -product(additive_identity,_2,d), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_2), -product(_0,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,_0),_3), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,_2,add(_1,_1)), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(add(_2,c),add(_2,c),_2)]
[-product(_0,d,c), -product(_1,d,_0), -product(_0,_1,additive_identity), -product(additive_identity,d,d), -product(d,c,_1), -product(_0,d,_0)]
[-product(add(_0,_1),_1,_1), -product(_1,add(_0,_1),_2), -product(_2,_1,c), -product(_1,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(_0,_1,c), -product(d,add(_2,_1),_2), -product(_0,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(_0,_0,add(additive_identity,_1))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,_0,c), -product(_3,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,additive_identity), -product(d,_1,_1), -product(_1,_2,d), -product(_2,add(additive_identity,_0),_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(c,_2,d), -product(_2,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,d), -product(c,_2,_2), -product(_1,add(d,c),_4), -product(_0,_4,additive_identity)]
[-product(d,_0,c), -product(_1,_1,d), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,c), -product(_0,additive_identity,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,c,additive_identity), -product(_3,_5,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_2,_0), -product(_4,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_0,c,_2)]
[-product(_0,_1,additive_identity), -product(_0,_1,add(d,c))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(_3,c),_3), -product(_0,add(_3,c),d), -product(_4,_0,_2), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,c,c)]
[-product(d,d,c), -product(_0,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(c,_2,_0)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(add(_1,c),_2,_1), -product(c,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(additive_inverse(_0),_1,_0), -product(_2,additive_inverse(_0),d), -product(d,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_0,_2)]
[-product(additive_identity,_0,c), -product(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_3,additive_identity,add(_1,c)), -product(_3,_2,d), -product(add(_1,c),_3,add(_1,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_inverse(c),_2), -product(_0,_2,d)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(d,_1),d), -product(c,_2,_2), -product(_3,_2,c), -product(_3,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,d,add(_0,_0)), -product(add(_0,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_inverse(c),_2), -product(_0,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(c,c,add(_0,_1)), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_1), -product(_1,add(_1,_2),c), -product(_1,_0,d), -product(_3,_1,_0), -product(_3,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_4,_1), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(_0,_1,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_1,d,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(d,_2,additive_identity)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,add(d,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(_3,_2,d), -product(_3,d,d), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_0,add(d,additive_identity),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,add(_2,c),_2), -product(c,add(_2,c),d), -product(_3,c,_0), -product(_3,d,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(c,d)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,additive_identity,c), -product(_2,_5,_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,d), -product(_2,d,additive_identity), -product(d,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_3,_1), -product(_0,_5,_2)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),add(c,_1),c), -product(c,add(c,_1),_2), -product(_2,add(c,_1),d), -product(add(c,_1),c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(_0,add(_0,_1),add(_0,_1)), -product(_0,_2,d), -product(_2,add(_0,_1),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_0,add(_2,c),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),_2), -product(_2,add(_0,_1),c), -product(c,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(c,c,add(_0,c)), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(_3,_0,c), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,d)]
[-product(add(additive_identity,_0),_0,c), -product(add(additive_identity,_0),add(additive_identity,_0),additive_identity), -product(additive_identity,add(additive_identity,_0),d)]
[-product(d,_0,c), -product(d,d,d), -product(d,add(d,c),_1), -product(d,_1,additive_identity)]
[-product(_0,d,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_1,_2), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_1,_2,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_0,_1)), -product(_2,_0,_0), -product(_2,add(_0,_1),d), -product(add(_0,_1),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,additive_identity), -product(d,_0,d), -product(c,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_4,c), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,d), -product(c,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(c,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_0,add(d,c),_1), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,add(_0,_1),_0), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),add(_0,_1),d), -product(d,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(add(d,_2),add(d,_2),_3), -product(add(d,_2),_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_1,_2), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(c,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_2,d), -product(_0,c,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0), -product(_3,_2,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,c,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_0,add(c,_1)), -product(add(c,_1),_0,additive_identity)]
[-product(_0,_0,additive_inverse(_0)), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_6,add(_3,_1)), -product(_1,_6,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,d,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,additive_identity,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),d), -product(_3,_2,add(_2,c)), -product(_3,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,_0), -product(_1,c,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,d,additive_identity), -product(_1,d,_0), -product(_1,additive_identity,d), -product(_0,d,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_1,add(d,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_4,_4,_2), -product(_4,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,additive_identity,add(_2,c))]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(c,_1,_0), -product(_0,c,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(additive_identity,_1,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,c,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,_2), -product(d,d,d), -product(d,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_1,_0), -product(c,d,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,c,c), -product(_4,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,_1,additive_identity), -product(_4,_0,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,d), -product(_0,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_3,d), -product(additive_identity,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_1,_1,_1), -product(_1,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,c)]
[-product(c,c,_0), -product(c,c,c), -product(c,_0,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,c,add(_1,additive_identity))]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_2,_4,add(_3,c)), -product(_1,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(_0,add(_0,d),additive_identity)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_1,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_1,_3,additive_identity), -product(_2,_1,additive_identity), -product(additive_identity,_3,d), -product(_2,_0,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_inverse(c)), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,_1), -product(c,_0,c), -product(c,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(add(_1,d),_0,_1), -product(_1,_0,c), -product(add(_1,d),add(_1,d),_0), -product(_2,add(_1,d),add(_1,d)), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(_1,add(additive_identity,c),add(additive_identity,c)), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_2,_1,_1)]
[-product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,add(_1,d),_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,additive_identity), -product(_2,_3,c), -product(c,_3,d), -product(_2,_2,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_inverse(d)), -product(c,_1,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,c), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,c), -product(_2,c,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,c,_4), -product(_3,_6,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(add(_2,c),d,_2), -product(_1,add(_2,c),_1), -product(_3,_1,_1), -product(_3,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,add(d,_2),_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,additive_identity,_1), -product(_1,c,d), -product(_2,additive_identity,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,additive_identity,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(_5,add(_0,_1),add(_0,_1)), -product(_5,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_2,_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(_2,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_2,d,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_2,additive_identity,c), -product(c,_2,_1)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,d,_0), -product(_0,d,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d)]
[-product(c,c,c), -product(c,add(d,c),d), -product(c,d,additive_identity)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,add(d,additive_identity),additive_identity), -product(add(d,additive_identity),_0,d), -product(d,add(d,additive_identity),c), -product(add(d,additive_identity),add(d,additive_identity),add(d,additive_identity)), -product(_0,add(d,additive_identity),add(d,additive_identity))]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(_0,_0),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(add(d,_0),add(d,_0),c), -product(add(d,_0),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,_0), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_0,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_1,_0), -product(c,_2,c)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,_0,additive_identity), -product(_2,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_5,_3,_2), -product(_5,additive_identity,d), -product(_6,_4,add(_4,c)), -product(_2,_6,_3)]
[-product(add(_0,_1),_1,c), -product(_2,_0,_3), -product(_1,_2,add(_0,_1)), -product(_1,_3,d), -product(c,_2,additive_identity)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(_0,add(c,d),c), -product(_0,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,add(_2,c),additive_identity), -product(d,_4,d)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_4,_0), -product(_0,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_0,add(additive_identity,_0))]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_1,c,additive_identity), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(c,_1,c), -product(c,additive_identity,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(add(d,c),_2,d), -product(_1,_1,_3), -product(_3,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(c,c,add(c,_1))]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),c), -product(add(d,_1),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_7,_8,add(_5,c)), -product(_2,_7,_9), -product(_9,_8,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(c,c,add(c,c))]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_inverse(_0),_1), -product(_2,_1,d)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,add(d,_0),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_0,_4), -product(_0,_4,additive_identity)]
[-product(add(c,c),_0,c), -product(_0,add(c,c),add(c,c)), -product(_0,add(c,c),_0), -product(_0,_0,d), -product(d,add(c,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_1,add(d,_2),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_1,_4,add(d,_1)), -product(c,_4,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(d,add(additive_identity,c),additive_identity), -product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(c,d,additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(c,_0,additive_identity), -product(_0,c,_0)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(_0,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),d), -product(_0,add(additive_identity,c),add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,d,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_0,additive_identity), -product(_1,_2,c)]
[-product(_0,d,additive_identity), -product(_0,_0,_0), -product(_0,d,c), -product(_0,_1,d)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,add(_0,d),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(c,c,_1), -product(c,_1,d), -product(_2,additive_identity,c), -product(_1,_2,_1)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(d,add(_0,d),_0), -product(add(_0,d),d,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(add(_0,d),_0,d), -product(add(_0,d),add(_0,d),additive_identity), -product(additive_identity,_0,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(c,add(_3,_1),additive_identity)]
[-product(c,additive_identity,c), -product(d,add(_0,additive_identity),_0), -product(c,d,additive_identity), -product(additive_identity,add(_0,additive_identity),d)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(_0,add(c,c),c), -product(_0,c,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_4,add(d,_1)), -product(_1,_4,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(_0,_1,add(c,c)), -product(d,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_1)]
[-product(_0,c,c), -product(c,_1,d), -product(add(d,c),add(d,c),_0), -product(add(d,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),_2,d), -product(c,add(d,_1),add(d,_1)), -product(_3,c,c), -product(_3,add(d,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(d,_2,add(_1,c)), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_0), -product(c,_2,_0)]
[-product(_0,d,c), -product(_1,_1,additive_identity), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_1,d), -product(_2,_3,additive_identity), -product(additive_identity,_1,d), -product(_4,_3,c), -product(_2,_4,_2)]
[-product(_0,_1,additive_inverse(_2)), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d)]
[-product(_0,_1,c), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_2,d), -product(_1,_0,_2), -product(_2,_1,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(add(c,_1),add(c,_1),c), -product(add(c,_1),c,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,_2), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,d,c)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,_1), -product(c,_0,c), -product(c,add(_1,d),_2), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(add(_0,additive_identity),_0,add(_0,additive_identity)), -product(_1,add(_0,additive_identity),d), -product(d,_1,d)]
[-product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(c,c,_1), -product(c,_1,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_inverse(_1)), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_3,_4,add(c,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_5,_6,_1), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_1,d), -product(_2,_3,_0)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,_2)]
[-product(_0,d,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(_0,_4,_0)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(d,add(_2,c),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_2,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_inverse(d),_0), -product(_0,_1,c)]
[-product(add(c,d),add(c,d),d), -product(c,add(c,d),c), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_2,add(_3,_1),_6), -product(_5,_6,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_1,_1,_0), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,d), -product(c,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_1)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,d,c), -product(d,c,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_0,add(c,c)), -product(add(c,c),_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,_0,add(_2,d)), -product(add(_2,d),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_0), -product(_0,_3,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_3,d), -product(_2,_2,_4), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,add(d,c)), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_2,d,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_3,_1), -product(c,_4,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,add(c,c),d), -product(_1,c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,d), -product(_1,_2,_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,d,c), -product(d,c,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,c)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(add(d,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,d), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_0,_1,c), -product(_2,_3,d), -product(_0,_1,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_0,_4,add(_3,_1)), -product(c,_4,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_2,_0), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_1,d), -product(_2,additive_identity,additive_identity), -product(_3,additive_identity,c), -product(_2,_3,_2)]
[-product(_0,_0,c), -product(c,d,additive_identity), -product(_1,c,_0), -product(_1,additive_identity,d), -product(_0,d,_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,additive_identity,additive_identity), -product(_2,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,additive_identity,add(additive_identity,c)), -product(_1,_3,_1)]
[-product(d,_0,additive_identity), -product(c,d,d), -product(d,_0,c), -product(_0,add(d,additive_identity),_0)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,_3,additive_identity), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,_0,_1), -product(_5,c,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(add(d,c),_0,_0), -product(_2,d,d), -product(_2,_2,add(d,c)), -product(add(d,c),_2,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,c), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(c,c,_0), -product(_0,c,c), -product(c,d,additive_identity), -product(_0,additive_identity,d), -product(_1,d,_0), -product(c,_1,c), -product(_0,_2,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(_0,_2,_0), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,add(additive_identity,c),additive_identity), -product(_2,_2,_3), -product(_3,add(additive_identity,c),d)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,c,d), -product(_1,_0,additive_identity), -product(_1,_1,_0), -product(_1,additive_identity,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,d,d), -product(_1,_1,c), -product(c,_2,add(d,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_0,d), -product(_0,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,_0), -product(_0,d,c), -product(_0,_0,d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,add(_2,c),_2), -product(_1,_3,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,additive_identity,d), -product(additive_identity,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_5,_3,_2), -product(_5,additive_identity,d), -product(_6,add(_4,c),_4), -product(_3,_6,_2)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(_1,_2,add(_0,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_2), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(add(_2,_1),_2,_3), -product(_4,add(_2,_1),_0), -product(_4,_3,d), -product(_5,_4,_0), -product(_5,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_0,add(_4,_1)), -product(add(_4,_1),_0,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,c), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,d), -product(d,_1,d), -product(_1,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_7,add(_5,c),_8), -product(_9,_7,_2), -product(_9,_8,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_4), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,add(_4,_1),_2)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_3,_4,add(_1,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_1,add(_3,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,add(_0,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_3,add(_2,d),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_1,_1), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,_4,additive_identity), -product(_5,_0,_4)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_3,_1,_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,additive_identity), -product(c,_2,_3), -product(_3,_3,d), -product(c,_2,c), -product(c,additive_identity,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d), -product(_1,_3,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,_4,add(_2,_0)), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,add(_2,_0)), -product(_0,_1,c), -product(_0,add(_2,_0),d), -product(c,d,additive_identity)]
[-product(_0,d,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(_1,additive_identity,c), -product(_1,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,add(_0,additive_identity)), -product(c,_2,_0)]
[-product(c,_0,c), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,c,_1), -product(_2,_0,_0)]
[-product(_0,c,c), -product(c,_1,d), -product(_0,_0,add(d,c)), -product(add(d,c),_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(_1,c),_1), -product(_0,add(_1,c),d), -product(_0,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(_0,add(_0,c),d), -product(c,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,add(_2,_0)), -product(c,_1,c), -product(c,add(_2,_0),d), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_4,add(_3,_1),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(c,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,d), -product(d,_2,d), -product(_2,add(d,c),_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_1,additive_identity), -product(_0,_2,_0)]
[-product(_0,additive_identity,c), -product(_1,_0,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(_2,additive_identity,d), -product(_3,d,additive_identity), -product(additive_identity,_3,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,d,_0), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,d,additive_identity), -product(additive_identity,_2,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_0,_7,add(_4,c)), -product(_0,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_0,_1), -product(c,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(c,add(_3,_1),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(c,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_4,_5,add(c,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_2,add(_1,c)), -product(_0,_2,additive_identity)]
[-product(c,d,c), -product(_0,c,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,c,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,c,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_0,add(c,d),_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,_0,_1)]
[-product(d,d,_0), -product(c,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_1,_1,add(additive_identity,_0))]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_0,d), -product(_0,_0,_1)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(add(d,_0),d,d), -product(add(d,_0),add(d,_0),c), -product(add(d,_0),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,_4,additive_identity), -product(_1,_6,_1), -product(_7,_0,_4)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(add(_1,additive_identity),_2,_1), -product(_0,add(_1,additive_identity),_0), -product(_0,_2,d), -product(_0,_0,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(_3,c,c), -product(_3,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(c,_0)), -product(add(c,_0),c,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,c,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_2,d), -product(_0,c,add(_1,additive_identity))]
[-product(_0,_0,d), -product(d,_0,c), -product(add(_0,d),add(_0,d),_0), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,d), -product(c,_0,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,additive_identity), -product(additive_identity,add(c,c),d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,add(_3,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,additive_identity,d), -product(_1,c,c), -product(_0,_1,c)]
[-product(c,c,_0), -product(d,c,additive_identity), -product(additive_identity,c,c), -product(d,c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,additive_identity,_1), -product(_0,_4,_2)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),d,d), -product(d,add(d,c),add(d,c)), -product(add(d,c),add(d,c),additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_2,c,_3), -product(_1,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(add(_0,c),add(_0,c),_0), -product(c,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_0,add(_2,_1),_4), -product(c,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(d,_0),d,d), -product(d,add(d,_0),add(d,_0)), -product(add(d,_0),add(d,_0),additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,d,c), -product(d,_0,additive_identity), -product(_0,d,_0), -product(_0,additive_identity,d), -product(additive_identity,_0,c)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(add(c,c),_0,d), -product(_2,_1,_1), -product(_2,add(c,c),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(c,_1,d), -product(c,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_0,_1,_0), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_2,add(_0,_0)), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_6,_2), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_0,_4,add(_1,c)), -product(_0,_4,additive_identity)]
[-product(_0,_0,c), -product(_0,add(additive_identity,_0),additive_identity), -product(c,add(additive_identity,_0),d)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,c,additive_identity), -product(c,_1,_2), -product(_2,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(c,_3,c), -product(_4,_2,_1)]
[-product(_0,add(_0,c),c), -product(d,_0,_0), -product(d,d,_1), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,add(_0,d),_1), -product(c,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(_1,_2,d), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,c), -product(c,_3,_1)]
[-product(_0,_1,c), -product(_2,_2,d), -product(_0,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,_0,_1), -product(c,c,_2), -product(_2,_0,c), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(c,_0,additive_identity)]
[-product(c,d,c), -product(d,_0,additive_identity), -product(c,_0,d), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_0,_3), -product(c,_5,_0)]
[-product(_0,_1,c), -product(add(_0,_1),_0,_0), -product(_0,add(_0,_1),_2), -product(_2,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(add(d,_0),c,_0), -product(c,add(d,_0),d), -product(d,c,c), -product(c,c,c), -product(d,d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_4,add(_0,_2),_5), -product(_6,_4,_3), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_4), -product(_5,_2,d), -product(_5,_4,d), -product(_4,add(_3,c),_6), -product(_5,_6,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_0,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,d), -product(d,_1,c), -product(_0,add(_0,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_2,_2,add(_5,c)), -product(add(_5,c),_2,additive_identity)]
[-product(d,_0,c), -product(add(_1,c),d,d), -product(_2,_1,d), -product(add(_1,c),_2,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,_4,add(d,_2)), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_2,_2,_0), -product(_2,additive_identity,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,d), -product(d,_1,c), -product(_0,_0,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,d,_2), -product(c,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,add(d,additive_identity),c), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(_1,c,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,c,c), -product(_1,_2,_0)]
[-product(_0,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_0,_1,_0), -product(_0,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,_0,_3), -product(_3,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_2,c,d), -product(_2,additive_identity,d), -product(c,c,d), -product(_2,_3,c)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_0,add(d,_1),additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(c,_1,c)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(c,_2,add(_1,d)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,_0,d), -product(c,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,additive_identity,d), -product(c,_0,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_0,_1), -product(_2,additive_identity,_0), -product(_2,_1,d), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_0,_0,add(d,_0)), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,_4,add(_3,_2)), -product(_3,_4,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,c,_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,_1,add(c,_0)), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,c,_3), -product(_3,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,add(_0,additive_identity)), -product(d,d,c), -product(d,add(_0,additive_identity),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,add(additive_identity,_1),c), -product(c,_2,c)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,additive_identity,d), -product(c,add(_0,c),_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(add(_0,d),_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_0,_3,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(add(d,c),_1,d), -product(_0,add(d,c),add(d,c)), -product(c,add(d,c),additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,d), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_1,c,_2)]
[-product(_0,_1,c), -product(c,_0,_0), -product(add(_2,c),_2,_3), -product(_1,add(_2,c),c), -product(_1,_3,d), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,d), -product(_0,c,_1), -product(_1,_0,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(_0,additive_identity,d), -product(additive_identity,c,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_3,_4,add(_0,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(_0,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_3,_0), -product(_2,_2,_4), -product(_4,_3,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_0,_0,_5), -product(_5,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_0), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_1,add(_3,c),_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,additive_identity)]
[-product(_0,d,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,additive_identity,_1), -product(_1,_2,c)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,add(_1,_0),_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,_2), -product(_2,_0,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,_4), -product(_5,_2,additive_identity), -product(_5,_4,d)]
[-product(add(_0,c),add(_0,c),c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(c,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_0,add(_1,c)), -product(add(_1,c),_0,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(add(_0,_1),_0,_1), -product(_0,add(_0,_1),_0), -product(_0,_0,c), -product(c,add(_0,_1),d), -product(_2,c,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_1,add(_2,d),_3), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,d,_1), -product(_2,_3,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,add(c,_1),additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,_1), -product(c,_2,_0), -product(c,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(c,add(_1,_1),additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,_0,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(c,_0,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(_2,add(d,_1),_0), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),_1,add(_1,c)), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(d,_0,additive_identity), -product(c,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(_0,_2,c)]
[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,add(_4,c)), -product(_3,_3,_2), -product(_3,add(_4,c),d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,add(additive_identity,c),_4), -product(_3,_6,_2)]
[-product(d,c,d), -product(d,d,additive_identity), -product(additive_identity,c,c)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(_2,add(_0,c),c), -product(_2,c,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(add(d,_0),_1,d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(add(d,_0),_0,additive_identity)]
[-product(_0,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_1,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,_1,c), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_0,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,_1), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(d,_0,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(c,d,d)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,d), -product(additive_identity,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_2,_2,add(_0,c)), -product(add(_0,c),_2,additive_identity)]
[-product(c,c,c), -product(c,_0,d), -product(_0,_1,add(d,c)), -product(d,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,add(d,d)), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(add(additive_identity,c),add(additive_identity,c),additive_identity), -product(d,add(additive_identity,c),d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,add(c,_1),additive_identity)]
[-product(_0,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,d), -product(_1,add(c,_0),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_3,_2,_1), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,d), -product(d,_1,c), -product(_0,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(add(_2,d),add(_2,d),c), -product(add(_2,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,_2,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,add(_3,c),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,additive_identity,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,additive_identity,c)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,_1,add(_1,_0)), -product(c,_2,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,add(_4,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,c,add(c,d)), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_0), -product(c,_2,c), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_1,_2,add(d,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,d)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_1,_6,add(_4,c)), -product(c,_6,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_4,add(_2,c),_5), -product(_6,_4,_0), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(c,_0,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_0,_6), -product(_6,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_2,add(_0,_1),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(_2,_2,_2), -product(_2,add(d,c),_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_2,additive_identity), -product(_2,c,_3), -product(_3,_2,d), -product(c,c,_2)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,c), -product(_1,additive_identity,d), -product(_2,d,c), -product(additive_identity,_2,c)]
[-product(_0,additive_inverse(c),c), -product(_0,_0,_1), -product(_1,additive_inverse(c),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,_4), -product(_5,_0,_4)]
[-product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_0,c,d), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,add(additive_identity,_0),_1)]
[-product(d,_0,c), -product(c,d,d), -product(_1,additive_identity,d), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,additive_identity,d), -product(additive_identity,_1,add(_1,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_5), -product(_5,add(_4,c),d), -product(_6,_5,_2), -product(_6,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(additive_identity,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,_1), -product(_1,d,d), -product(d,add(_1,_0),_2), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_0,_0,_4), -product(c,_4,additive_identity)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,additive_identity), -product(c,_1,c), -product(_0,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,_2), -product(_2,_0,d), -product(d,_1,c), -product(_1,add(_0,_2),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_4,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,add(_1,additive_identity),d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,add(d,d),add(d,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,c), -product(c,_0,c), -product(_1,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_0,_1,add(d,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,add(_2,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(c,_4,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(_0,d,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,c,c), -product(_2,_1,c), -product(_2,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_1,_6,add(_3,c)), -product(c,_6,additive_identity)]
[-product(additive_identity,d,c), -product(d,additive_identity,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_0,d), -product(c,_1,additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,d), -product(d,_0,c), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(additive_identity,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_0,_5), -product(_5,_0,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(c,_0,additive_identity), -product(d,additive_identity,d), -product(d,_1,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(_0,c)), -product(_0,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,add(_0,additive_identity),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_3,_3,_2), -product(_3,additive_identity,d), -product(_3,c,d), -product(_3,_4,c)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_3,add(_1,d),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,add(_0,c),_0), -product(_0,_0,additive_identity), -product(additive_identity,add(_0,c),d)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(c,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_5,additive_identity,c), -product(_1,_5,_1)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,_1), -product(d,d,d), -product(d,_2,add(_1,_0)), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,add(_2,c),_2), -product(c,add(_2,c),d), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_3,_1), -product(_4,_0,d)]
[-product(d,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,d), -product(_3,_2,d), -product(_2,_0,_4), -product(_3,_4,additive_identity)]
[-product(c,c,c), -product(c,add(_0,c),_0), -product(c,add(_0,c),d), -product(c,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,_2,add(_2,c)), -product(_2,_3,add(_2,c)), -product(_2,add(_2,c),d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(add(_2,c),d,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(_0,_1,d), -product(c,_0,_0), -product(add(d,c),c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,d), -product(_1,_2,_2), -product(_3,additive_identity,d), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_1,_2,c), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_2,_1), -product(c,_4,c), -product(_5,_3,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,c,_2)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,additive_identity), -product(_2,add(c,_1),c), -product(_2,additive_identity,d), -product(add(c,_1),_2,c)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(c,_1,c)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(additive_identity,d,c), -product(_1,d,d), -product(d,_1,_0), -product(_1,d,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(add(_1,_0),add(_1,_0),c), -product(add(_1,_0),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_3,_2,c), -product(_3,additive_identity,d), -product(_4,d,_1), -product(c,_4,_2), -product(_3,_5,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_1,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,c,d)]
[-product(c,additive_identity,c), -product(_0,d,d), -product(_0,_0,c), -product(additive_identity,d,_1), -product(c,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(_1,d,d), -product(_1,_1,d), -product(_1,add(d,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,_2,_5), -product(c,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(_3,additive_identity,d), -product(_4,_2,add(_2,c)), -product(d,_4,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_0,_2), -product(_3,c,c), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(_0,_1,add(d,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(c,add(_2,_1),additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,add(_1,_2),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_3,add(c,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(_0,_0,add(_0,_1))]
[-product(add(c,_0),_0,c), -product(c,c,additive_identity), -product(_0,c,add(c,_0)), -product(_0,additive_identity,d)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(c,c,c)]
[-product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,add(_1,additive_identity)), -product(_1,_2,_0)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_3,_2,_1), -product(_3,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,add(additive_identity,additive_identity)), -product(add(additive_identity,additive_identity),_0,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,add(_2,_1),_2), -product(_0,_2,additive_identity), -product(additive_identity,add(_2,_1),d), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,c), -product(_3,_1,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_2,_1,c), -product(_2,c,d), -product(additive_identity,c,additive_identity), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(add(d,d),add(d,d),c), -product(add(d,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_5,_3), -product(additive_identity,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_0,_5,_4), -product(_3,_5,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_4,add(d,_2),_5), -product(_6,_4,_3), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(c,additive_identity,c)]
[-product(_0,_1,c), -product(c,d,additive_identity), -product(_2,c,_0), -product(_2,additive_identity,d), -product(_1,d,_1), -product(_2,_3,_1)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,d,d), -product(_2,_2,c), -product(_1,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,_1),_3), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),d,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(_3,add(_0,_1),_4), -product(_4,_2,c), -product(_3,_0,d), -product(_5,_3,_3), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_2), -product(_0,_1,_3), -product(_3,_2,d), -product(_4,_1,_0), -product(_4,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,_0,_0)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_0,add(_0,c),additive_identity)]
[-product(additive_identity,_0,_1), -product(c,additive_identity,d), -product(d,_0,c), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,d), -product(_2,_3,_3), -product(_5,_6,add(d,c)), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_0,_1,_0), -product(_2,_0,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(d,c,d), -product(d,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_2,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),d,_1), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_2,additive_identity), -product(_2,additive_identity,d)]
[-product(_0,_1,_2), -product(_0,_0,add(_3,_2)), -product(add(_3,_2),_1,c), -product(_0,_3,d), -product(add(_3,_2),_0,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,additive_identity,d), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,add(additive_identity,_0))]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_0,_3,_0), -product(d,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,_0), -product(_0,_1,c), -product(_3,add(_2,d),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_0,_3,add(_0,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,_0,d)]
[-product(_0,_1,c), -product(_0,_2,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,add(c,c)), -product(add(c,c),_0,d), -product(_1,_1,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,_1,add(d,c)), -product(add(d,c),_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,additive_identity,d), -product(d,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,c,_1), -product(_1,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,add(c,_1)), -product(add(c,_1),_1,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(add(_0,c),_0,add(_0,c)), -product(_2,add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,d), -product(_0,_0,d)]
[-product(add(_0,c),c,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(_3,_1,c), -product(_3,_2,d), -product(add(_0,c),add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity)]
[-product(_0,additive_inverse(_1),c), -product(_0,_1,d)]
[-product(_0,_0,d), -product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_2,_3,_2), -product(_2,_4,d), -product(_3,_5,c), -product(_2,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_3,_2,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,_1,_0)]
[-product(add(d,_0),_1,_0), -product(_2,add(d,_0),d), -product(d,_1,c), -product(_2,_2,_2), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_1,c,d), -product(_2,_0,additive_identity), -product(c,_2,c), -product(_1,_3,_0)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(d,d,add(d,c)), -product(add(d,c),d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_0,_0,_0), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(c,c,additive_inverse(_0)), -product(additive_inverse(_0),c,c), -product(c,_0,_1), -product(additive_inverse(_0),_1,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,add(additive_identity,c),d)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_3,_1,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,_3,add(c,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_1,_3), -product(_2,_5,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,add(_2,c),_5), -product(_0,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_2,c), -product(_1,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(add(_0,c),add(_0,c),c), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_3,d), -product(_2,additive_identity,additive_identity), -product(_4,additive_identity,c), -product(_2,_4,_2), -product(_5,_3,c)]
[-product(_0,additive_inverse(_1),c), -product(additive_inverse(_1),_2,_1), -product(c,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_2,_3,_1), -product(d,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_0,add(_1,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,c), -product(c,_4,d), -product(_4,_5,add(_3,_1)), -product(d,_5,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,c), -product(c,c,add(c,c)), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,add(_0,c),additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,d), -product(d,additive_identity,c), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(additive_identity,_1),_0,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_0,d), -product(add(additive_identity,_1),add(additive_identity,_1),_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,d)]
[-product(_0,additive_identity,c), -product(additive_identity,additive_identity,_0), -product(c,additive_identity,d), -product(additive_identity,_1,_1), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,add(_1,additive_identity),c)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,d,_0), -product(_1,_0,c), -product(_1,_0,d), -product(c,c,_0), -product(additive_identity,_0,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,c,add(c,c)), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_3,_3,add(d,_2)), -product(add(d,_2),_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(_1,_1,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,add(_2,d),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_2), -product(_5,_3,_2), -product(_5,_2,d), -product(_4,add(_4,c),_6), -product(_3,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_3,add(c,c),_4), -product(_5,_3,_2), -product(_5,_4,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_1,_0,d)]
[-product(_0,add(_0,_1),_1), -product(d,_0,d), -product(d,add(_0,_1),c), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(d,_1),d), -product(c,_0,_0), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,add(_0,_1),_3), -product(_2,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,d,c)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(_2,c,d), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_6,_7,add(_5,_2)), -product(_3,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,d,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(d,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_0,_2), -product(_0,_5,_0)]
[-product(d,additive_identity,c), -product(_0,_1,_2), -product(_3,_0,d), -product(_3,_2,d), -product(_2,_1,_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_4,_0,_0), -product(_4,_3,d), -product(_2,_5,add(_2,_1)), -product(_3,_5,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,additive_identity), -product(c,_2,c), -product(c,_0,d), -product(d,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(d,d,_0), -product(d,_0,d), -product(_1,d,additive_identity), -product(_0,_1,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_1,_2,add(_0,c)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_inverse(_1)), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(add(_2,d),add(_2,d),_0), -product(add(_2,d),_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,additive_identity), -product(_1,_2,_3), -product(_3,_0,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,c,add(d,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,additive_identity,_4), -product(_1,_6,_1), -product(_7,_0,_4)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,d)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_0), -product(_2,_0,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,_1), -product(_1,c,c), -product(c,_0,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,d,_1), -product(_0,_4,_2), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_0,_2), -product(_3,c,d), -product(_4,add(_1,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_3,_4,c), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(add(d,_0),add(d,_0),d), -product(add(d,_0),add(d,_0),add(d,_0)), -product(d,add(d,_0),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_0,additive_identity), -product(c,_0,add(additive_identity,_0)), -product(add(additive_identity,_0),_0,d)]
[-product(_0,add(additive_identity,c),c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(c,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,add(_3,c),_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(_1,_0,c), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,add(_1,_0),_1), -product(_0,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(add(c,_0),_0,_1), -product(_1,add(c,_0),d), -product(_2,_1,add(c,_0)), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_3,_1,_0), -product(_3,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,_2), -product(_3,_0,_0), -product(_3,_2,d), -product(additive_identity,_4,_1), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,additive_identity,c), -product(_1,_2,c), -product(_1,c,d), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(c,d,additive_identity), -product(_1,c,_1), -product(_2,_1,_1), -product(_2,_1,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(additive_identity,_0,_2), -product(c,_2,additive_identity)]
[-product(d,additive_inverse(_0),c), -product(_1,_0,_1), -product(_2,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_0,d), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_2,_0,_4), -product(_4,_3,d), -product(_0,_3,add(additive_identity,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_1,d), -product(_0,add(c,c),_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(d,add(_2,c),d), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,_2,add(_2,c)), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(_1,_2,add(c,_0)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,_1,add(_0,_0)), -product(_0,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,c,d), -product(add(c,c),_0,additive_identity)]
[-product(c,d,c), -product(c,c,additive_identity), -product(additive_identity,d,d)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_0,_0,_1), -product(_0,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_0,_3,_1), -product(_0,_3,d), -product(_4,_0,_2), -product(_4,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,additive_identity,c), -product(_1,_3,_1)]
[-product(d,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,d), -product(_1,_2,_2), -product(_1,_2,_1), -product(_3,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,d,_0), -product(_0,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,_0,d), -product(_0,_2,add(c,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(_2,add(_3,c),_4), -product(d,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,additive_identity,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_1,c,c)]
[-product(_0,_1,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_2,_0), -product(_4,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_1,_1,_0), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,add(_0,_1),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,d,d), -product(additive_identity,d,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,d), -product(d,_1,_1), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,c), -product(c,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,c), -product(_0,d,add(_0,d))]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,d), -product(c,_1,_0), -product(_0,_1,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(_0,_0,_1), -product(_1,add(_1,_2),c), -product(_1,_0,d), -product(_3,_0,_0), -product(_3,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(c,_0,_0), -product(_1,_0,c), -product(_1,c,d), -product(c,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_2), -product(_2,_4,d), -product(_4,_5,c), -product(d,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,additive_identity), -product(c,_1,_0), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(_0,d,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_2,_0,_3), -product(additive_identity,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(c,_1,_2), -product(_2,additive_identity,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(add(d,_0),_1,d), -product(c,add(d,_0),add(d,_0)), -product(_0,add(d,_0),additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_1,_0,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(_2,additive_identity,d), -product(_0,_2,additive_identity)]
[-product(_0,_1,_2), -product(d,_0,_3), -product(_3,_1,c), -product(d,_4,d), -product(_4,add(_4,_2),_5), -product(d,_5,additive_identity)]
[-product(c,_0,c), -product(_0,c,additive_identity), -product(c,_0,_0), -product(_0,c,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(d,d,add(_3,c)), -product(add(_3,c),d,additive_identity)]
[-product(_0,d,c), -product(d,_1,additive_identity), -product(c,_1,d), -product(_0,c,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,c,d), -product(c,add(_0,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(_1,_0,d), -product(_0,add(_0,_1),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(d,_2,additive_identity), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,add(d,additive_identity),_0), -product(_0,_3,c)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(_2,c,c), -product(_2,d,additive_identity)]
[-product(additive_identity,c,c), -product(d,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,additive_identity,d)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,additive_identity,d), -product(c,_0,add(_0,c))]
[-product(add(d,_0),_1,_0), -product(_2,add(d,_0),d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_2,_2), -product(_3,d,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,_2,_4), -product(additive_identity,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,c), -product(_4,_2,c), -product(_4,c,d), -product(_3,add(_3,_1),_5), -product(_2,_5,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(d,additive_identity,additive_identity), -product(additive_identity,d,d), -product(d,d,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_3), -product(d,_1,_4), -product(_4,_2,d), -product(_2,add(_3,_0),_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,d), -product(c,additive_identity,additive_identity)]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_3,add(_2,c),_2), -product(add(_2,c),_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(d,_3,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,d,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,_1,add(_0,d)), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_2), -product(_2,_1,c), -product(_1,_2,d), -product(_1,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(_2,_1),_3,_2), -product(c,add(_2,_1),_4), -product(_4,_3,d), -product(_5,c,c), -product(_5,_4,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,d)), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,add(_0,additive_identity),_0), -product(c,_1,_2), -product(_2,add(_0,additive_identity),d), -product(_0,_1,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,d), -product(_3,add(c,_1),_5), -product(_2,_5,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,_2), -product(_2,add(_1,_0),d), -product(_2,_2,d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(c,c,d), -product(c,c,c), -product(_0,add(c,d),_1), -product(_2,_0,c), -product(_2,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_1,_2,d), -product(d,_2,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(c,c,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(d,_0),d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_3,d,_1), -product(_0,_3,_2)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_0,_0,add(c,_1)), -product(add(c,_1),_0,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(_0,c,additive_identity), -product(_0,_0,add(c,_0)), -product(_0,additive_identity,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,_0,d), -product(_0,additive_identity,add(c,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(add(_0,_1),add(_0,_1),c), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(c,_5,c)]
[-product(_0,add(d,c),c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,additive_identity), -product(additive_identity,_4,d), -product(_5,c,_3), -product(_2,_5,_2)]
[-product(_0,d,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,_0,d), -product(_2,add(_1,_1),_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,_0), -product(c,_0,_2), -product(_2,_1,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,_3), -product(c,c,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(_0,_0,c), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_1,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_0,_3,add(additive_identity,c))]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(_3,add(d,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(add(additive_identity,c),_0,c), -product(add(additive_identity,c),add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_1,additive_identity), -product(add(additive_identity,c),add(additive_identity,c),_1), -product(_1,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,add(_1,c)), -product(_0,add(_1,c),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(additive_identity,_1,_2), -product(c,_1,d), -product(_3,_4,_2), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_3,_3,c), -product(_3,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(d,_0)), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_3), -product(_3,_0,d), -product(c,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,c)), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,add(_4,_1))]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_3,d), -product(_0,_3,_4), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(d,_1),d), -product(c,c,c), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,add(_3,c)), -product(add(_3,c),_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,d,_0), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,c,add(_1,additive_identity)), -product(add(_1,additive_identity),_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(c,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,add(_2,additive_identity),_0), -product(_0,_3,c)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,add(_0,additive_identity),c), -product(additive_identity,add(_0,additive_identity),d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_2,_1,_1), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(add(_0,_0),add(_0,_0),c), -product(add(_0,_0),c,additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,_0,_1), -product(_2,c,c), -product(_2,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_0,c,_3), -product(_3,_2,d), -product(_1,_2,add(additive_identity,c))]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,c,_0)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_0,add(additive_identity,_1)), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(d,_2,additive_identity)]
[-product(d,c,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,d,_2), -product(_2,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,additive_identity), -product(additive_identity,_2,d)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,additive_identity), -product(additive_identity,_1,d), -product(_3,_0,add(c,c)), -product(_2,_3,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,c,additive_identity), -product(c,additive_identity,d), -product(_1,c,c), -product(c,_1,_0)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,add(c,_0)), -product(add(c,_0),add(c,_0),d), -product(c,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_3), -product(_3,add(additive_identity,c),d), -product(_1,_2,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,d), -product(additive_identity,_2,d), -product(_3,_2,_0)]
[-product(d,d,_0), -product(d,d,_1), -product(_1,d,c), -product(_0,d,d), -product(d,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,c,additive_identity), -product(c,_2,_1), -product(_1,c,d), -product(c,_2,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,c,_3), -product(_0,_4,_2)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_3,add(_1,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_1,_1,_2), -product(_2,_0,d), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,_2), -product(_3,_0,d), -product(_4,_5,add(_0,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,d,d), -product(_1,_1,c), -product(c,add(d,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,d,c), -product(c,_0,_0), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,_0,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_0,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_0,additive_identity), -product(_1,_1,d), -product(_1,additive_identity,d), -product(additive_identity,_0,_0)]
[-product(d,d,c), -product(d,d,d), -product(_0,add(c,d),_1), -product(_2,_0,d), -product(_2,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1), -product(_3,_5,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(_0,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_0,_0,add(d,_1)), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_1), -product(_3,_2,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,c), -product(c,_2,d), -product(_2,add(c,_1),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_1,c,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,_3,add(_1,_2)), -product(_1,_3,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,additive_identity), -product(c,additive_identity,d), -product(_1,_0,_0), -product(additive_identity,_1,c)]
[-product(d,additive_identity,c), -product(_0,c,_0), -product(_1,_0,d), -product(d,d,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(add(d,c),_1,d), -product(c,add(d,c),add(d,c)), -product(_0,add(d,c),additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,c,additive_identity), -product(_0,_0,_1), -product(_0,additive_identity,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_2,_2,add(_3,c)), -product(add(_3,c),_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,d), -product(_3,additive_identity,_2), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,_4,add(_2,_1)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_inverse(_1)), -product(_0,_2,_4), -product(_4,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(d,_2,d), -product(_2,_4,add(_3,c)), -product(d,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_2,c,add(additive_identity,_1)), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,add(_0,_1)), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(add(_1,_2),add(_1,_2),_1), -product(add(_1,_2),_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(add(d,c),_2,d), -product(_3,_1,_1), -product(_3,add(d,c),additive_identity)]
[-product(_0,d,c), -product(_1,_1,_2), -product(_0,_1,additive_identity), -product(additive_identity,_1,d), -product(_0,_1,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,d), -product(_2,_2,_1), -product(_3,additive_identity,add(d,c)), -product(_1,_3,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_0), -product(c,_1,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_1), -product(c,c,_0), -product(_0,_2,add(_1,d)), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_0,additive_identity,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,_1,d), -product(add(d,c),_0,_0), -product(c,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_2), -product(_1,_3,_0)]
[-product(_0,c,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,add(_0,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_3,add(d,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_0,add(_3,_1),additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,_0)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(additive_identity,_1,additive_identity), -product(_2,additive_identity,d), -product(additive_identity,_1,_1), -product(_3,_0,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_4,add(_3,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(additive_identity,_0,d), -product(c,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,d,c), -product(c,_1,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(_2,additive_identity,d), -product(_3,d,c), -product(d,_3,additive_identity), -product(_2,_4,c)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),add(_0,_1),_0)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,d,d), -product(_0,_0,c), -product(c,d,_1), -product(additive_identity,_1,additive_identity)]
[-product(additive_inverse(c),_0,c), -product(_1,additive_inverse(c),additive_inverse(c)), -product(_2,_1,_1), -product(_2,additive_inverse(c),d)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,_4,d), -product(_0,add(_4,_2),_5), -product(_3,_5,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(_0,_0,c), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,c,additive_identity), -product(d,_3,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,additive_identity,add(c,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_1,_1,d), -product(_1,_1,_1), -product(d,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_2,additive_identity), -product(_2,_3,c), -product(c,_2,d), -product(_2,_3,_2), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,_0,d), -product(_3,add(c,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(_4,_5,add(_3,_1)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(d,_1,d), -product(_0,d,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,add(d,additive_identity),c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_4,_5,add(d,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_0,add(d,_1),_4), -product(c,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,c,additive_identity)]
[-product(d,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,d), -product(d,d,c), -product(c,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,_2), -product(_0,_1,_0), -product(_0,_2,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_3,add(_2,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(_1,_0,d), -product(_0,_0,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_1,d,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_inverse(d)), -product(_0,_1,_0)]
[-product(_0,additive_identity,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(c,_2,_0), -product(add(_0,_1),c,additive_identity), -product(additive_identity,_2,d), -product(add(_0,_1),_1,add(_0,_1))]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),c,d), -product(add(_0,c),add(_0,c),_1), -product(_1,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_inverse(_1),_2), -product(c,_2,d)]
[-product(c,_0,c), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1), -product(_2,_0,_0)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_2,_2,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,c), -product(add(_0,_1),_0,additive_identity), -product(add(_0,_1),add(_0,_1),_0), -product(add(_0,_1),additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,c,additive_identity), -product(d,_0,_0), -product(d,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(additive_identity,_0,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(_0,c,add(c,c)), -product(_0,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(c,c,_1), -product(_1,c,d), -product(additive_identity,c,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,c,_0), -product(c,_0,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,d,add(_0,d)), -product(add(_0,d),d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_2,d), -product(_0,add(_3,_1),_4), -product(c,_4,additive_identity)]
[-product(d,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,c,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,add(_1,additive_identity),_0), -product(_0,_2,c)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,d,add(_0,d)), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_1,_0,_3), -product(_3,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_1,_0), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,additive_identity), -product(_2,c,additive_identity), -product(additive_identity,_3,d)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(add(_2,c),add(_2,c),_2), -product(_2,add(_2,c),d), -product(_3,add(_2,c),add(_2,c)), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,_1), -product(_2,_1,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_3,_0)]
[-product(_0,_0,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,_0), -product(_0,_3,_1)]
[-product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_0,add(_2,_0),_5), -product(c,_5,additive_identity)]
[-product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,d,d), -product(_0,_3,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,d), -product(d,_1,_1), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),_2,add(_2,c)), -product(_3,add(_2,c),d), -product(_4,_3,d), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_3,_4,c), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,_1,additive_identity), -product(_0,_3,_0), -product(_4,_2,_1)]
[-product(d,additive_identity,d), -product(d,d,_0), -product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,c,_5), -product(_0,_5,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,additive_identity), -product(_0,_0,d), -product(_0,additive_identity,d), -product(additive_identity,_1,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_1), -product(_2,_0,d), -product(_2,_1,d), -product(d,_2,d)]
[-product(c,c,d), -product(c,c,c), -product(c,add(c,d),_0), -product(c,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_4,_2,_0), -product(_4,additive_identity,d), -product(_5,_3,add(_3,_1)), -product(_0,_5,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_0,add(_1,c),_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,add(_1,_0)), -product(_0,add(_1,_0),d), -product(_2,_0,c), -product(_2,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(_2,_3,add(d,_0)), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_0,_2), -product(c,_5,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_1,d), -product(_1,add(_2,additive_identity),d)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_0,additive_identity,d)]
[-product(add(d,c),_0,c), -product(add(d,c),add(d,c),add(d,c)), -product(_0,d,d), -product(_0,_0,add(d,c)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,_3), -product(c,_2,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(add(_1,_0),add(_1,_0),d), -product(add(_1,_0),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d), -product(_0,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,c,add(_0,_0)), -product(add(_0,_0),c,d), -product(add(_0,_0),c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,additive_identity), -product(additive_identity,c,d)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(_0,d,_1), -product(_0,_1,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(c,_1,additive_identity), -product(c,c,_2), -product(_2,_1,d), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,d,_0), -product(_2,_0,_1), -product(_2,_0,d), -product(_3,additive_identity,_1), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_inverse(_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_1,_1,_2), -product(_1,_2,d), -product(_3,_0,_2), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_1,_0), -product(_0,_3,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_0), -product(_3,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(add(d,c),add(d,c),_2), -product(add(d,c),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_inverse(c),d)]
[-product(d,_0,c), -product(_1,_1,d), -product(d,_1,d), -product(_1,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(_0,_4,add(_2,_1)), -product(c,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(additive_identity,_1,c), -product(_1,_1,d), -product(_1,d,_0), -product(_1,_1,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,additive_identity,_0), -product(_0,d,c), -product(c,c,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_3,d,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_2,additive_identity), -product(_0,d,_0), -product(_0,_2,d), -product(_2,_2,add(additive_identity,_1))]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,d), -product(d,d,_0), -product(_1,d,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,_3,d), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_0), -product(_0,_1,d), -product(c,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_0,_1), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_2,_3,_4), -product(_4,_1,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_0,_1,_0)]
[-product(_0,_0,c), -product(c,_0,d), -product(_1,_2,add(c,_0)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,add(_1,_0))]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(add(_0,d),_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,c),_4), -product(d,_4,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(_3,add(_2,_0),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,d), -product(d,additive_identity,_1), -product(_1,_0,c), -product(d,additive_identity,d), -product(_0,_1,additive_identity), -product(additive_identity,additive_identity,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(_1,_0,_1), -product(_1,c,d), -product(_1,additive_identity,additive_identity)]
[-product(add(d,c),c,c), -product(c,add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(add(d,c),add(d,c),additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_3,_0), -product(add(_0,_1),_2,_4), -product(_4,_3,d), -product(_5,_1,add(_0,_1)), -product(_5,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,additive_identity), -product(_0,_2,_3), -product(_3,_1,d), -product(_4,_3,_0), -product(_4,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_3,add(_3,c),_4), -product(_3,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(c,add(_0,_0),c), -product(c,add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),c), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,_1), -product(_3,_1,d), -product(_0,_4,add(_2,c)), -product(c,_4,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,d,additive_identity), -product(_0,d,c), -product(_0,additive_identity,d), -product(c,d,d)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,d), -product(d,_2,_2), -product(_3,add(d,c),_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,c,_2), -product(_4,_3,c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,c,d)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(add(d,c),add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,additive_identity,_0), -product(_1,_3,_1), -product(_4,_0,_0)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,additive_identity,c), -product(_1,_0,d), -product(additive_identity,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,c,additive_identity), -product(_2,_3,_4), -product(_4,c,d), -product(_5,_4,_2), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(d,_1,d), -product(_0,d,_2), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,_0), -product(_2,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(_2,c,c), -product(_2,_0,d), -product(_1,_0,add(_1,additive_identity))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,_3,additive_identity), -product(_5,_0,_3)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_identity,d), -product(_1,_2,_1), -product(_2,c,_3), -product(_1,_3,additive_identity)]
[-product(c,_0,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_0,add(d,_0),additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_0,d), -product(_1,_2,_1)]
[-product(d,_0,c), -product(_0,_0,additive_identity), -product(c,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(_3,d,d), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,additive_identity,c), -product(_2,c,_2), -product(_2,c,d), -product(d,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_1,additive_identity,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_3,_4,c), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,_4,_0), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_4,_2), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,_1), -product(d,additive_identity,d), -product(d,_0,c), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,c), -product(c,_0,d), -product(c,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_0,d), -product(_1,add(additive_identity,additive_identity),_0), -product(_0,_1,c)]
[-product(add(additive_identity,c),c,c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),_0,additive_identity), -product(c,add(additive_identity,c),_0), -product(_0,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_1,_3), -product(_2,_3,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,_0), -product(_0,add(_0,_1),_2), -product(_2,_0,d), -product(add(_0,_1),_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,d), -product(c,_2,_2), -product(_4,_5,add(d,_1)), -product(c,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(c,c,_0), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_5,add(_4,_1)), -product(d,_5,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_2,d), -product(d,d,additive_identity), -product(additive_identity,_2,d), -product(_2,d,c), -product(_3,_2,c)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_1,_0), -product(_0,additive_identity,_0), -product(_0,_1,d), -product(_0,_0,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_1), -product(c,_1,d), -product(c,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(c,_1,_0), -product(_0,c,additive_identity), -product(additive_identity,_1,d), -product(_0,d,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_0,_1,_3), -product(c,_3,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(_1,add(_0,d),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(d,_0,d), -product(d,d,_1), -product(_1,_0,c), -product(_0,add(_0,d),_2), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_0), -product(_0,_2,_4), -product(_4,_3,d), -product(_3,add(_0,_1),_5), -product(_2,_5,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_2,_3,c), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,add(c,d),additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,add(additive_identity,c),additive_identity), -product(_1,_2,_1), -product(_1,add(additive_identity,c),d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_2,_2,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_1,_1,c), -product(_1,_2,d), -product(_1,c,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(_2,_0,d), -product(_1,_2,_1), -product(_3,d,_1), -product(_3,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(c,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,add(_0,d),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_inverse(_0)), -product(_0,_1,d)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_2), -product(_2,_3,d), -product(_2,_3,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_0,_1,_0), -product(_0,_1,d), -product(d,_1,additive_identity)]
[-product(c,additive_identity,d), -product(c,c,_0), -product(_0,additive_identity,c), -product(additive_identity,d,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_1,d), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0), -product(_2,_1,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,_1,add(c,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_0,add(d,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,_1), -product(c,_0,_1), -product(_1,_1,c), -product(c,additive_identity,d), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_2,c,c), -product(_2,_1,d), -product(_1,_0,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_2,_0,add(_0,_1)), -product(_0,_2,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,_1,d), -product(_1,_1,c)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(d,add(_2,_0),additive_identity)]
[-product(additive_identity,additive_identity,c), -product(c,additive_identity,c), -product(_0,c,c), -product(_0,c,d), -product(c,_0,_1), -product(_1,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,additive_identity,add(additive_identity,c)), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,_2,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_3,add(_2,c),_2), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(c,c)), -product(d,_2,additive_identity)]
[-product(add(_0,additive_identity),add(_0,additive_identity),additive_identity), -product(additive_identity,add(_0,additive_identity),c), -product(_0,_0,add(_0,additive_identity)), -product(_0,add(_0,additive_identity),d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,_1,d), -product(d,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(additive_inverse(d),additive_inverse(d),d), -product(d,additive_inverse(d),c)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_4,_1), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(d,d,d), -product(d,d,_0), -product(_1,_0,additive_identity), -product(_0,_1,_0)]
[-product(_0,_1,additive_identity), -product(d,_0,_2), -product(_2,_1,c), -product(d,_3,d), -product(_3,_3,_4), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_2), -product(_2,c,d), -product(_0,_3,add(_1,c)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,_3,_4), -product(_5,_2,c), -product(_5,_4,d), -product(_1,add(_3,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(c,additive_identity,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(_0,d,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),_2), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,c), -product(c,c,d), -product(_1,add(_1,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(additive_identity,_1),c,additive_identity), -product(c,add(additive_identity,_1),_2), -product(_2,c,d), -product(add(additive_identity,_1),add(additive_identity,_1),c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,d,additive_identity), -product(_2,_2,c), -product(_2,additive_identity,d), -product(_2,_1,d), -product(_2,_3,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_0,_1), -product(_1,c,d), -product(c,add(c,_0),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_2,d), -product(_1,_3,_4), -product(c,_4,additive_identity)]
[-product(c,_0,c), -product(_0,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,c,additive_identity), -product(d,_2,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_4,add(_3,c),_5), -product(_6,_4,_1), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_1,_4,add(_3,c)), -product(c,_4,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,add(additive_identity,c),d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(_1,_1),_0), -product(_0,_2,_0)]
[-product(d,_0,d), -product(d,d,additive_identity), -product(additive_identity,_0,c), -product(_0,add(_0,d),d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_2,_5,_1), -product(_4,_5,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(_0,d,d), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(_2,_1),_2), -product(c,c,c), -product(c,add(_2,_1),d), -product(c,d,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,_4,d), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_3,_0,_2), -product(_3,additive_identity,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_1,_1,c), -product(_2,_2,d), -product(_2,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_2,_3,add(_1,_0)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,add(d,c),d), -product(c,_1,_1), -product(_0,d,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,d,additive_identity), -product(d,_1,d), -product(d,c,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_0,_5,_3), -product(c,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,_6,add(_4,_1)), -product(_1,_6,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(additive_identity,_3,c), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,c,_4), -product(_5,_3,_1), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(_0,d,additive_identity)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(_0,add(d,d),c), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_0,add(_1,additive_identity))]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_1,_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_0,_1), -product(_1,_0,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,c,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(c,add(d,_0),c), -product(c,_1,d), -product(c,c,c), -product(c,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,_3,d), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_0,_3,add(_2,d)), -product(d,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),c), -product(_1,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_0), -product(_0,_4,d), -product(_2,_5,add(_3,_1)), -product(_0,_5,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,_2,d), -product(d,_1,d), -product(_0,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,add(_0,c),c), -product(_1,_0,_0), -product(_1,_1,_2), -product(_2,_0,d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,add(_2,_1)), -product(c,add(_2,_1),d), -product(_3,c,c), -product(_3,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,add(additive_identity,c)), -product(_2,_3,_2)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_1,_1,c), -product(_1,additive_identity,d), -product(_1,_2,_2)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_0,_1,_1), -product(_0,_1,_0)]
[-product(c,c,c), -product(_0,c,d), -product(c,_0,additive_identity), -product(additive_identity,c,d), -product(c,_0,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_0), -product(_1,_2,add(d,d)), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(_1,additive_identity),additive_identity), -product(_0,_0,_2), -product(_2,add(_1,additive_identity),c), -product(_0,_1,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_3,_4,add(_2,d)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_2), -product(c,_2,d), -product(c,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(_0,c)), -product(c,_1,additive_identity)]
[-product(_0,d,c), -product(c,_0,_0), -product(d,d,additive_identity), -product(_0,additive_identity,d), -product(c,_0,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_3,_4,add(_1,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_4,c), -product(_5,d,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,d,_0), -product(_0,_2,_0), -product(_0,_3,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,additive_identity), -product(_2,_4,_0)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,d), -product(additive_identity,_2,_2)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,_0,d), -product(_1,additive_identity,_0)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_0,d), -product(additive_identity,_1,_2), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(c,_1,d), -product(c,_1,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),_3), -product(_3,add(_2,c),d), -product(_3,_2,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(d,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(add(d,c),_0,c), -product(d,add(d,c),add(d,c)), -product(_1,d,d), -product(d,_1,_1), -product(_1,add(d,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,additive_identity,c), -product(d,_2,d)]
[-product(d,_0,c), -product(c,d,d), -product(_1,d,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(c,add(_1,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(c,_1,c)]
[-product(add(_0,c),_0,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),c,d), -product(_1,add(_0,c),add(_0,c)), -product(_1,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_1,_2), -product(_0,additive_identity,_1), -product(_0,_2,d), -product(_1,_0,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_0,add(_1,_1),additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,d,additive_identity), -product(_0,_0,_2), -product(_0,additive_identity,d), -product(_0,c,d)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,add(_1,additive_identity)), -product(_2,_0,c), -product(_2,add(_1,additive_identity),d), -product(d,_2,c)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(_0,c,d), -product(d,_1,d)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_1,d,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_1,_0), -product(_2,c,d), -product(_3,add(_0,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,d,_3), -product(_4,_2,_1), -product(_4,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,d,_2), -product(_2,d,additive_identity)]
[-product(d,_0,c), -product(d,_1,d), -product(d,d,additive_identity), -product(additive_identity,_1,d), -product(_1,d,_0), -product(_2,_1,_0)]
[-product(_0,_1,c), -product(additive_inverse(_1),additive_inverse(_1),_0), -product(additive_inverse(_1),_0,d)]
[-product(_0,c,c), -product(c,c,additive_identity), -product(c,c,d), -product(_0,_0,c)]
[-product(_0,d,additive_identity), -product(_1,_0,d), -product(d,d,c), -product(_1,_1,_1), -product(_2,_0,_1), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_2), -product(_3,add(_3,c),_2), -product(_3,_2,d), -product(add(_3,c),_2,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,c,_0), -product(_0,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,additive_identity,_0), -product(_2,_1,d), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,c,additive_identity), -product(d,_2,c), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(add(_0,_1),_1,c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_1,_0), -product(add(_2,d),add(_2,d),_1), -product(add(_2,d),_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,d,additive_identity), -product(_0,c,d), -product(_0,additive_identity,d), -product(d,d,c)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_3), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_4,_1,_3), -product(_0,_4,_0)]
[-product(add(_0,_1),_2,_1), -product(_3,add(_0,_1),additive_identity), -product(additive_identity,_2,c), -product(_3,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,c), -product(c,add(d,_1),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,c,additive_identity)]
[-product(d,_0,additive_identity), -product(d,d,_1), -product(_1,_0,c), -product(_1,d,d), -product(d,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,_2,d), -product(_2,_2,_0)]
[-product(_0,_1,d), -product(_0,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_0,add(_1,d)), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_0), -product(_0,_2,d), -product(c,d,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(_0,_0,additive_identity), -product(d,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(_0,c,_1)]
[-product(c,d,c), -product(_0,_1,_2), -product(c,_0,additive_identity), -product(additive_identity,_1,d), -product(d,_0,_2)]
[-product(d,additive_identity,c), -product(_0,d,_0), -product(_1,_0,d), -product(d,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,additive_identity,c), -product(c,c,_0), -product(c,_0,d), -product(_0,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_0,_2), -product(d,_1,d), -product(d,_0,d), -product(_0,additive_identity,_2)]
[-product(_0,_1,c), -product(_0,_1,additive_inverse(d))]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(c,_2,c)]
[-product(_0,_1,_2), -product(d,_0,additive_identity), -product(additive_identity,_1,c), -product(d,additive_identity,d), -product(additive_identity,_2,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_1,_3,_0)]
[-product(add(c,c),_0,c), -product(c,add(c,c),add(c,c)), -product(add(c,c),c,additive_identity), -product(_0,add(c,c),c), -product(_0,additive_identity,d)]
[-product(add(_0,c),_1,c), -product(c,add(_0,c),add(_0,c)), -product(_1,_0,_2), -product(add(_0,c),_2,d), -product(c,c,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,add(_2,additive_identity),_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_0,c)]
[-product(d,_0,c), -product(d,d,_1), -product(_1,_0,d), -product(_0,add(c,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,d), -product(_0,_0,add(_0,d)), -product(add(_0,d),_0,c), -product(d,_0,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(_2,_1,add(_0,d)), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(_1,_0,d), -product(d,_0,c), -product(_2,d,_1), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,d)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(additive_identity,_1,d), -product(c,additive_identity,additive_identity), -product(_2,_1,_0)]
[-product(_0,_0,c), -product(_1,_2,d), -product(_0,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,_1), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(add(_0,c),additive_identity,additive_identity), -product(_1,additive_identity,add(_0,c)), -product(_1,c,d), -product(add(_0,c),_1,add(_0,c))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,add(c,c),additive_identity), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_0,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_4,c),_4), -product(_2,_3,_5), -product(_5,add(_4,c),d), -product(_6,_3,_2), -product(_6,_4,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_2,_3,c), -product(additive_identity,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,c,_1)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_1,additive_identity), -product(c,c,_1), -product(_1,_1,d), -product(additive_identity,_1,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,d,d), -product(_2,_2,_1), -product(_3,_1,_1), -product(_3,add(d,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,add(d,c),additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_0), -product(_0,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,additive_identity), -product(additive_identity,_0,d), -product(_2,add(c,_1),_1), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,d,_0), -product(d,_0,_0), -product(d,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_inverse(_1),_3), -product(_4,_2,c), -product(_4,_3,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,additive_identity), -product(additive_identity,_1,c), -product(_2,_3,d), -product(_4,_0,_3), -product(_2,_4,_2)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(add(_3,c),add(_3,c),_1), -product(add(_3,c),_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(c,_1,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_2,additive_identity),c)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,d), -product(d,_1,d), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,additive_identity), -product(_2,_0,_0), -product(_2,additive_identity,d), -product(_2,_3,_1)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(d,c),add(d,c),d), -product(d,add(d,c),d), -product(add(d,c),d,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,d), -product(_1,_4,_2), -product(_2,_4,additive_identity)]
[-product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_0,_0,d), -product(c,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_1,_4,add(_3,_2)), -product(_2,_4,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_0,_1,_3), -product(_2,_3,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_2,_1), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_0,_0,d), -product(_1,add(c,_0),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(d,add(c,c),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,_0,c)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,add(_1,_0),_1), -product(c,_2,c)]
[-product(c,c,c), -product(additive_identity,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,additive_identity), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,_0,c), -product(additive_identity,additive_identity,_0), -product(_1,additive_identity,d), -product(_1,_0,d), -product(_0,d,additive_identity), -product(_1,additive_identity,additive_identity)]
[-product(c,_0,_1), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,additive_identity,_1), -product(_1,_2,_0)]
[-product(additive_identity,_0,c), -product(_0,_1,_2), -product(c,_1,d)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_1,add(_0,additive_identity),_2), -product(_2,_1,c), -product(_1,_0,d), -product(add(_0,additive_identity),add(_0,additive_identity),_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,_3,d), -product(_2,add(additive_identity,c),_3)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_3), -product(_1,_2,_1), -product(_1,_1,add(_3,c)), -product(add(_3,c),_1,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(_0,_0,add(c,d)), -product(add(c,d),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,c), -product(c,d,_2), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_4,add(d,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_1,_2,d), -product(_0,_2,additive_identity)]
[-product(_0,add(c,c),c), -product(c,_0,_0), -product(add(c,c),c,additive_identity), -product(_0,additive_identity,d), -product(add(c,c),_0,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_0,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_1,c)]
[-product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,c), -product(_0,_1,d)]
[-product(_0,_0,additive_identity), -product(d,_0,_1), -product(_1,_0,c), -product(d,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_0,_0,_3), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(c,_0,_2), -product(_2,_1,d), -product(c,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(c,_1,_3), -product(_3,_2,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_0,d,d), -product(d,_0,additive_identity), -product(_0,d,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,add(_0,_1),add(_0,_1)), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_0,c), -product(c,_0,d), -product(_0,_2,add(_0,_1)), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(c,c,_1), -product(_1,_1,d), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_5,add(_2,_0)), -product(d,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(c,add(c,c),d), -product(add(c,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,add(_1,additive_identity),_0)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_3,_0), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,additive_inverse(_1),_1), -product(additive_inverse(_1),_0,additive_inverse(_1)), -product(additive_inverse(_1),additive_inverse(_1),c), -product(c,_0,d)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(_1,_0,d), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(c,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_2,d,additive_identity), -product(_0,_2,_1), -product(_0,additive_identity,d), -product(_1,_0,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_1,additive_identity), -product(_0,_1,_0), -product(_0,additive_identity,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(d,d,_0), -product(d,c,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,add(_2,c)), -product(_0,add(_2,c),d), -product(_0,_0,_3), -product(_3,_2,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,_0,_1), -product(_4,c,additive_identity)]
[-product(_0,c,c), -product(c,_1,d), -product(_2,_3,add(d,c)), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,additive_identity,_1), -product(_2,_0,_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_3,_4,add(_2,c)), -product(d,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_2,c,_3), -product(d,_3,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),add(_0,_0)), -product(add(_0,_0),add(_0,_0),d), -product(add(_0,_0),d,additive_identity)]
[-product(add(d,c),add(d,c),c), -product(add(d,c),add(d,c),add(d,c)), -product(add(d,c),_0,d), -product(c,add(d,c),additive_identity)]
[-product(_0,add(d,c),c), -product(d,_0,_0), -product(_1,_0,d), -product(d,_1,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,d), -product(d,_1,c), -product(c,c,c), -product(_1,d,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_0,_3), -product(_3,_1,d), -product(_4,add(c,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_1,_0), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_0), -product(_0,_0,d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_4,_2), -product(_0,_4,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,additive_identity), -product(_2,_2,d), -product(_2,additive_identity,d), -product(additive_identity,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,additive_identity,d), -product(_4,_0,_3)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,add(c,_1)), -product(_2,c,c), -product(_2,add(c,_1),d), -product(add(c,_1),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_3)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_inverse(_1)), -product(_1,_2,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_1,d), -product(_1,_3,add(c,c)), -product(c,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,add(additive_identity,_0))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,_2,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,_2), -product(_3,c,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,add(_1,c),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(c,c,c), -product(_0,d,add(d,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,additive_identity,d), -product(_2,_3,add(_3,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d), -product(d,c,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(add(_0,c),_0,_0), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,additive_identity), -product(c,_0,_1), -product(_1,_1,c), -product(c,_1,d), -product(_1,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_1,_0), -product(_0,_2,_0)]
[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),_2), -product(_2,add(_0,_1),c), -product(_1,_0,d), -product(add(_0,_1),_1,additive_identity)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,add(c,c),d), -product(_2,_0,_1), -product(_2,d,additive_identity)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_0,_1,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_0,add(d,_1),d), -product(_0,_0,_0), -product(_0,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,additive_identity,add(d,c)), -product(_1,_4,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_0,_0,c), -product(_0,c,d), -product(_2,add(_0,_1),c), -product(_2,_1,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),d,_1), -product(d,add(_1,_0),_2), -product(_2,d,d), -product(_2,_2,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,add(_0,d)), -product(_2,d,add(_0,d)), -product(_2,c,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_3,_1,_1), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(_1,_2,_1), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_2,_2), -product(_5,d,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,_0), -product(d,_2,_1)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(c,_5,add(_3,_0)), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(d,c),d), -product(_2,_3,_3), -product(_4,_3,_2), -product(_4,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(_1,c,d), -product(c,_1,c)]
[-product(_0,c,c), -product(additive_identity,additive_identity,_0), -product(additive_identity,_0,d), -product(_0,_0,_1), -product(_1,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,_0,_2), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_0), -product(_0,_0,d), -product(_2,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_1,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,add(d,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_0,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,c,d), -product(c,add(c,_0),_1), -product(c,_1,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(d,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(_0,d,d), -product(_0,add(_0,c),additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,d), -product(d,_3,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,_0,additive_identity), -product(_0,_0,add(_0,c)), -product(_0,additive_identity,d)]
[-product(_0,additive_identity,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,_1,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_1,_0), -product(_0,_0,_0), -product(_1,_2,add(_1,d)), -product(_0,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_3,_2), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,c), -product(_4,_3,_2), -product(_4,c,d), -product(_5,_4,_2), -product(_5,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,d), -product(c,_0,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,_1)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_1,additive_identity), -product(c,_2,_3), -product(_3,_1,d), -product(_4,_2,c), -product(_4,additive_identity,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_2,_6), -product(_6,add(_0,c),additive_identity)]
[-product(_0,_1,_2), -product(d,_0,d), -product(d,_1,c), -product(_1,_3,add(_0,_2)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,_1), -product(_3,_1,d), -product(_2,additive_identity,_2), -product(_4,_0,_2)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,c,additive_identity)]
[-product(c,_0,c), -product(_1,_2,_3), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,add(_3,_0))]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,d), -product(_1,_2,_2), -product(_4,additive_identity,d), -product(_1,_4,_1), -product(_5,_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(d,_0,add(_0,additive_identity))]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_inverse(_0)), -product(d,_1,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_3,_2,_1), -product(_0,_3,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(c,c,_0), -product(_0,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_0,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_0,_0,d), -product(c,_0,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_0,_3), -product(_3,_2,d), -product(_0,add(additive_identity,c),_2)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_1,_5,_1), -product(c,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_2,_1,_0), -product(_0,_2,c)]
[-product(_0,_1,c), -product(_0,_2,_3), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_2,d), -product(add(_3,_1),_0,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,_0), -product(_0,_1,_0), -product(_0,_0,d), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_2), -product(_2,_1,c), -product(_3,additive_identity,d), -product(_3,_3,_4), -product(_4,_0,additive_identity)]
[-product(additive_identity,_0,_1), -product(additive_identity,additive_identity,_2), -product(_2,_0,c), -product(_2,additive_identity,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(_1,add(c,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,add(d,c),d), -product(_3,_0,_2), -product(_3,d,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(c,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_1,_2,_0), -product(c,_2,d), -product(add(_0,c),add(_0,c),_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_1,_1,additive_identity), -product(additive_identity,_1,d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_2,_1), -product(_2,_1,d), -product(_3,_2,additive_identity), -product(_1,_3,_1), -product(_4,_0,_2)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_3,add(_2,c),additive_identity), -product(d,_3,d)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,_1), -product(d,d,d), -product(d,_2,add(_1,_0)), -product(_1,_2,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,d), -product(c,_1,_0), -product(d,_1,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_3,d), -product(_1,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,additive_identity), -product(d,_2,_2), -product(_2,_3,d), -product(_3,add(additive_identity,c),_3)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,c), -product(d,_1,d), -product(_2,additive_identity,c), -product(d,_2,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,additive_identity), -product(_3,_2,add(_2,c)), -product(_3,additive_identity,d), -product(add(_2,c),_3,_2)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,_2), -product(c,_0,c), -product(c,_1,d), -product(_1,d,_2)]
[-product(_0,additive_identity,c), -product(d,_1,_1), -product(_0,d,additive_identity), -product(additive_identity,_1,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,c), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,d), -product(_1,additive_identity,_1), -product(_1,_2,c)]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(add(_2,c),_2,_3), -product(_3,_2,additive_identity)]
[-product(_0,d,c), -product(c,_1,additive_identity), -product(d,c,_0), -product(d,additive_identity,d), -product(d,_1,_1)]
[-product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(additive_identity,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,_2), -product(_3,_2,d), -product(d,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(d,_0,_3), -product(_3,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(add(_0,d),_0,d), -product(add(_0,d),add(_0,d),_1), -product(_1,_0,c), -product(_2,add(_0,d),add(_0,d)), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_2,_3,_1), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,_0,add(_0,d)), -product(add(_0,d),_1,c), -product(_2,add(_0,d),c), -product(_2,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_1), -product(_1,_2,_4), -product(_4,_3,d), -product(_0,_1,additive_identity), -product(_1,_0,_1)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_0,_0,c), -product(c,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(add(_1,_0),_1,_2), -product(c,add(_1,_0),c), -product(c,_2,d), -product(_0,c,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(c,_1,d), -product(c,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,_1), -product(_0,_0,_0), -product(_0,_2,add(_1,d)), -product(_1,_2,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(d,additive_identity,additive_identity)]
[-product(_0,d,additive_identity), -product(d,_0,d), -product(d,d,c), -product(c,_0,d), -product(d,c,_1), -product(_1,_0,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,add(_0,additive_identity),c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_0), -product(_0,_2,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,add(_0,_1),c), -product(_5,_1,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,c), -product(c,_0,c), -product(_1,c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,additive_identity,add(_2,c))]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_1,_4), -product(_5,_3,d), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,add(_3,additive_identity),_0), -product(_0,_5,_0)]
[-product(_0,additive_identity,c), -product(_0,d,_1), -product(d,_0,_0), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_2,_0,_0), -product(_3,_4,_1), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_0,_2), -product(_6,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,_2), -product(_2,_4,add(d,_1)), -product(_2,_4,additive_identity)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,c), -product(c,_4,d), -product(_1,add(_4,_2),_5), -product(_3,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_2), -product(_2,_5,d), -product(_3,_6,add(_4,c)), -product(_2,_6,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,_0,d), -product(_0,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_1), -product(_0,_1,_0), -product(_0,_2,d), -product(_0,_0,_0)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(c,add(_0,d),_0), -product(c,c,add(_0,d)), -product(add(_0,d),c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(c,c,add(d,d)), -product(add(d,d),c,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(add(_3,_2),add(_3,_2),_0), -product(add(_3,_2),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_2,_2,_4), -product(_4,_2,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(_0,_1,_2), -product(_2,_2,d), -product(_1,_0,_0)]
[-product(_0,additive_identity,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,d)]
[-product(add(_0,_0),_0,c), -product(_0,_0,add(_0,_0)), -product(_0,add(_0,_0),d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,_3), -product(_4,_0,_3)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_1,additive_identity), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,c,d), -product(_0,_2,add(_1,_1)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_6,_7,add(_4,_1)), -product(c,_6,_8), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_0,add(_4,c),_2)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,_1,_2)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,additive_identity,d), -product(_1,_4,_2), -product(c,_4,additive_identity)]
[-product(_0,add(c,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,add(c,c),d), -product(_0,c,additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(c,additive_identity,_0), -product(_0,c,_0)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(d,d,_0), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,additive_identity), -product(c,_2,_4), -product(_4,_3,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,c), -product(_2,c,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(d,d,c), -product(c,c,additive_identity), -product(d,c,d)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_0,add(_0,c)), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_0,d), -product(_0,_2,_0), -product(_0,_3,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),_6), -product(c,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_1,additive_identity), -product(c,d,additive_identity), -product(additive_identity,_1,d), -product(c,additive_identity,c)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,additive_inverse(c),d), -product(_1,_2,_1)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_0,_1), -product(c,add(_0,additive_identity),c), -product(c,_1,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(additive_identity,_1),_2,additive_identity), -product(_0,add(additive_identity,_1),_2), -product(_2,_2,d), -product(add(additive_identity,_1),_0,_0)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,c), -product(_0,_1,d), -product(_1,add(c,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,add(_0,c),_1), -product(_0,_1,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(additive_identity,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,c,_0), -product(_1,_0,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,_2,_0), -product(c,c,c), -product(c,_2,d), -product(c,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,_1), -product(c,_1,d), -product(_2,c,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,d), -product(_0,_2,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,_0), -product(_0,_0,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_0,_0,additive_identity), -product(_2,_0,add(_0,_1)), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(add(_2,c),add(_2,c),_2), -product(d,add(_2,c),d), -product(_3,add(_2,c),d), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_7,add(_4,c),_8), -product(_9,_7,_2), -product(_9,_8,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,additive_identity,d), -product(_2,c,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_2), -product(_0,_3,d), -product(_3,add(_2,c),_4), -product(_0,_4,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(c,_0,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),_2), -product(_2,add(_1,_0),d), -product(_2,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_3,_0), -product(c,_2,_4), -product(_4,_3,d), -product(c,_1,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_0,add(additive_identity,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_2,_0,add(_1,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,c,_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_2), -product(_2,_0,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,add(_1,c),_3), -product(c,_3,additive_identity)]
[-product(_0,_1,_1), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,additive_identity,d), -product(_4,_3,_2), -product(_4,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_1,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_0,_0,add(_2,_1)), -product(add(_2,_1),_0,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_0,_3,add(_2,_1)), -product(_1,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d), -product(_1,c,_0)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(add(d,d),d,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,add(_0,_1)), -product(_4,_3,d), -product(add(_0,_1),_4,_5), -product(_5,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(d,_0,additive_identity), -product(c,d,_0), -product(d,c,c)]
[-product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,additive_identity), -product(_4,_3,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,_0,_0), -product(c,add(d,d),additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,_1,d), -product(c,_0,_0), -product(_2,d,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,additive_identity,c), -product(c,_2,d), -product(c,c,d), -product(c,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(c,c,_0), -product(c,add(c,d),additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(c,_0,_3), -product(_3,_1,d), -product(c,c,_2)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_0,add(c,c),d), -product(_2,_0,_1), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_0)]
[-product(_0,_1,_2), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_0,add(_1,_2),_3), -product(_1,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(add(d,d),add(d,d),c), -product(add(d,d),c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_1), -product(_2,_1,d), -product(_3,c,additive_identity), -product(d,_3,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_0,_2,_1)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(add(d,c),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_3,d), -product(_2,_4,add(_2,c)), -product(_3,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(additive_identity,_2,_3), -product(_1,additive_identity,_3), -product(_3,_2,d), -product(_1,_1,_1), -product(_4,_0,_3)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(_0,d,add(additive_identity,c))]
[-product(_0,c,c), -product(c,_0,_0), -product(c,additive_identity,_1), -product(_0,_1,d), -product(_2,_0,c), -product(_2,c,additive_identity)]
[-product(c,_0,c), -product(c,additive_identity,d), -product(_0,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,c,additive_identity), -product(_1,_0,_2), -product(_2,c,c), -product(_1,c,d), -product(_0,_2,_1)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,d,add(additive_identity,c))]
[-product(_0,_1,c), -product(d,_0,_0), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,c,d), -product(_2,additive_identity,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(_1,_2,d), -product(_3,_1,add(_0,_1)), -product(_3,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,additive_identity,d), -product(_1,add(_0,additive_identity),_0), -product(_0,_1,c)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_0,_3,_0), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,d), -product(c,_1,c), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,additive_identity,_0), -product(_0,_4,c)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,additive_identity,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,additive_identity,d), -product(additive_identity,d,d), -product(d,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,_3), -product(_4,_2,_2), -product(_4,_3,d), -product(_4,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,_0,add(_0,_1))]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(c,add(_1,_0),additive_identity)]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_1,d), -product(c,_0,_0), -product(c,d,_2), -product(additive_identity,_2,additive_identity)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_0), -product(_1,_2,d), -product(_2,add(_0,_1),_3), -product(_0,_3,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,d), -product(d,_0,d), -product(d,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(d,_0,_0), -product(d,_0,d), -product(_0,_1,add(c,c)), -product(d,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,c), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,_2,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_2), -product(_2,_2,d), -product(_1,c,c)]
[-product(c,_0,additive_identity), -product(_1,c,_1), -product(_1,_0,c), -product(_1,_2,d), -product(_0,_0,_2)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,c,d), -product(_1,_3,add(_1,_1)), -product(c,_3,additive_identity)]
[-product(c,_0,_0), -product(d,c,additive_identity), -product(additive_identity,_0,c), -product(d,additive_identity,d)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,d), -product(c,add(d,additive_identity),c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_2,_3,c), -product(c,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_inverse(_1),additive_inverse(_1),_0), -product(additive_inverse(_1),_0,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,additive_inverse(d),_0), -product(_0,_1,_0)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(d,d,_1), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(d,_1),_2,d), -product(c,add(d,_1),add(d,_1)), -product(c,c,_3), -product(_3,add(d,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,_1,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,_0), -product(d,d,d)]
[-product(_0,_1,d), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,additive_identity,d), -product(_2,additive_identity,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,c,c), -product(_5,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,add(_2,_0),_2), -product(d,_1,add(_2,_0)), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,additive_identity), -product(c,_1,c), -product(c,c,d), -product(d,_1,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(d,_0,c), -product(add(_1,_0),_1,add(_1,_0)), -product(add(_1,_0),add(_1,_0),d), -product(add(_1,_0),d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),_2), -product(_2,_0,d), -product(_1,_1,_3), -product(_3,add(c,c),additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(c,c,d), -product(_0,_0,add(_0,additive_identity))]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_0,_0,_1), -product(_1,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_2,_0,_1), -product(_2,additive_identity,d), -product(_1,_0,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,d), -product(_0,_1,_1), -product(_0,_1,_3), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,_1), -product(d,additive_identity,d), -product(d,_0,c), -product(additive_identity,_1,_2), -product(d,_2,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_1,d,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(d,_1,add(_0,_0)), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(c,c,additive_identity), -product(d,c,d), -product(_0,c,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,additive_identity,d), -product(_2,additive_identity,additive_identity), -product(_3,additive_identity,c), -product(_2,_3,_2)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,_2,d), -product(_0,add(additive_identity,c),_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_2), -product(c,c,_2), -product(_2,_1,d), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,add(_2,_1)), -product(add(_2,_1),c,additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_1,_0), -product(c,_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_0,_2), -product(_2,_1,d), -product(c,c,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,_1), -product(_1,_2,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_1,d), -product(_0,add(_0,_1),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(additive_identity,d,_0), -product(additive_identity,additive_identity,_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(c,c,_4), -product(_4,_0,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,_1,add(c,c)), -product(d,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_3,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(add(_0,d),add(_0,d),_0), -product(_0,add(_0,d),c), -product(add(_0,d),add(_0,d),add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_1,_1,c), -product(c,_1,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_0,_2,d), -product(_2,_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,add(_1,_1),_0), -product(c,_2,c)]
[-product(d,c,additive_identity), -product(c,d,c), -product(c,c,c), -product(c,d,d), -product(d,c,add(c,additive_identity))]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,c,additive_identity), -product(_2,additive_identity,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_1,c,c), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(add(additive_identity,d),_0,additive_identity), -product(_0,add(additive_identity,d),_0), -product(add(additive_identity,d),add(additive_identity,d),_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_0), -product(_1,_0,_1), -product(_1,_0,d), -product(_0,additive_identity,d)]
[-product(d,_0,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(c,c,d)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_3,_2,_2), -product(_1,_3,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_2), -product(_4,_2,d), -product(d,add(_3,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,c), -product(c,_3,d), -product(_3,_4,_2), -product(d,_4,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,_2), -product(_3,_0,c), -product(_3,_2,d), -product(c,_4,_1), -product(additive_identity,_4,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,_1,_2), -product(_0,_2,d), -product(_1,_3,add(_1,_0)), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,d,additive_identity), -product(_2,_1,d), -product(_2,additive_identity,d), -product(d,d,_1), -product(_2,_3,_0)]
[-product(add(additive_identity,_0),add(additive_identity,_0),_0), -product(_0,add(additive_identity,_0),c), -product(_1,c,additive_identity), -product(add(additive_identity,_0),_1,_2), -product(_2,c,d), -product(_1,_0,add(additive_identity,_0))]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_3), -product(d,_1,d), -product(d,_3,d), -product(_3,_2,additive_identity), -product(_4,_0,_2)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(add(_2,_0),add(_2,_0),c), -product(add(_2,_0),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,additive_identity,_1), -product(d,_3,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(c,d,additive_identity)]
[-product(add(c,c),_0,c), -product(_1,add(c,c),add(c,c)), -product(_1,add(c,c),additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(c,_2,_1)]
[-product(c,c,additive_identity), -product(_0,c,d), -product(d,c,c), -product(c,d,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_0,_3)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_0,add(_0,c),_3), -product(_0,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,d,additive_identity)]
[-product(_0,d,additive_identity), -product(_1,_0,_2), -product(_2,d,c), -product(_1,d,d), -product(_1,_1,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_0,_3), -product(add(_0,_1),_2,add(_0,_1)), -product(add(_0,_1),_3,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,d), -product(d,_1,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_1,_2,_1), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(d,_0,_1), -product(_1,_1,c), -product(d,_1,d), -product(d,c,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,_0,add(_1,d)), -product(_0,_2,_0)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_2,_0), -product(c,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),d,d), -product(add(d,_1),add(d,_1),_0), -product(_2,add(d,_1),_0), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,d), -product(_0,_1,_1), -product(additive_identity,_3,d), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_0), -product(_2,_3,_2), -product(_2,_0,d), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(_0,additive_identity,_1), -product(_1,additive_identity,c), -product(_0,_0,additive_identity), -product(_2,add(_1,d),_0), -product(_0,_2,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(c,c,_0), -product(_0,c,d), -product(c,_1,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(additive_identity,_1,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_2,c), -product(_3,_1,c)]
[-product(d,add(_0,_1),_1), -product(d,d,_0), -product(_0,add(_0,_1),c), -product(_0,d,d), -product(_0,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_2,_3,c), -product(_1,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_3), -product(_1,_0,_3), -product(_3,_2,d), -product(_4,_3,additive_identity), -product(_1,_4,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,add(_1,additive_identity),d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,add(additive_identity,c),_1)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_0,c,_5), -product(_0,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(c,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_2,add(d,c),additive_identity)]
[-product(d,d,_0), -product(c,d,c), -product(d,d,additive_identity), -product(c,d,d)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(d,d,d), -product(_1,_2,add(_0,_0)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,add(_2,_1),_2), -product(c,d,additive_identity), -product(additive_identity,add(_2,_1),d), -product(c,additive_identity,c)]
[-product(_0,_1,c), -product(_2,additive_identity,_1), -product(_0,_2,_0), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_5), -product(_5,_3,d), -product(_6,additive_identity,add(_4,c)), -product(_1,_6,_1)]
[-product(_0,_1,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_3,_0,_0), -product(_3,add(d,_1),additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_3,add(_0,c)), -product(c,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_1,add(additive_identity,_0)), -product(d,_2,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_6,add(_3,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_0,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_0,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_0,additive_identity,_0), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,_1,additive_identity), -product(_0,c,_2), -product(_2,_1,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_6,_3,_2), -product(_6,_5,d), -product(_3,add(_4,c),_7), -product(_6,_7,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,d), -product(c,_1,_1), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),_0,_2), -product(add(_0,c),_2,d), -product(add(_0,c),add(_0,c),_3), -product(_3,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,additive_identity,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(_1,add(_0,d),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_0,_3), -product(_1,_2,_4), -product(_4,_0,d), -product(_5,_3,additive_identity), -product(_1,_5,_1)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_0,_2), -product(_3,_1,add(_0,_1)), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(d,d,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,_2), -product(_2,c,d), -product(_0,add(_2,_1),_3), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(_2,_3,add(_1,c)), -product(d,_2,_4), -product(_4,_3,additive_identity)]
[-product(add(c,c),add(c,c),c), -product(c,add(c,c),c), -product(add(c,c),c,additive_identity), -product(additive_identity,add(c,c),d), -product(add(c,c),c,add(c,c))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,_2,_0), -product(_0,_5,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_0,_3,_1), -product(_1,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,d), -product(_0,c,add(c,_1))]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_2,_2,c), -product(_2,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_2,additive_identity), -product(_0,_2,add(additive_identity,_1)), -product(add(additive_identity,_1),_2,d), -product(_0,_0,_2)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_4,add(_1,_0)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(_1,_2,add(_0,d)), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,c,additive_identity), -product(d,_1,_0), -product(d,additive_identity,d), -product(_2,c,c), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,additive_identity), -product(_4,_3,_2), -product(_4,additive_identity,d), -product(_5,d,c), -product(_2,_5,_3), -product(_4,_6,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_4,_2,_0), -product(_4,add(_3,_1),d), -product(_5,_4,_0), -product(_5,d,additive_identity)]
[-product(d,d,c), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_inverse(c)), -product(c,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,_3), -product(_0,_2,d), -product(_2,_4,add(_3,c)), -product(_3,_4,additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(_0,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_0,_0,add(_0,d)), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,d,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_3,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,_1)]
[-product(additive_identity,d,c), -product(_0,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,_0), -product(_2,additive_identity,d), -product(_0,_2,_0)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,_0), -product(_1,additive_identity,d)]
[-product(_0,_1,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_1,_1,_0)]
[-product(c,_0,d), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,c,d), -product(_1,_1,_1)]
[-product(_0,_1,c), -product(_2,_3,additive_identity), -product(_0,_2,_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,c,additive_identity)]
[-product(d,additive_identity,c), -product(d,_0,d), -product(_0,_0,_1), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(additive_identity,_1,d), -product(_2,additive_identity,additive_identity), -product(_3,c,additive_identity), -product(_2,_3,_2)]
[-product(c,c,_0), -product(c,c,c), -product(_1,c,c), -product(_1,c,d), -product(c,_2,add(c,_0)), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_3,_4,add(_2,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,add(_3,_1),_3), -product(c,_2,_4), -product(_4,add(_3,_1),d), -product(_5,_2,c), -product(_5,_3,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(add(d,_0),add(d,_0),d), -product(d,add(d,_0),c), -product(add(d,_0),add(d,_0),add(d,_0)), -product(_0,add(d,_0),additive_identity)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(d,d,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_5,_1,_6), -product(_7,_5,c), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,d,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,d), -product(_1,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,d), -product(d,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(d,_0,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,additive_inverse(_1)), -product(additive_inverse(_1),_0,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,_1,_3), -product(_4,_2,d), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_0,add(_0,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(c,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,additive_identity), -product(_0,additive_identity,d), -product(_1,d,c), -product(c,_1,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_0), -product(_0,_1,_3), -product(_3,_2,d)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_1,_2,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,add(_1,additive_identity),_0), -product(_0,_3,c)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(add(_0,d),_0,add(_0,d)), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,d), -product(d,_0,c), -product(d,_0,add(d,additive_identity))]
[-product(_0,additive_identity,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_1,_0,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_1,_0,_2), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_2,_0,additive_identity), -product(additive_identity,_0,c), -product(_2,c,d), -product(_2,_0,_2)]
[-product(_0,_0,c), -product(c,_0,_0), -product(_0,add(d,c),d), -product(_0,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(_3,_1,c), -product(_3,_2,d), -product(_4,_3,c), -product(_4,c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(c,d,d), -product(c,c,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,add(_0,_1)), -product(_0,add(_0,_1),d), -product(add(_0,_1),_0,_2), -product(_2,_0,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,_2,add(_1,_0)), -product(_0,_2,additive_identity)]
[-product(d,d,c), -product(_0,d,d), -product(_0,d,_0), -product(d,add(c,c),_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_0,_5,_1), -product(c,_5,additive_identity)]
[-product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,add(_1,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,c), -product(_1,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,c), -product(c,_1,d), -product(_2,c,additive_identity), -product(_1,_2,_1)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,_2), -product(d,_1,d), -product(d,d,add(_2,_0)), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,additive_identity), -product(additive_identity,_2,d), -product(_3,_2,c), -product(_2,_3,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,add(_4,_1)), -product(add(_4,_1),_3,d), -product(c,c,_5), -product(_5,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_2,c)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,c,_1), -product(_1,c,additive_identity)]
[-product(c,additive_identity,additive_identity), -product(c,c,d), -product(d,additive_identity,c), -product(d,_0,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(add(c,d),add(c,d),c), -product(add(c,d),c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,c,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_4,_5,add(_3,_2)), -product(_0,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,c), -product(c,_1,_3), -product(_3,_2,d), -product(_2,c,_4), -product(_1,_4,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_2,add(_3,c),_3), -product(c,_2,_1), -product(_1,add(_3,c),d), -product(_0,d,additive_identity)]
[-product(d,d,c), -product(additive_identity,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(d,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,c,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_0,d,c)]
[-product(_0,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(additive_identity,_2,additive_identity)]
[-product(add(d,_0),add(d,_0),_0), -product(_0,add(d,_0),c), -product(_1,_2,d), -product(add(d,_0),_1,_1), -product(_3,add(d,_0),add(d,_0)), -product(_3,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,_0), -product(_0,d,_1), -product(_0,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,additive_identity,add(_1,c))]
[-product(_0,additive_identity,c), -product(_0,_0,_0), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,_1,c)]
[-product(_0,add(c,c),c), -product(_1,_0,_0), -product(_1,_0,_2), -product(_2,add(c,c),d), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),_1), -product(_1,add(_0,_0),d), -product(_2,add(_0,_0),add(_0,_0)), -product(_2,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,_1,d), -product(_1,add(_1,c),additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(add(_0,d),add(_0,d),d), -product(add(_0,d),d,additive_identity)]
[-product(add(_0,c),_0,c), -product(_1,add(_0,c),add(_0,c)), -product(_2,add(_0,c),_1), -product(_2,c,d), -product(_3,_1,_1), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,_0,add(_0,additive_identity)), -product(c,_2,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(add(_0,c),_0,_1), -product(add(_0,c),_1,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,_0,_2), -product(_2,_1,d), -product(_1,add(c,c),_3), -product(_2,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_0,add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_2), -product(_2,_3,_5), -product(_5,_4,d), -product(_4,add(_2,c),_6), -product(_3,_6,additive_identity)]
[-product(d,d,additive_identity), -product(_0,d,add(_0,additive_identity)), -product(add(_0,additive_identity),d,c), -product(_0,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,c), -product(_4,_3,d), -product(_2,_1,_5), -product(_4,_5,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,d,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(_0,_0,_1), -product(_1,additive_identity,d)]
[-product(add(d,_0),_0,c), -product(_0,d,d), -product(_0,_0,add(d,_0)), -product(c,_0,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_3,c), -product(c,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,_3,additive_identity), -product(_2,d,_2), -product(_2,additive_identity,d), -product(additive_identity,_3,add(_3,c))]
[-product(_0,_1,c), -product(add(_2,c),_0,_0), -product(_2,_2,add(_2,c)), -product(_2,add(_2,c),d), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(d,add(_1,_0),_3), -product(_3,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_2,c,d), -product(_3,additive_identity,add(_0,c)), -product(_1,_3,_1)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,additive_identity,_3), -product(_2,_0,_2), -product(_2,_3,d), -product(_2,_1,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(d,c,additive_identity), -product(_0,d,c), -product(_0,additive_identity,d)]
[-product(_0,d,c), -product(_1,_0,additive_identity), -product(_2,_1,_0), -product(_2,additive_identity,d), -product(_3,_0,_0), -product(_1,_3,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,c,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,_0,add(c,additive_identity)), -product(c,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_2,_1)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,c,_4), -product(_4,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_0,additive_identity), -product(c,_1,c), -product(c,_0,d), -product(_0,d,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(additive_identity,_0,d), -product(c,_1,c)]
[-product(c,c,d), -product(c,c,c), -product(_0,c,additive_identity), -product(c,_0,c), -product(_0,d,_1), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,_1), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(c,_3,d), -product(_2,c,additive_identity), -product(additive_identity,_3,d), -product(_4,_3,c)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,d), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_4,_1,_2), -product(_0,_4,_0), -product(_5,_3,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,c), -product(c,_1,c), -product(c,_0,d), -product(_0,c,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,d,_1), -product(_2,_1,d), -product(_0,d,additive_identity), -product(d,_0,d)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(_0,d,d), -product(c,_0,_0), -product(d,_0,c)]
[-product(add(d,d),add(d,d),d), -product(d,add(d,d),c), -product(add(d,d),add(d,d),add(d,d)), -product(_0,d,add(d,d)), -product(_0,c,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,add(c,c),additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(c,add(d,additive_identity),c), -product(add(d,additive_identity),_0,d), -product(c,add(d,additive_identity),add(d,additive_identity)), -product(c,c,add(d,additive_identity))]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_2,_3), -product(additive_identity,_1,_4), -product(_4,_2,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_2,_4,_1), -product(_0,_4,additive_identity)]
[-product(d,_0,additive_identity), -product(_1,d,d), -product(d,_0,c), -product(_1,_1,_2), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_4,_5,add(_0,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,add(additive_identity,_1),additive_identity), -product(_1,add(additive_identity,_1),d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,add(_2,c),_2), -product(_2,_3,add(_2,c)), -product(add(_2,c),add(_2,c),d), -product(_3,d,additive_identity)]
[-product(add(d,c),_0,c), -product(_1,add(d,c),add(d,c)), -product(_2,_3,d), -product(_1,_2,_2), -product(_1,_1,_4), -product(_4,add(d,c),additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,additive_identity,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,add(d,c),c), -product(_1,_0,_0), -product(_2,d,d), -product(_2,_2,_1), -product(_3,_0,_1), -product(_3,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_2,_1), -product(_1,_0,_1), -product(_1,_2,d), -product(_0,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_2,_1), -product(_0,_2,d), -product(_0,c,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(d,_1,_0), -product(_0,additive_identity,d), -product(d,_0,d)]
[-product(_0,_0,additive_inverse(c)), -product(additive_inverse(c),_0,c), -product(_0,additive_inverse(c),_1), -product(_1,_0,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_2,_1,c), -product(c,_2,c)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,c,_3), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_0,_4), -product(_4,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,_0,_0), -product(_1,additive_identity,_0), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(d,c,_2), -product(_2,d,additive_identity), -product(additive_identity,c,d), -product(_2,additive_identity,_2), -product(_2,_3,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,c), -product(_0,c,d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(add(c,_1),c,c), -product(c,add(c,_1),_2), -product(_2,c,d), -product(add(c,_1),_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_2,c),_2,additive_identity), -product(_3,add(_2,c),_2), -product(_3,additive_identity,d), -product(_2,_2,add(_2,c))]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(_0,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,additive_identity,_3), -product(_5,_0,_3)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_2), -product(_3,_1,c), -product(_3,_2,d), -product(c,_1,_4), -product(_4,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,add(d,_1),additive_identity), -product(_0,_3,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_2,_2,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,_2,add(_4,_1)), -product(_0,_5,_0)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_2,d,_0), -product(_0,_2,_0)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,additive_identity), -product(_1,_1,_1), -product(_1,c,d)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_1,_3,add(_2,_1)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,_3), -product(_3,_2,d), -product(_0,_1,_2)]
[-product(c,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(c,c,_0)]
[-product(_0,_1,_2), -product(_3,_0,add(_3,_2)), -product(add(_3,_2),_1,c), -product(_3,_3,d), -product(d,_0,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,c), -product(d,_0,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,_1), -product(_1,_2,_1), -product(d,add(_1,c),_3), -product(_2,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(_1,_0,d), -product(_1,additive_identity,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_0), -product(additive_identity,_1,_0), -product(additive_identity,_0,d), -product(_1,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,_1,additive_identity), -product(d,_1,d), -product(_1,_1,add(additive_identity,c))]
[-product(_0,_0,additive_inverse(d)), -product(additive_inverse(d),_0,c), -product(_1,_2,d), -product(_0,_1,_1)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_0,_1,d)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_0,add(_1,c),_3), -product(_0,_3,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(d,add(_1,_0),d), -product(d,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(add(_3,c),_3,_4), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_4,d), -product(add(_3,c),_2,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,c,_0), -product(c,_0,d), -product(c,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_4,d), -product(_5,_6,_4), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_1,_1), -product(d,_0,_1), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,additive_identity), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_2,d), -product(_1,_0,add(_3,additive_identity))]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_1), -product(c,_1,d), -product(additive_identity,_2,_0), -product(_1,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(_0,_1,add(c,d)), -product(d,_0,_2), -product(_2,_1,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,_0), -product(_2,_1,d), -product(_0,_0,add(_0,_1)), -product(add(_0,_1),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_1,d), -product(_3,_4,add(c,c)), -product(_2,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_1,d), -product(d,_0,d), -product(d,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_0,add(_4,_1),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(add(_4,_1),add(_4,_1),_0), -product(add(_4,_1),_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,d), -product(c,c,c), -product(_2,_3,add(d,_1)), -product(d,_3,additive_identity)]
[-product(_0,_0,_1), -product(_0,_0,_2), -product(_2,_0,c), -product(_1,_0,d), -product(_0,_3,add(_2,_1)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(d,d,additive_identity), -product(d,d,d), -product(d,c,d)]
[-product(add(c,c),add(c,c),c), -product(d,add(c,c),add(c,c)), -product(d,add(c,c),d), -product(d,d,_0), -product(_0,add(c,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,d,d), -product(_2,_2,_0), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,c,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_2,additive_identity), -product(c,_2,_1), -product(_1,_2,d), -product(c,c,_2)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_0,c,_4), -product(_4,_0,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_1,_3,add(_2,d)), -product(_0,_3,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(additive_identity,_0,d), -product(_0,additive_identity,additive_identity), -product(_2,additive_identity,_1), -product(_0,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_2,_1), -product(_3,_1,d), -product(_4,_2,additive_identity), -product(d,_4,d), -product(_5,_0,_2)]
[-product(_0,d,c), -product(_0,_0,additive_identity), -product(additive_identity,d,d), -product(_1,_0,c), -product(_0,_1,_0)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(_1,_2,add(_0,d)), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,d,d), -product(_2,_2,_0), -product(add(d,_1),add(d,_1),_0), -product(add(d,_1),_0,additive_identity)]
[-product(add(_0,_1),_2,_1), -product(add(_0,_1),add(_0,_1),_0), -product(_0,_2,c), -product(_0,add(_0,_1),d), -product(_3,add(_0,_1),add(_0,_1)), -product(_3,_0,additive_identity)]
[-product(_0,d,c), -product(_1,additive_identity,_2), -product(d,_1,_0), -product(d,_2,d), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,_2,c), -product(d,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_1,c), -product(add(_2,_1),_3,_2), -product(_0,add(_2,_1),_4), -product(_4,_3,d), -product(_5,_0,_0), -product(_5,_4,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_0,_1), -product(d,_0,d), -product(_2,d,_1), -product(d,_2,d)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_0,add(_0,c),add(_0,c)), -product(_0,_0,d), -product(_0,add(_0,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(c,_0,_1)]
[-product(_0,_1,_2), -product(_0,_0,d), -product(d,_1,c), -product(_1,_3,add(_0,_2)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(additive_identity,_2,d), -product(c,additive_identity,additive_identity), -product(_2,additive_identity,c), -product(c,_2,c)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,_2), -product(_2,_0,d), -product(c,add(_1,_1),additive_identity)]
[-product(add(_0,d),add(_0,d),d), -product(d,add(_0,d),c), -product(_1,add(_0,d),_0), -product(add(_0,d),_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,_2,d)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,_0,_1), -product(d,d,_2), -product(_2,_0,c), -product(_2,d,d), -product(d,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(c,c,_2), -product(_2,_0,additive_identity)]
[-product(_0,c,d), -product(_0,_0,additive_identity), -product(additive_identity,c,c), -product(_1,d,_0), -product(_0,_1,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(additive_identity,_0,d), -product(c,additive_identity,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_1,_2), -product(_2,additive_identity,d), -product(_3,_0,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(add(_0,_0),add(_0,_0),additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(d,d,c), -product(d,c,additive_identity), -product(c,c,d), -product(additive_identity,c,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,c,_2), -product(c,_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_0,_2), -product(_2,additive_identity,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(add(_0,additive_identity),_0,_1), -product(_2,add(_0,additive_identity),c), -product(_2,_1,d), -product(c,_2,c)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(c,_0,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(c,_0,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(d,_1),_2,d), -product(_0,add(d,_1),add(d,_1)), -product(_3,_0,_0), -product(_3,add(d,_1),additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_0,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,_2,_2), -product(_6,add(_0,c),additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,c,d), -product(c,_2,add(_0,_1)), -product(d,_2,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_3,_4), -product(d,_2,_5), -product(_5,_3,d), -product(_3,add(_4,c),_6), -product(_5,_6,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(_0,_0,additive_identity), -product(d,_0,d), -product(d,c,_1), -product(_1,d,additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(c,add(c,_0),c), -product(c,c,_1), -product(_1,add(c,_0),d), -product(_2,_1,c), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,additive_identity), -product(_3,_1,_0), -product(_3,additive_identity,d), -product(_4,_2,_2), -product(_0,_4,_1)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,d), -product(c,c,d), -product(d,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_0,_0,_2), -product(_2,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_2), -product(d,_0,d), -product(d,_2,d), -product(_2,_1,d)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,_4), -product(_1,_2,_1), -product(_1,_4,d), -product(_2,add(_3,c),additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,c,_1), -product(d,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,c), -product(c,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(add(_0,d),add(_0,d),c), -product(add(_0,d),c,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_1,_0), -product(d,_0,d), -product(_0,additive_identity,_1)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,additive_identity,d), -product(_1,c,_2), -product(_0,_2,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_1,d), -product(c,_0,c)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(_1,add(d,_0),_2), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,_0,c), -product(c,_1,d), -product(_0,c,_1), -product(_2,_0,_1)]
[-product(_0,_0,d), -product(d,_0,_1), -product(_1,_0,c), -product(d,d,_0), -product(_0,add(_1,d),_2), -product(_0,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_3,c), -product(_1,_2,_1), -product(_1,_3,d), -product(_2,additive_identity,c)]
[-product(add(c,d),add(c,d),d), -product(d,add(c,d),c), -product(add(c,d),d,add(c,d)), -product(_0,d,add(c,d)), -product(_0,c,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,d), -product(_0,_1,additive_identity), -product(additive_identity,_1,d)]
[-product(_0,d,c), -product(_1,_0,_0), -product(_2,d,additive_identity), -product(_3,_2,_1), -product(_3,additive_identity,d), -product(_1,_0,_2), -product(_3,_4,c)]
[-product(_0,_1,c), -product(c,_0,_0), -product(c,c,_2), -product(_2,c,d), -product(_1,add(_2,c),_3), -product(_0,_3,additive_identity)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(add(_0,c),add(_0,c),additive_identity), -product(additive_identity,_0,d)]
[-product(_0,_1,additive_identity), -product(_0,_0,d), -product(d,_1,c), -product(_0,_0,_0), -product(_0,_1,add(d,additive_identity))]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_2), -product(_2,_0,d), -product(_0,c,_1)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_2,_0,add(additive_identity,additive_identity)), -product(_0,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_2,_2,c), -product(c,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_0,_2), -product(additive_identity,_1,_0), -product(additive_identity,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,d,additive_identity), -product(_1,c,c), -product(_1,additive_identity,d), -product(_0,d,c)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_5,_2,_6), -product(_7,_5,_0), -product(_7,_6,additive_identity)]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(_2,additive_identity,c), -product(_2,_1,d), -product(c,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(d,d,d), -product(d,d,_0), -product(_0,d,_0)]
[-product(_0,d,c), -product(c,_0,_0), -product(_0,d,additive_identity), -product(_1,_0,c), -product(_1,additive_identity,d)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,d,_2), -product(_1,_1,_1), -product(d,_3,add(_2,c)), -product(_2,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,_3,d), -product(_1,_2,_1), -product(_1,add(_3,c),additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,d,_0), -product(d,_1,add(c,d)), -product(_0,_1,additive_identity)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(_2,add(_1,_0),_1), -product(_0,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,c,d), -product(d,c,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_1,_1,_1), -product(_2,_0,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(add(_0,_1),_0,additive_identity), -product(_2,add(_0,_1),_0), -product(_2,additive_identity,d), -product(add(_0,_1),add(_0,_1),_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_3,additive_identity,c), -product(d,_3,d)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,_2), -product(c,_1,d), -product(_1,add(_2,c),_3), -product(c,_3,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_0,_1,add(d,c)), -product(c,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(_0,c,_0), -product(_0,_0,c), -product(c,c,d), -product(_0,_0,_0)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(d,additive_identity,_0)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,additive_identity), -product(d,_2,d), -product(_2,_3,c), -product(d,_3,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,c,_1), -product(_1,c,d), -product(c,additive_identity,_1), -product(c,c,c)]
[-product(_0,_1,c), -product(_2,d,additive_identity), -product(_3,_2,_0), -product(_3,additive_identity,d), -product(_4,_1,d), -product(_2,_4,_0), -product(_3,_5,_1)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(_3,add(_2,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_1,_3,_1), -product(c,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_5,add(_2,additive_identity),_0), -product(_0,_5,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,c,c), -product(_0,c,d), -product(c,add(_0,additive_identity),_0)]
[-product(_0,additive_identity,c), -product(_1,_0,_0), -product(additive_identity,_2,d), -product(_1,additive_identity,additive_identity), -product(_1,_0,_1), -product(_3,_2,c)]
[-product(_0,c,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,_0,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,add(_1,c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_1,_2,_3), -product(_3,_0,d), -product(_2,c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_1,d), -product(_3,add(c,_1),_4), -product(_5,_3,_0), -product(_5,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,add(_2,_1)), -product(_3,_0,_0), -product(_3,add(_2,_1),d), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_2,add(_1,_1),_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,additive_identity), -product(_0,_1,d), -product(_2,add(additive_identity,_0),_1), -product(c,_2,c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_inverse(c),_4), -product(_5,_3,_2), -product(_5,_4,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_0), -product(_0,_3,d), -product(_1,_2,_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_0,d), -product(_1,c,d), -product(c,add(d,_0),_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_inverse(c),c), -product(_1,_0,_0), -product(_2,_0,_1), -product(_2,c,d)]
[-product(add(_0,additive_identity),_1,additive_identity), -product(_2,add(_0,additive_identity),_1), -product(_1,_1,c), -product(_2,_0,d), -product(add(_0,additive_identity),_2,_2)]
[-product(_0,_1,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,_2,d), -product(_0,_1,_2)]
[-product(_0,additive_identity,c), -product(d,d,_0), -product(d,_0,d), -product(_0,d,_1), -product(_1,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,_2), -product(_0,_1,c), -product(_0,_2,d), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,_2), -product(_0,_2,d), -product(_3,add(_1,c),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_0,add(_3,additive_identity)), -product(_0,_5,_0)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,_1,_0), -product(_0,_0,_0), -product(_0,_1,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,_3), -product(c,_3,d), -product(add(_2,_1),add(_2,_1),c), -product(add(_2,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(_3,c,c), -product(_3,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_0,d), -product(d,_0,c), -product(_0,_0,add(_0,d)), -product(add(_0,d),_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,additive_identity,_4), -product(_5,_3,_2), -product(_5,_4,d), -product(_6,c,_7), -product(_8,_6,_2), -product(_8,_7,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,additive_identity,_0), -product(_0,_1,c), -product(_0,_2,d), -product(c,_2,additive_identity)]
[-product(d,add(_0,c),c), -product(d,d,d), -product(d,d,_0), -product(_1,d,d), -product(_1,c,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_1,_0), -product(_2,_3,_0)]
[-product(c,additive_identity,c), -product(_0,_0,c), -product(_0,c,d), -product(additive_identity,_0,_1), -product(c,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,c,d), -product(_0,_1,add(_0,c)), -product(c,_1,additive_identity)]
[-product(d,additive_identity,c), -product(d,d,_0), -product(_0,d,d), -product(d,_0,_1), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_0,d), -product(_0,_2,add(_1,_1)), -product(d,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,_3), -product(_1,_2,d), -product(add(_3,_1),add(_3,_1),_0), -product(add(_3,_1),_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,_4,_1), -product(d,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_2,_0,_4), -product(_4,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_3,_1,add(_2,additive_identity)), -product(_0,_3,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(c,c,_1), -product(c,_1,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_3), -product(_3,_1,c), -product(_3,_4,d), -product(_1,_5,add(_4,_2)), -product(c,_5,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,_1,additive_identity), -product(_1,additive_identity,d)]
[-product(additive_identity,_0,c), -product(_1,_2,_3), -product(additive_identity,_1,_4), -product(_4,_2,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_0,c), -product(_1,additive_identity,d), -product(_2,add(_0,additive_identity),_0), -product(_0,_2,c)]
[-product(_0,_1,additive_identity), -product(_2,_0,_2), -product(_2,_1,c), -product(_2,_2,d), -product(d,_0,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_0), -product(_0,_0,d), -product(c,c,_1), -product(_1,additive_identity,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,d), -product(_2,_0,_0), -product(_2,d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(c,c,c), -product(c,_1,d), -product(c,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,c), -product(c,c,_1), -product(_1,c,d), -product(c,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,_0), -product(_1,c,d), -product(_0,additive_identity,_0), -product(_0,_0,_0)]
[-product(d,d,c), -product(d,d,d), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(_0,add(d,c),_1), -product(c,_1,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(_1,d,c), -product(d,_1,d)]
[-product(add(d,d),add(d,d),d), -product(c,add(d,d),c), -product(c,add(d,d),add(d,d)), -product(c,d,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_1,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,add(c,c)), -product(add(c,c),_1,d), -product(_0,_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,_1), -product(_1,_0,d), -product(additive_identity,add(c,c),additive_identity)]
[-product(c,_0,_0), -product(_1,c,additive_identity), -product(additive_identity,_0,c), -product(_1,additive_identity,d), -product(_1,additive_identity,_1)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(_0,d,d), -product(_0,_0,c), -product(add(d,c),c,additive_identity)]
[-product(_0,_0,_0), -product(_0,_0,d), -product(d,_0,c), -product(add(d,_0),add(d,_0),_0), -product(add(d,_0),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_1,_2,_5), -product(_4,_5,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_0,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,d), -product(c,add(d,_0),_2), -product(c,_2,additive_identity)]
[-product(d,d,c), -product(d,d,d), -product(d,_0,add(c,c)), -product(c,_0,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,additive_identity,_0), -product(_0,d,_0), -product(_1,_0,_0), -product(_1,_0,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(_2,_0,d), -product(_3,d,_1), -product(d,_3,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,_1,_2), -product(d,_1,d), -product(_1,add(_2,c),additive_identity)]
[-product(_0,c,c), -product(additive_identity,c,d), -product(_0,additive_identity,additive_identity), -product(_1,additive_identity,c), -product(_0,_1,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,c), -product(_3,_2,c), -product(_3,c,d), -product(additive_identity,_1,_4), -product(_2,_4,additive_identity)]
[-product(_0,_1,c), -product(_2,add(_3,_1),_3), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,add(c,d),additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,d,additive_identity), -product(_2,c,c), -product(_2,additive_identity,d), -product(_0,_1,d), -product(_2,_3,_1)]
[-product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(_1,_2,_0), -product(d,_2,additive_identity)]
[-product(_0,add(_0,c),c), -product(_0,_0,_0), -product(_1,_0,_0), -product(_1,_0,d), -product(_1,c,additive_identity)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,additive_identity,d), -product(c,_1,_1), -product(_0,c,c)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_1,_2,_0), -product(add(_0,_1),_1,add(_0,_1)), -product(add(_0,_1),_2,d), -product(add(_0,_1),c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_0,_2,_0), -product(_0,add(_3,_1),d), -product(_0,_3,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,d,_0), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,d,_1), -product(d,_0,_0), -product(d,_1,d), -product(_1,_1,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(c,_1,d), -product(_1,c,_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(_1,c,additive_identity), -product(_0,_1,c)]
[-product(add(_0,additive_identity),d,additive_identity), -product(add(_0,additive_identity),add(_0,additive_identity),_0), -product(_0,d,c), -product(_0,add(_0,additive_identity),d), -product(add(_0,additive_identity),_0,add(_0,additive_identity))]
[-product(c,c,additive_identity), -product(additive_identity,c,c), -product(_0,_0,c), -product(_0,c,d), -product(c,_0,_1), -product(additive_identity,_1,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,additive_identity,c), -product(_2,c,d), -product(d,c,_3), -product(_3,additive_identity,additive_identity)]
[-product(c,d,additive_identity), -product(c,c,d), -product(d,d,c), -product(additive_identity,d,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(_2,_2,_3), -product(d,_2,d), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_0,_1), -product(_1,_0,d), -product(_0,_2,_1), -product(additive_identity,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_1), -product(_2,additive_identity,d), -product(_3,c,additive_identity), -product(_1,_3,_1)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,add(_0,_0),add(_0,_0)), -product(_1,_0,additive_identity)]
[-product(_0,_1,c), -product(d,_0,_0), -product(c,c,additive_identity), -product(d,c,d), -product(d,additive_identity,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,c,d)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_0,_0,_0), -product(additive_identity,_0,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,_2,additive_identity), -product(c,c,c), -product(c,_2,d), -product(c,_1,_2)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(c,add(_1,additive_identity),c)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,c), -product(c,_3,_1)]
[-product(d,d,_0), -product(c,d,c), -product(_1,d,additive_identity), -product(d,_1,c), -product(d,additive_identity,d), -product(c,d,_1)]
[-product(_0,_0,d), -product(_1,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_0), -product(_2,_0,add(additive_identity,d)), -product(_1,_2,_1)]
[-product(d,_0,c), -product(_1,_2,_3), -product(_4,_1,d), -product(_4,_3,d), -product(_3,add(_2,_0),_5), -product(_4,_5,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,add(_1,_0)), -product(c,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,_2,_0), -product(_2,_0,d), -product(_2,add(_2,_1),_3), -product(_2,_3,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_0,_3,add(_2,d)), -product(d,_3,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(_2,_3,_0), -product(add(_0,_1),_2,_4), -product(_4,_3,d), -product(_5,add(_0,_1),add(_0,_1)), -product(_5,_1,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(_0,c,_4), -product(_0,_4,additive_identity)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,_1,c), -product(c,c,_2), -product(_2,_1,d), -product(_1,additive_identity,c)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,_3), -product(_3,_2,d), -product(_0,_3,_4), -product(_4,_2,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,additive_identity), -product(c,_1,_3), -product(_3,_2,d), -product(c,_0,_4), -product(_0,_4,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_2,_0), -product(_0,_1,_0), -product(_2,add(_2,d),_3), -product(_1,_3,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_1,_1,additive_identity), -product(c,_1,d), -product(_0,_0,_1)]
[-product(c,c,_0), -product(_0,c,c), -product(c,add(_1,_0),_1), -product(c,c,_2), -product(_2,add(_1,_0),d), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,additive_identity,_1), -product(c,_2,c), -product(c,_1,d), -product(c,additive_identity,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_1), -product(c,_1,d), -product(_0,_0,c), -product(_0,c,additive_identity)]
[-product(d,additive_identity,c), -product(_0,_0,_1), -product(d,_0,d), -product(_0,_1,_2), -product(d,_2,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_2), -product(_2,_1,c), -product(_2,_0,d), -product(_0,_0,_3), -product(_3,_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_0,_0,_1), -product(_1,_1,c), -product(_0,c,d), -product(additive_identity,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(d,c,d), -product(_1,d,additive_identity), -product(additive_identity,c,d), -product(_1,additive_identity,_1)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,d,_1)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_2), -product(_2,_0,d), -product(add(c,_1),add(c,_1),_0), -product(add(c,_1),_0,additive_identity)]
[-product(c,_0,c), -product(_0,add(_0,_0),_0), -product(c,_0,additive_identity), -product(additive_identity,add(_0,_0),d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_3,add(_0,_1),_4), -product(_5,_3,c), -product(_5,_4,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_0,_1,_0), -product(_2,_0,_0), -product(_2,_0,d), -product(_1,_0,_1)]
[-product(additive_identity,_0,_1), -product(_2,additive_identity,d), -product(d,_0,c), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_5,_6,_1), -product(_0,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,c,add(additive_identity,_1))]
[-product(c,c,_0), -product(_0,c,c), -product(c,additive_identity,_1), -product(_0,_1,d), -product(c,c,_2), -product(_2,c,additive_identity)]
[-product(d,add(_0,c),c), -product(_1,d,d), -product(d,d,_0), -product(_1,d,_1), -product(_1,c,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_1,add(d,c),additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,_1,_2), -product(_0,_1,d), -product(c,_3,add(_2,_0)), -product(_0,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(d,d,additive_identity), -product(additive_identity,d,c), -product(_0,_1,_0), -product(d,_0,d), -product(_0,_1,d)]
[-product(additive_identity,additive_identity,d), -product(d,additive_identity,c)]
[-product(additive_identity,additive_identity,d), -product(c,additive_identity,c), -product(_0,additive_identity,_1), -product(c,_0,additive_identity), -product(_2,_0,d), -product(c,_2,c), -product(_0,_3,d)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(_2,_3,_4), -product(additive_identity,_2,_5), -product(_5,_3,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(_3,_4,_1), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(_0,c,c), -product(c,_0,_0), -product(_0,_0,d), -product(_1,add(_0,c),_2), -product(_3,_1,c), -product(_3,_2,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,additive_identity), -product(additive_identity,_1,d), -product(c,_1,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_2,c,c), -product(_2,_1,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_2,c,additive_identity), -product(_1,_2,_3), -product(_3,c,d), -product(_2,_0,_1)]
[-product(_0,c,c), -product(_0,_0,additive_identity), -product(_0,_0,_1), -product(_1,_0,d), -product(additive_identity,c,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(_0,_0,d), -product(_1,_2,_0)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,additive_identity,d), -product(d,_0,_0), -product(d,_0,d)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_2,_6,add(_4,_1)), -product(_5,_6,additive_identity)]
[-product(c,_0,c), -product(_1,d,d), -product(_1,_1,c), -product(_0,add(d,_0),_2), -product(c,_2,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(d,_0,additive_identity), -product(_0,d,_0)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),c), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(c,_0,c), -product(_0,additive_identity,_0), -product(c,_0,d), -product(_0,_1,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_0,_0), -product(_0,d,_2), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_3,_6,c), -product(_5,_6,additive_identity)]
[-product(_0,c,c), -product(_1,_0,_0), -product(_0,additive_identity,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_3,c,additive_identity)]
[-product(_0,_0,c), -product(_1,_0,_0), -product(d,_0,additive_identity), -product(_1,d,_1), -product(_1,_0,d)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(c,_1,_4), -product(_4,_2,d), -product(_5,_6,_3), -product(c,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,d,d), -product(_1,_1,_0), -product(_1,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_0,_1,additive_identity), -product(c,_1,d), -product(c,c,_2), -product(_2,_1,additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,_1,d), -product(d,_0,d), -product(d,_1,d), -product(_1,additive_identity,d)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,add(_1,additive_identity),_1), -product(_0,_2,_1)]
[-product(_0,_0,additive_identity), -product(_1,_0,_2), -product(_2,_0,c), -product(_1,_2,d), -product(_1,_1,_0)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(_0,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(additive_identity,_0,_0), -product(additive_identity,_0,_2), -product(_2,_1,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_1,_1,c), -product(_1,c,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,_2), -product(c,_1,_0), -product(_0,_3,add(_2,d)), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_0,c), -product(_2,_1,d), -product(_3,_4,add(_0,_1)), -product(c,_3,_5), -product(_5,_4,additive_identity)]
[-product(add(_0,_1),_1,c), -product(_0,_0,additive_identity), -product(_2,_0,add(_0,_1)), -product(_2,additive_identity,d), -product(add(_0,_1),_2,_0)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_1,additive_identity), -product(_2,_0,c), -product(_2,additive_identity,d), -product(c,_1,add(_1,_0))]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,_1),additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,d), -product(d,_0,d), -product(additive_identity,d,d)]
[-product(add(_0,_1),add(_0,_1),_1), -product(_1,add(_0,_1),c), -product(add(_0,_1),add(_0,_1),_0), -product(_0,add(_0,_1),d), -product(_2,_0,add(_0,_1)), -product(_2,d,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_2,_1,_3), -product(_4,_2,_0), -product(_4,_3,additive_identity)]
[-product(_0,_0,c), -product(d,c,c), -product(_0,d,additive_identity), -product(additive_identity,c,d), -product(_0,additive_identity,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,_3,_2), -product(d,_3,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_0,_0,_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_3), -product(_0,_2,_0), -product(_0,_3,d), -product(_3,_4,_1), -product(d,_4,additive_identity)]
[-product(d,d,c), -product(additive_identity,_0,additive_identity), -product(_1,additive_identity,d), -product(_2,_0,_0), -product(additive_identity,_2,d), -product(_3,_2,_0)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,c,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,c,c), -product(_1,_3,c)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_0,_0), -product(_3,c,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,_0), -product(_8,_7,additive_identity)]
[-product(additive_identity,additive_identity,c), -product(d,additive_identity,additive_identity), -product(_0,_0,_1), -product(d,_0,d), -product(_2,additive_identity,_1), -product(d,_2,d)]
[-product(_0,c,c), -product(d,_0,_0), -product(_1,_1,additive_identity), -product(d,_1,d), -product(_2,_0,d), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(_1,_2,d), -product(d,_1,_1), -product(_2,add(d,_0),_3), -product(_1,_3,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(_2,d,_0), -product(_1,_2,c)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(_3,_0,d), -product(c,_3,_0)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,_1,_3), -product(_3,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_0,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(add(_0,c),add(_0,c),_2), -product(add(_0,c),_2,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),add(_1,_0),_1), -product(d,add(_1,_0),d), -product(_2,d,d), -product(_2,d,additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,_0,additive_identity), -product(c,_1,_0), -product(d,d,c), -product(d,c,additive_identity)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,_2), -product(_0,_1,_0), -product(_3,_4,add(_2,d)), -product(_0,_3,_5), -product(_5,_4,additive_identity)]
[-product(additive_inverse(_0),additive_inverse(_0),_0), -product(_0,additive_inverse(_0),c), -product(_1,additive_inverse(_0),additive_inverse(_0)), -product(_1,_0,d)]
[-product(d,d,c), -product(c,d,c), -product(_0,c,d), -product(_1,add(d,c),_2), -product(_3,_1,d), -product(_3,_2,additive_identity)]
[-product(c,_0,c), -product(_0,_1,_2), -product(c,_2,d), -product(c,add(_1,_0),additive_identity)]
[-product(add(c,_0),add(c,_0),_0), -product(_0,add(c,_0),c), -product(_1,c,additive_identity), -product(_2,_1,add(c,_0)), -product(_2,additive_identity,d), -product(_1,_0,add(c,_0))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,additive_identity,_2), -product(_0,_2,d), -product(_0,c,_3), -product(_0,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_3), -product(_4,_1,c), -product(_4,_3,d), -product(_4,_3,additive_identity)]
[-product(add(c,c),_0,c), -product(add(c,c),add(c,c),add(c,c)), -product(c,c,additive_identity), -product(_0,c,add(c,c)), -product(_0,additive_identity,d)]
[-product(_0,_0,_1), -product(c,_0,c), -product(d,_2,additive_identity), -product(c,d,c), -product(c,additive_identity,d), -product(additive_identity,_2,add(_2,_1))]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,_0,add(_3,_1)), -product(add(_3,_1),_0,additive_identity)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),add(_0,c),d), -product(_0,add(_0,c),additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_1,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,add(_1,c),_1), -product(_0,_2,c)]
[-product(_0,additive_identity,c), -product(additive_identity,additive_identity,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(_4,_5,c), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(d,_0,c), -product(_0,d,additive_identity), -product(_1,_0,d), -product(_1,additive_identity,d), -product(d,d,_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_identity), -product(additive_identity,c,d), -product(_0,add(additive_identity,_1),c)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,add(_5,c)), -product(add(_5,c),_4,d), -product(_2,_2,_6), -product(_6,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,d), -product(_0,_2,_1), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(c,_2,c), -product(_1,_2,additive_identity)]
[-product(add(c,c),c,c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_0), -product(_0,c,d), -product(add(c,c),add(c,c),additive_identity)]
[-product(_0,_0,d), -product(c,_0,c), -product(_1,d,additive_identity), -product(_2,_1,c), -product(_2,additive_identity,d), -product(_3,d,d), -product(c,_3,_1)]
[-product(c,c,_0), -product(c,c,c), -product(c,additive_identity,_0), -product(c,_0,d), -product(_0,additive_identity,additive_identity)]
[-product(_0,add(additive_identity,c),c), -product(_1,_0,_0), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,_0,_1)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,_2,_1), -product(_0,_3,_1)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,c,additive_identity), -product(_0,c,add(additive_identity,c)), -product(add(additive_identity,c),c,d)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,additive_identity), -product(_0,_0,_0), -product(_0,additive_identity,d), -product(_0,_2,add(_2,_1))]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_0,add(_3,c),_6), -product(_0,_6,additive_identity)]
[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_2,_3,_1), -product(_0,_2,_4), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_inverse(c)), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d)]
[-product(_0,_1,additive_inverse(_1)), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_3,additive_identity), -product(_2,_2,_2), -product(_2,_3,d), -product(_2,c,_3)]
[-product(_0,_1,_2), -product(c,_0,d), -product(d,_1,c), -product(_1,add(_0,_2),_3), -product(d,_3,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,_5), -product(_2,_3,_6), -product(_6,_4,d), -product(_2,add(_5,c),additive_identity)]
[-product(d,c,c), -product(c,_0,additive_identity), -product(c,_0,d), -product(_0,add(additive_identity,c),_0)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_0,additive_identity), -product(additive_identity,_0,d), -product(_0,add(_0,c),_0)]
[-product(d,_0,additive_identity), -product(_1,d,_2), -product(_2,_0,c), -product(_1,_3,d), -product(_3,_0,add(_3,additive_identity))]
[-product(add(c,c),add(c,c),c), -product(add(c,c),add(c,c),add(c,c)), -product(c,add(c,c),d), -product(c,add(c,c),additive_identity)]
[-product(_0,d,c), -product(_1,_2,additive_identity), -product(_0,_1,d), -product(d,_2,d), -product(c,_2,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(c,add(d,_0),d), -product(_1,c,c), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_1,add(_2,_1),_2), -product(c,add(_2,_1),d), -product(_3,_1,_0), -product(_3,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,_4), -product(_0,_2,additive_identity), -product(additive_identity,_3,d), -product(_5,add(_4,_1),_2), -product(_0,_5,_0)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,d,_0), -product(_1,_2,_1), -product(_1,_0,d), -product(_2,additive_identity,d)]
[-product(_0,_0,d), -product(d,_0,c), -product(_1,_0,additive_identity), -product(_0,_1,_0), -product(_2,add(additive_identity,d),_0), -product(_1,_2,_0)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_0,additive_identity), -product(_0,_2,_3), -product(_3,_0,d), -product(_0,_0,_2)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_1,_0,d), -product(_1,_1,_2), -product(_1,_2,additive_identity)]
[-product(add(additive_identity,c),add(additive_identity,c),c), -product(c,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),c,additive_identity), -product(add(additive_identity,c),c,d)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_1,c,_2), -product(d,_1,d), -product(d,_2,d), -product(_2,additive_identity,c)]
[-product(add(_0,d),add(_0,d),d), -product(c,add(_0,d),c), -product(_1,add(_0,d),_0), -product(c,_1,add(_0,d)), -product(_2,add(_0,d),c), -product(_2,d,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(add(_1,_0),_1,add(_1,_0)), -product(_2,add(_1,_0),d), -product(_3,_2,d), -product(_3,d,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_0,add(_1,_1)), -product(add(_1,_1),_0,d), -product(add(_1,_1),_0,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2), -product(_3,add(d,additive_identity),_1), -product(_0,_3,_2)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_2,_1,_3), -product(_4,_2,_1), -product(_4,_3,d), -product(_0,additive_identity,_1), -product(_1,_0,_1)]
[-product(c,_0,c), -product(_1,_2,d), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_0,_1), -product(_3,_2,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,_2), -product(_3,_2,d), -product(add(_3,c),add(_3,c),_2), -product(add(_3,c),_2,additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(_0,_1,add(c,c)), -product(_0,_1,additive_identity)]
[-product(_0,_1,additive_identity), -product(_2,_0,d), -product(d,_1,c), -product(_3,_0,_1), -product(_0,_3,_2)]
[-product(_0,additive_identity,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_1,_5,_3), -product(_4,_5,additive_identity)]
[-product(_0,_1,additive_identity), -product(_1,_0,_1), -product(_1,_1,c), -product(c,_0,d), -product(_2,_1,_1), -product(_2,c,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),add(_1,c),_1), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(d,_0,c), -product(_1,d,d), -product(_2,d,additive_identity), -product(_1,_2,_1), -product(_3,d,add(additive_identity,c)), -product(_1,_3,_2)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(c,_1,_0), -product(c,c,_2), -product(_2,_1,d), -product(_1,_0,_0)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,_4), -product(_0,_3,d), -product(_5,_6,add(_4,c)), -product(_2,_5,_7), -product(_7,_6,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(d,d,c), -product(d,c,d), -product(c,d,_1), -product(_1,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,additive_identity), -product(_0,_3,d), -product(c,c,_2), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,c), -product(_2,_0,c), -product(_2,c,d), -product(_1,add(_1,additive_identity),_0)]
[-product(_0,_0,c), -product(c,_0,c), -product(c,c,_1), -product(_1,_0,d), -product(_0,add(c,c),_2), -product(_0,_2,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,additive_identity,_1), -product(_3,_2,_0), -product(_3,_1,d), -product(_2,_4,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(d,_0,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(_1,_0,_3), -product(_2,_3,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(c,additive_identity,_1), -product(_2,c,c), -product(_2,_1,d), -product(_1,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_0,_2,_0), -product(_0,_0,additive_identity), -product(additive_identity,_2,d), -product(_2,add(_0,_1),_0)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_2,add(_2,_0)), -product(add(_2,_0),_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(d,_0,c), -product(_1,_1,_2), -product(d,_1,d), -product(add(_2,_0),add(_2,_0),d), -product(add(_2,_0),d,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_1,_2), -product(c,_1,c), -product(c,_1,d), -product(d,_1,additive_identity)]
[-product(d,_0,c), -product(_0,additive_identity,_1), -product(_1,_0,d), -product(_1,_1,d), -product(_1,d,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_3,additive_identity), -product(_2,_3,add(additive_identity,c)), -product(add(additive_identity,c),_3,d), -product(_2,_2,_3)]
[-product(_0,add(_1,c),c), -product(_0,_0,_0), -product(_0,_1,d), -product(_0,c,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,d,d), -product(_3,_3,_2), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,add(additive_identity,_1),additive_identity), -product(c,c,_2), -product(_2,add(additive_identity,_1),d)]
[-product(d,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_1,add(_2,_0),_3), -product(c,_3,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_2,_3,_4), -product(c,_2,_5), -product(_5,_3,d), -product(_6,add(_4,_1),_7), -product(_8,_6,c), -product(_8,_7,additive_identity)]
[-product(_0,_1,c), -product(_2,_3,_4), -product(_5,_2,_0), -product(_5,_4,d), -product(_1,_6,add(_3,_1)), -product(c,_6,additive_identity)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_2,_0), -product(c,_2,d), -product(_3,add(_0,_1),c), -product(_3,_1,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,_3), -product(_3,_1,c), -product(_3,_0,d), -product(_0,add(_3,_2),additive_identity)]
[-product(add(_0,c),add(_0,c),c), -product(c,add(_0,c),add(_0,c)), -product(c,c,_0), -product(_0,c,d), -product(add(_0,c),c,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_2), -product(_2,_0,d), -product(add(_2,_1),add(_2,_1),_0), -product(add(_2,_1),_0,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_0,_1,_2), -product(_3,_0,_1), -product(_3,_2,d), -product(_4,additive_identity,_1), -product(_1,_4,_1)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(d,d,_1), -product(_1,additive_identity,d), -product(additive_identity,c,_2), -product(_1,_2,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(c,c,additive_inverse(_1)), -product(additive_inverse(_1),c,d)]
[-product(_0,add(d,_1),_1), -product(_0,_0,d), -product(d,add(d,_1),c), -product(_0,_0,_0), -product(_0,_1,additive_identity)]
[-product(_0,_1,c), -product(_2,additive_identity,_3), -product(_4,_2,_0), -product(_4,_3,d), -product(_1,_1,_0), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,_2,_0), -product(c,_1,_3), -product(_3,_2,d), -product(c,additive_identity,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_2,d), -product(_4,_5,add(_3,c)), -product(_2,_4,_6), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_3,_4,additive_identity), -product(_2,_3,_5), -product(_5,_4,d), -product(_6,_7,c), -product(_2,_6,_8), -product(_8,_7,additive_identity)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_0), -product(additive_identity,_0,d), -product(_1,c,c), -product(_1,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_2,d), -product(_2,_3,add(_2,_1)), -product(d,_3,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_1,_0), -product(_2,_1,_0), -product(_2,_0,d), -product(_1,_0,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,c), -product(_2,additive_identity,additive_identity)]
[-product(_0,additive_identity,d), -product(_0,_0,_1), -product(_1,additive_identity,c), -product(additive_identity,_2,d), -product(d,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,d,d), -product(add(d,c),add(d,c),c), -product(add(d,c),c,additive_identity)]
[-product(_0,add(_1,_2),_2), -product(add(_1,_2),_0,add(_1,_2)), -product(add(_1,_2),add(_1,_2),c), -product(add(_1,_2),_1,d), -product(c,_0,additive_identity)]
[-product(c,c,d), -product(d,c,c), -product(_0,additive_identity,c), -product(c,_0,c), -product(c,d,_1), -product(d,_1,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,_0,additive_identity)]
[-product(_0,_1,d), -product(_0,_0,_0), -product(_0,_1,c), -product(_1,_2,add(_1,d)), -product(c,_2,additive_identity)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_4,_1,_0), -product(_4,_3,d), -product(_2,_2,_0), -product(_2,_0,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(add(_1,c),_1,d), -product(d,add(_1,c),d), -product(d,d,additive_identity)]
[-product(additive_identity,additive_identity,_0), -product(c,additive_identity,c), -product(_1,c,c), -product(_1,c,d), -product(_2,_0,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_1,c), -product(_1,_2,additive_identity), -product(c,_2,d), -product(_3,add(additive_identity,_1),_2), -product(_1,_3,_0)]
[-product(c,c,additive_identity), -product(c,c,c), -product(c,_0,_1), -product(c,_0,d), -product(_0,_2,_1), -product(_1,_2,additive_identity)]
[-product(add(_0,_0),add(_0,_0),_0), -product(_0,add(_0,_0),c), -product(_0,add(_0,_0),d), -product(_1,_0,add(_0,_0)), -product(_1,c,additive_identity)]
[-product(d,d,_0), -product(_0,d,c), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,d,_3), -product(_3,d,additive_identity)]
[-product(d,d,c), -product(c,d,c), -product(d,c,d), -product(c,_0,add(d,c)), -product(d,_0,additive_identity)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,additive_identity,d), -product(_2,_2,_3), -product(_2,_3,additive_identity)]
[-product(c,c,d), -product(c,c,c), -product(c,_0,c), -product(c,_1,add(_0,d)), -product(d,_1,additive_identity)]
[-product(d,d,c), -product(_0,additive_identity,_0), -product(_1,_0,d), -product(d,_1,_2), -product(_2,_0,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_1,additive_identity,c), -product(_0,_1,_0), -product(_0,c,d), -product(d,_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_2,_3,add(_3,_1)), -product(_2,_2,_0), -product(_2,add(_3,_1),d), -product(_2,d,additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(c,c,additive_identity)]
[-product(_0,c,d), -product(_0,_0,additive_identity), -product(additive_identity,c,c), -product(_1,_0,d), -product(_0,_1,_0)]
[-product(add(_0,_1),add(_0,_1),_1), -product(c,add(_0,_1),c), -product(add(_0,_1),_0,_2), -product(c,_2,d), -product(_3,add(_0,_1),c), -product(_3,_1,additive_identity)]
[-product(c,c,_0), -product(_0,c,c), -product(_1,_2,d), -product(c,_1,_1), -product(c,add(d,_0),_3), -product(_0,_3,additive_identity)]
[-product(c,_0,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_0,additive_identity,_0)]
[-product(_0,_1,_2), -product(_3,_0,d), -product(d,_1,c), -product(_3,_3,_3), -product(_0,_4,add(d,_2)), -product(d,_4,additive_identity)]
[-product(d,d,d), -product(d,d,_0), -product(_0,d,c), -product(d,_1,add(_0,d)), -product(_0,_1,additive_identity)]
[-product(c,_0,additive_identity), -product(c,c,_1), -product(_1,_0,c), -product(_1,c,d), -product(_0,_1,_2), -product(_1,_2,additive_identity)]
[-product(_0,additive_identity,c), -product(_1,_2,c), -product(_0,_1,additive_identity), -product(additive_identity,_2,d)]
[-product(_0,_1,additive_inverse(d)), -product(_2,_0,d), -product(d,_1,c), -product(_2,_2,_2)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,additive_identity,d), -product(_3,_2,add(_2,_1)), -product(c,_3,_0)]
[-product(_0,_1,c), -product(additive_identity,_2,d), -product(_0,additive_identity,additive_identity), -product(_3,additive_identity,add(d,_1)), -product(_0,_3,_0)]
[-product(_0,_1,_2), -product(_3,_0,_4), -product(_4,_1,c), -product(_3,_5,d), -product(_3,_3,add(_5,_2)), -product(add(_5,_2),_3,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,_1,additive_identity), -product(_0,additive_identity,d), -product(_2,_1,add(_1,c)), -product(c,_2,_0)]
[-product(add(d,c),add(d,c),c), -product(c,add(d,c),c), -product(add(d,c),d,d), -product(c,c,additive_identity)]
[-product(d,d,additive_identity), -product(c,d,c), -product(c,_0,d), -product(d,c,c)]
[-product(c,c,d), -product(c,c,c), -product(c,c,_0), -product(c,_1,add(_0,d)), -product(_0,_1,additive_identity)]
[-product(_0,_0,_1), -product(c,_0,c), -product(_0,_2,additive_identity), -product(c,_2,d), -product(_3,_1,_2), -product(_0,_3,c)]
[-product(_0,_0,additive_identity), -product(additive_identity,_0,c), -product(_1,_2,_3), -product(_0,_1,_4), -product(_4,_2,d), -product(_5,_0,_3), -product(_0,_5,_0)]
[-product(_0,c,c), -product(_1,c,d), -product(_0,_1,additive_identity), -product(additive_identity,c,d), -product(c,_0,_1), -product(_0,c,_0)]
[-product(c,_0,c), -product(_1,_2,additive_identity), -product(c,_1,additive_identity), -product(additive_identity,_2,d), -product(_0,_1,_0)]
[-product(additive_identity,d,c), -product(d,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_0,additive_identity,d), -product(_0,_1,c)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(_0,_2,additive_identity), -product(_0,additive_identity,d), -product(_0,_2,add(_2,c))]
[-product(d,d,_0), -product(_0,d,c), -product(_1,_1,additive_identity), -product(d,_1,d), -product(d,_2,_0), -product(_0,_2,additive_identity)]
[-product(_0,_0,c), -product(c,_0,c), -product(_0,additive_identity,_1), -product(_0,_1,d), -product(_2,c,_3), -product(_4,_2,c), -product(_4,_3,additive_identity)]
[-product(_0,_0,additive_identity), -product(c,_0,c), -product(_0,_1,_2), -product(c,_1,d), -product(_3,_0,add(_2,additive_identity)), -product(c,_3,_0)]
[-product(additive_identity,additive_identity,_0), -product(_0,additive_identity,c), -product(_1,_0,additive_identity), -product(_1,c,d)]
[-product(add(_0,d),add(_0,d),d), -product(_1,add(_0,d),_0), -product(_0,add(_0,d),c), -product(_1,_1,add(_0,d)), -product(_2,add(_0,d),_1), -product(_2,d,additive_identity)]
[-product(_0,_1,_2), -product(_0,_0,additive_inverse(_2)), -product(additive_inverse(_2),_1,c), -product(additive_inverse(_2),_0,d)]
[-product(_0,_1,additive_identity), -product(_2,_0,_3), -product(_3,_1,c), -product(_2,_0,d), -product(_4,_2,_2), -product(_4,_3,additive_identity)]
[-product(add(_0,c),_1,c), -product(_2,add(_0,c),add(_0,c)), -product(_3,_4,_0), -product(_2,_3,_5), -product(_5,_4,d), -product(_2,_2,_6), -product(_6,add(_0,c),additive_identity)]
[-product(additive_identity,_0,c), -product(d,additive_identity,additive_identity), -product(_0,d,d), -product(_0,_0,d), -product(_1,d,additive_identity), -product(d,_1,d)]
[-product(add(_0,c),_1,c), -product(add(_0,c),add(_0,c),add(_0,c)), -product(_2,_0,_3), -product(_1,_2,add(_0,c)), -product(_1,_3,d), -product(c,_2,additive_identity)]
[-product(d,_0,c), -product(d,d,d), -product(_1,additive_identity,_1), -product(_2,_1,d), -product(d,c,_3), -product(d,_3,additive_identity)]
[-product(add(d,additive_identity),add(d,additive_identity),additive_identity), -product(additive_identity,add(d,additive_identity),c), -product(_0,_1,d), -product(add(d,additive_identity),_0,_0)]
[-product(_0,_1,c), -product(add(_0,c),_0,_0), -product(_2,add(_0,c),add(_0,c)), -product(_2,_0,d), -product(add(_0,c),_2,_3), -product(_3,add(_0,c),additive_identity)]
[-product(_0,_0,c), -product(_0,_0,_0), -product(c,_0,d), -product(add(_0,c),add(_0,c),_0), -product(add(_0,c),_0,additive_identity)]
[-product(_0,_0,_1), -product(_1,_0,c), -product(_0,_1,_0), -product(_0,c,d), -product(_1,_2,add(_0,_1)), -product(_0,_2,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_2,_2,_3), -product(_3,_0,d), -product(_4,add(_0,c),_5), -product(_6,_4,_2), -product(_6,_5,additive_identity)]
[-product(_0,_1,c), -product(_0,_0,_0), -product(c,_2,additive_identity), -product(_3,c,_0), -product(_3,additive_identity,d), -product(_1,_2,add(_2,c))]
[-product(c,additive_identity,c), -product(additive_identity,_0,_1), -product(c,_1,d), -product(additive_identity,_2,_0), -product(c,_2,additive_identity)]
[-product(additive_identity,_0,c), -product(_1,additive_identity,additive_identity), -product(_1,_2,_1), -product(_1,_1,_3), -product(_3,_2,d), -product(_2,additive_identity,add(_1,c))]
[-product(_0,c,c), -product(c,_1,d), -product(_0,add(d,c),additive_identity)]
[-product(_0,_1,c), -product(c,_0,_0), -product(_1,additive_identity,_2), -product(_0,_2,d), -product(_0,_1,additive_identity)]
[-product(c,c,_0), -product(c,c,c), -product(_0,_0,additive_identity), -product(c,_0,_0), -product(_0,_0,d)]
[-product(additive_identity,_0,c), -product(c,additive_identity,additive_identity), -product(c,d,c), -product(d,c,c), -product(d,c,d), -product(d,additive_identity,c)]
[-product(additive_identity,additive_identity,c), -product(_0,additive_identity,additive_identity), -product(additive_identity,d,additive_identity), -product(_1,additive_identity,_0), -product(_1,additive_identity,d), -product(additive_identity,d,_0)]
[-product(d,_0,c), -product(_1,_2,_1), -product(d,_1,d), -product(_1,_3,add(_2,_0)), -product(d,_3,additive_identity)]
[-product(_0,d,c), -product(additive_identity,_1,d), -product(_0,additive_identity,additive_identity), -product(_2,d,additive_identity), -product(_0,_2,_0)]
[-product(_0,add(_1,c),c), -product(d,_0,_0), -product(_2,_1,_2), -product(_3,_2,d), -product(_4,_0,d), -product(_4,c,additive_identity)]
[-product(_0,_1,c), -product(_1,additive_identity,_2), -product(_3,_1,_0), -product(_3,_2,d), -product(_4,_3,_0), -product(_4,_0,additive_identity)]
[-product(_0,_1,c), -product(_2,_0,_0), -product(_0,_3,d), -product(_2,_2,add(d,c)), -product(add(d,c),_2,additive_identity)]


Total execution time was 603858 ms.


Execution time was 603854 ms.

status 103
---System Timeout---
SOLAR PROBLEM
RNG005-2.C2i1_all_ld-1-4_Solar
------------------  TIME OUT --------------------
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet2
timout :600000
Time for creating graph: 0.128s
Sys -> Ag0 : {New neighbour}
Sys -> Ag1 : {New neighbour}
Ag0 <------  {New neighbour}
Sys -> Ag0 : {Start}
Sys -> Ag1 : {Start}
Sys -> Ag0 : {Launch}
Sys -> Ag1 : {Launch}
Ag1 <------  {New neighbour}
Ag1 <------  {Start}
Ag0 <------  {Start}
Ag1 -> Sys : {Started}
Ag1 <------  {Launch}
Sys <------  {Started}
Ag0 -> Sys : {Started}
Ag0 <------  {Launch}
Sys <------  {Started}
Ag0 receives [[-sum(c,d,additive_identity)]]
After pruning [[-sum(c,d,additive_identity)]]
Input Languages : {Ag1=[-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1)]}
Starting SolveToClause...
Launching solver...
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), -sum(_0,_2,_3), +sum(_1,_2,_3)]
 [-equalish(_0,_1), -sum(_2,_0,_3), +sum(_2,_1,_3)]
 [-equalish(_0,_1), -sum(_2,_3,_0), +sum(_2,_3,_1)]
 [+sum(additive_identity,_0,_0)]
 [+sum(_0,additive_identity,_0)]
 [+sum(_0,_1,add(_0,_1))]
 [+sum(additive_inverse(_0),_0,additive_identity)]
 [+sum(_0,additive_inverse(_0),additive_identity)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_2,_3,_5), +sum(_0,_4,_5)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_0,_4,_5), +sum(_2,_3,_5)]
 [-sum(_0,_1,_2), +sum(_1,_0,_2)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -product(_0,_5,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -product(_5,_1,_6), +sum(_2,_4,_6)]
 [-sum(_0,_1,_2), -sum(_0,_1,_3), +equalish(_2,_3)]
 [-sum(c,d,additive_identity)]
Top clauses:
 [-sum(c,d,additive_identity)]
Production field:
 [-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1), -product(_0,_1,_2):4]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
Sys -> Sys : {Time up!}
Sys <------  {Time up!}
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600370 ms.

Execution time was 600188 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-1
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet2
timout :600000
Time for creating graph: 0.112s
Sys -> Ag0 : {New neighbour}
Sys -> Ag1 : {New neighbour}
Ag1 <------  {New neighbour}
Ag0 <------  {New neighbour}
Sys -> Ag0 : {Start}
Sys -> Ag1 : {Start}
Sys -> Ag0 : {Launch}
Sys -> Ag1 : {Launch}
Ag1 <------  {Start}
Ag0 <------  {Start}
Ag1 -> Sys : {Started}
Ag1 <------  {Launch}
Sys <------  {Started}
Ag0 -> Sys : {Started}
Ag0 <------  {Launch}
Ag1 receives []
Sys <------  {Started}
After pruning []
Input Languages : {Ag0=[-sum(_0,_1,_2), -equalish(_0,_1), +product(_0,_1,_2), +equalish(_0,_1)]}
Ag1: updated receivedCl []
updated lstCsq []
Ag1 -> Ag0 : Send Clauses : []
Ag0 <------  Send Clauses : []
Ag0 receives [[-sum(c,d,additive_identity)]]
After pruning [[-sum(c,d,additive_identity)]]
Input Languages : {}
Starting SolveToClause...
Launching solver...
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), -sum(_0,_2,_3), +sum(_1,_2,_3)]
 [-equalish(_0,_1), -sum(_2,_0,_3), +sum(_2,_1,_3)]
 [-equalish(_0,_1), -sum(_2,_3,_0), +sum(_2,_3,_1)]
 [+sum(additive_identity,_0,_0)]
 [+sum(_0,additive_identity,_0)]
 [+sum(_0,_1,add(_0,_1))]
 [+sum(additive_inverse(_0),_0,additive_identity)]
 [+sum(_0,additive_inverse(_0),additive_identity)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_2,_3,_5), +sum(_0,_4,_5)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_0,_4,_5), +sum(_2,_3,_5)]
 [-sum(_0,_1,_2), +sum(_1,_0,_2)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -product(_0,_5,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -product(_5,_1,_6), +sum(_2,_4,_6)]
 [-sum(_0,_1,_2), -sum(_0,_1,_3), +equalish(_2,_3)]
 [-sum(c,d,additive_identity)]
Top clauses:
 [-sum(c,d,additive_identity)]
Production field:
 [-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1), -product(_0,_1,_2):4]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
Sys -> Sys : {Time up!}
Sys <------  {Time up!}
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600446 ms.

Execution time was 600279 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-1
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Async
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet2
timout :600000
Time for creating graph: 0.122s
Sys -> Ag0 : {New neighbour}
Sys -> Ag1 : {New neighbour}
Ag0 <------  {New neighbour}
Sys -> Ag0 : {Start}
Sys -> Ag1 : {Start}
Sys -> Ag0 : {Launch}
Sys -> Ag1 : {Launch}
Ag1 <------  {New neighbour}
Ag1 <------  {Start}
Ag0 <------  {Start}
Ag1 -> Sys : {Started}
Ag1 <------  {Launch}
Sys <------  {Started}
Ag0 -> Sys : {Started}
Sys <------  {Started}
Ag0 <------  {Launch}
Ag0 receives [[-sum(c,d,additive_identity)]]
After pruning [[-sum(c,d,additive_identity)]]
Input Languages : {Ag1=[-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1)]}
Starting SolveToClause...
Launching solver...
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), -sum(_0,_2,_3), +sum(_1,_2,_3)]
 [-equalish(_0,_1), -sum(_2,_0,_3), +sum(_2,_1,_3)]
 [-equalish(_0,_1), -sum(_2,_3,_0), +sum(_2,_3,_1)]
 [+sum(additive_identity,_0,_0)]
 [+sum(_0,additive_identity,_0)]
 [+sum(_0,_1,add(_0,_1))]
 [+sum(additive_inverse(_0),_0,additive_identity)]
 [+sum(_0,additive_inverse(_0),additive_identity)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_2,_3,_5), +sum(_0,_4,_5)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_0,_4,_5), +sum(_2,_3,_5)]
 [-sum(_0,_1,_2), +sum(_1,_0,_2)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -product(_0,_5,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -product(_5,_1,_6), +sum(_2,_4,_6)]
 [-sum(_0,_1,_2), -sum(_0,_1,_3), +equalish(_2,_3)]
 [-sum(c,d,additive_identity)]
Top clauses:
 [-sum(c,d,additive_identity)]
Production field:
 [-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1), -product(_0,_1,_2):4]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
Sys -> Sys : {Time up!}
Sys <------  {Time up!}
Sys -> Sys : {Finish}
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 601274 ms.

Execution time was 601098 ms.

---System Timeout---
DCIF PROBLEM ASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Async
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-NewAsync
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet2
timout :600000
Time for creating graph: 0.112s
Sys -> Ag0 : {New neighbour}
Sys -> Ag1 : {New neighbour}
Ag0 <------  {New neighbour}
Sys -> Ag0 : {Start}
Sys -> Ag1 : {Start}
Sys -> Ag0 : {Launch}
Sys -> Ag1 : {Launch}
Ag1 <------  {New neighbour}
Ag1 <------  {Start}
Ag0 <------  {Start}
Ag1 -> Sys : {Started}
Ag1 <------  {Launch}
Sys <------  {Started}
Ag0 -> Sys : {Started}
Ag0 <------  {Launch}
Sys <------  {Started}
Ag0 receives [[-sum(c,d,additive_identity)]]
After pruning [[-sum(c,d,additive_identity)]]
Input Languages : {Ag1=[-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1)]}
Starting SolveToClause...
Launching solver...
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), -sum(_0,_2,_3), +sum(_1,_2,_3)]
 [-equalish(_0,_1), -sum(_2,_0,_3), +sum(_2,_1,_3)]
 [-equalish(_0,_1), -sum(_2,_3,_0), +sum(_2,_3,_1)]
 [+sum(additive_identity,_0,_0)]
 [+sum(_0,additive_identity,_0)]
 [+sum(_0,_1,add(_0,_1))]
 [+sum(additive_inverse(_0),_0,additive_identity)]
 [+sum(_0,additive_inverse(_0),additive_identity)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_2,_3,_5), +sum(_0,_4,_5)]
 [-sum(_0,_1,_2), -sum(_1,_3,_4), -sum(_0,_4,_5), +sum(_2,_3,_5)]
 [-sum(_0,_1,_2), +sum(_1,_0,_2)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -product(_0,_5,_6), +sum(_2,_4,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -product(_5,_1,_6), +sum(_2,_4,_6)]
 [-sum(_0,_1,_2), -sum(_0,_1,_3), +equalish(_2,_3)]
 [-sum(c,d,additive_identity)]
Top clauses:
 [-sum(c,d,additive_identity)]
Production field:
 [-equalish(_0,_1), +sum(_0,_1,_2), -product(_0,_1,_2), +equalish(_0,_1), -product(_0,_1,_2):4]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_1,c), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_7,c), -product(_0,c,d), -product(_0,add(_7,c),additive_identity)]]
Ag1 receives [[-product(_0,_1,c), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]]
After pruning [[-product(_0,_1,c), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]]
Input Languages : {Ag0=[-sum(_0,_1,c), -equalish(_0,_1), +product(_0,_1,c), +equalish(_0,_1)]}
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_1,c), -product(_0,additive_identity,d), -product(_0,_1,additive_identity)]]
Starting SolveToClause...
Launching solver...
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_1,c), -product(_0,additive_inverse(_1),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_1,d), -product(_0,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_1),c), -product(_0,_1,d), -product(_0,additive_identity,additive_identity)]]
----------------------------------------------------------------------
Clauses:
 [-equalish(_0,_1), +equalish(additive_inverse(_0),additive_inverse(_1))]
 [-equalish(_0,_1), +equalish(add(_0,_2),add(_1,_2))]
 [-equalish(_0,_1), +equalish(multiply(_0,_2),multiply(_1,_2))]
 [-equalish(_0,_1), -product(_0,_2,_3), +product(_1,_2,_3)]
 [-equalish(_0,_1), -product(_2,_0,_3), +product(_2,_1,_3)]
 [-equalish(_0,_1), -product(_2,_3,_0), +product(_2,_3,_1)]
 [+product(_0,_1,multiply(_0,_1))]
 [-product(_0,_1,_2), -product(_1,_3,_4), -product(_2,_3,_5), +product(_0,_4,_5)]
 [-product(_0,_1,_2), -product(_1,_3,_4), -product(_0,_4,_5), +product(_2,_3,_5)]
 [-product(_0,_1,_2), -product(_0,_3,_4), -sum(_1,_3,_5), -sum(_2,_4,_6), +product(_0,_5,_6)]
 [-product(_0,_1,_2), -product(_3,_1,_4), -sum(_0,_3,_5), -sum(_2,_4,_6), +product(_5,_1,_6)]
 [-product(_0,_1,_2), -product(_0,_1,_3), +equalish(_2,_3)]
 [+product(additive_identity,_0,additive_identity)]
 [+product(_0,additive_identity,additive_identity)]
 [-product(_0,_1,c), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]
Top clauses:
 [-product(_0,_1,c), -product(_0,c,d), -product(_0,add(_1,c),additive_identity)]
Production field:
 [-sum(_0,_1,_2), -equalish(_0,_1), +product(_0,_1,_2), +equalish(_0,_1), -product(_0,_1,_2):4]:4

>>>>>>>>>>>> Solving at depth : 4( real 4)
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_inverse(c),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(c),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_2,_3), -product(_2,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_2,_3), -product(_2,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(additive_identity,_7)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(additive_identity,_7)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -equalish(_1,add(_1,c)), -product(_1,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -equalish(_1,_3), -product(_1,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -equalish(add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -equalish(add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -equalish(add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -equalish(add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_7,additive_identity), -product(_3,additive_identity,_7), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_7,additive_identity), -product(_3,additive_identity,_7), -product(_3,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,add(c,d),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,add(c,d),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),additive_identity,_3), -sum(_3,_7,additive_identity), -product(additive_identity,add(_1,c),_7), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -sum(add(_1,c),additive_identity,_3), -sum(_3,_7,additive_identity), -product(additive_identity,add(_1,c),_7), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(_3,_3,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(_3,_3,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,add(_1,c),_3), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,add(_1,c),_3), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(c,_7), -product(_1,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(c,_7), -product(_1,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(d,_7), -product(c,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(d,_7), -product(c,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_7,_3), -equalish(_3,_7), -product(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_3,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_11,_12),_3), -equalish(_3,add(_3,_12)), -product(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_3,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,add(c,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity), -product(_0,additive_identity,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity), -product(_0,additive_identity,additive_inverse(c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -equalish(_3,add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -product(_3,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -equalish(_3,add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(add(add(_1,c),c),c),add(_1,c)),add(add(add(_1,c),c),c)), -product(add(add(add(add(add(_1,c),c),c),add(_1,c)),add(_1,c)),add(add(add(add(_1,c),c),c),add(_1,c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(add(add(add(_3,c),c),_3),add(add(_3,c),c)), -product(add(add(add(add(_3,c),c),_3),_3),add(add(add(_3,c),c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -equalish(_3,add(_1,c)), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -equalish(_3,add(_1,c)), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -equalish(_3,additive_identity), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -equalish(_3,additive_identity), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(add(_3,add(_3,_12)),add(_3,_12)),additive_identity), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c),add(add(_3,add(_3,_12)),add(_3,_12))), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(add(_3,add(_3,_12)),add(_3,_12)),additive_identity), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c),add(add(_3,add(_3,_12)),add(_3,_12))), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,_3,add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,_3,add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -sum(additive_identity,add(add(_3,add(_3,_12)),add(_3,_12)),additive_identity), -product(add(_1,c),add(_1,c),add(add(_3,add(_3,_12)),add(_3,_12))), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -sum(_3,add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -sum(additive_identity,add(add(_3,add(_3,_12)),add(_3,_12)),additive_identity), -product(add(_1,c),add(_1,c),add(add(_3,add(_3,_12)),add(_3,_12))), -product(_3,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c)), -product(add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),add(_1,c)), -product(add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(add(_1,c),add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -product(add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(add(_1,c),add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -product(add(_1,c),add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12))),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_3,add(_3,add(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,add(add(_3,add(_3,add(_3,_12))),add(_3,add(_3,_12)))), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(add(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(add(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(add(add(add(_10,_12),_12),_3),_3),_3),_3),_3), -equalish(add(add(add(add(_10,_12),_12),_3),_3),add(add(add(add(add(_10,_12),_12),_3),_3),_3)), -product(add(add(add(add(_10,_12),_12),_3),_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(add(add(_11,_12),_3),_3),_3),_3),_3), -equalish(add(add(add(_11,_12),_3),_3),add(add(add(add(_11,_12),_3),_3),_3)), -product(add(add(add(_11,_12),_3),_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -equalish(additive_identity,add(add(_1,c),_3)), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -equalish(additive_identity,add(add(_1,c),_3)), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,add(c,c),d), -product(_0,d,additive_identity), -product(_0,c,add(c,c))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(c,c),d), -product(_0,d,additive_identity), -product(_0,c,add(c,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),add(_1,add(_11,_12))),add(add(add(_1,c),c),c)), -equalish(add(add(_1,c),c),add(_1,c)), -product(add(add(add(_1,c),c),add(_1,add(_11,_12))),add(add(_1,c),add(_1,add(_11,_12))),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(add(_3,add(_1,add(_11,_12))),add(add(_3,c),c)), -equalish(add(_3,c),_3), -product(add(add(_3,c),add(_1,add(_11,_12))),add(_3,add(_1,add(_11,_12))),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(_1,c),add(add(_1,c),add(add(_1,c),_12))),_3), -equalish(_3,add(_1,c)), -product(add(_3,add(add(_1,c),add(add(_1,c),_12))),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(_1,c),add(add(_1,c),add(_11,_12))),_3), -equalish(_3,add(_1,c)), -product(add(_3,add(add(_1,c),add(_11,_12))),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -equalish(additive_identity,add(_1,c)), -product(add(add(_1,c),_3),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -equalish(additive_identity,add(_1,c)), -product(add(add(_1,c),_3),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(additive_identity,add(additive_identity,add(additive_identity,_12))),_3), -equalish(_3,additive_identity), -product(add(_3,add(additive_identity,add(additive_identity,_12))),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(additive_identity,add(additive_identity,add(_11,_12))),_3), -equalish(_3,additive_identity), -product(add(_3,add(additive_identity,add(_11,_12))),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -equalish(additive_identity,additive_identity), -product(add(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -equalish(additive_identity,additive_identity), -product(add(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(add(_1,c),_3),add(add(_1,c),_3),additive_identity), -product(add(add(_1,c),_3),additive_identity,add(add(_1,c),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(add(_1,c),_3),add(add(_1,c),_3),additive_identity), -product(add(add(_1,c),_3),additive_identity,add(add(_1,c),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,add(add(_1,c),_3),add(_1,c)), -sum(add(add(_11,_12),_3),add(_1,c),additive_identity), -product(add(add(_1,c),_3),add(add(_1,c),_3),add(_1,c)), -product(add(add(_1,c),_3),additive_identity,add(add(_11,_12),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,add(add(_1,c),_3),add(_1,c)), -sum(add(add(_11,_12),_3),add(_1,c),additive_identity), -product(add(add(_1,c),_3),add(add(_1,c),_3),add(_1,c)), -product(add(add(_1,c),_3),additive_identity,add(add(_11,_12),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,additive_identity,add(add(_1,c),_3)), -sum(add(add(_1,c),_3),add(add(_1,c),_3),additive_identity), -product(additive_identity,add(_1,c),add(add(_1,c),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,additive_identity,add(add(_1,c),_3)), -sum(add(add(_1,c),_3),add(add(_1,c),_3),additive_identity), -product(additive_identity,add(_1,c),add(add(_1,c),_3))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,add(add(_1,c),_3),add(add(_1,c),_3)), -sum(add(add(_11,_12),_3),add(_1,c),additive_identity), -product(add(add(_1,c),_3),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(add(_11,_12),_3))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(c),c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -sum(additive_identity,add(add(_1,c),_3),add(add(_1,c),_3)), -sum(add(add(_11,_12),_3),add(_1,c),additive_identity), -product(add(add(_1,c),_3),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(add(_11,_12),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(add(add(_1,c),_3),add(add(_1,c),_3),add(_1,c)), -product(add(_1,c),add(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(add(add(_1,c),_3),add(add(_1,c),_3),add(_1,c)), -product(add(_1,c),add(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(additive_identity,add(add(_1,c),_3),add(_1,c)), -product(add(add(_1,c),_3),additive_identity,add(add(_11,_12),_3)), -product(add(add(_11,_12),_3),add(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(additive_identity,add(add(_1,c),_3),add(_1,c)), -product(add(add(_1,c),_3),additive_identity,add(add(_11,_12),_3)), -product(add(add(_11,_12),_3),add(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(add(_1,c),add(_1,c),add(add(_1,c),_3)), -product(add(_1,c),add(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(add(_1,c),add(_1,c),add(add(_1,c),_3)), -product(add(_1,c),add(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(add(_11,_12),_3)), -product(additive_identity,add(_1,c),add(add(_1,c),_3)), -product(add(add(_11,_12),_3),additive_identity,add(add(_1,c),_3)), -product(add(add(_11,_12),_3),add(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(add(add(_11,_12),_3),_3),_3), -equalish(add(_1,c),add(_7,_3)), -product(additive_identity,add(_1,c),add(add(_1,c),_3)), -product(add(_7,_3),additive_identity,add(add(_1,c),_3)), -product(add(additive_inverse(_11),_3),add(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(additive_inverse(_3)),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(additive_inverse(_3)),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -equalish(additive_inverse(_3),additive_inverse(additive_inverse(_3))), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(additive_inverse(add(add(add(_1,c),c),c)),add(add(add(_1,c),c),c)), -product(additive_inverse(additive_inverse(add(add(add(_1,c),c),c))),additive_inverse(add(add(add(_1,c),c),c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -equalish(additive_inverse(_3),additive_inverse(additive_inverse(_3))), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(additive_inverse(add(add(_3,c),c)),add(add(_3,c),c)), -product(additive_inverse(additive_inverse(add(add(_3,c),c))),additive_inverse(add(add(_3,c),c)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -equalish(additive_inverse(_3),add(_1,c)), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -equalish(additive_inverse(_3),add(_1,c)), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -equalish(additive_inverse(_3),additive_identity), -product(additive_inverse(additive_inverse(_3)),add(_1,c),additive_inverse(_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -equalish(additive_inverse(_3),additive_identity), -product(additive_inverse(additive_inverse(_3)),add(_1,c),additive_inverse(_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),additive_inverse(_3),add(_1,c)), -sum(_3,_3,additive_identity), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),additive_inverse(_3),add(_1,c)), -sum(_3,_3,additive_identity), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_inverse(additive_inverse(_3)),_3,additive_identity), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_inverse(additive_inverse(_3)),_3,additive_identity), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),additive_inverse(_3),additive_inverse(additive_inverse(_3))), -sum(_3,_3,additive_identity), -product(additive_inverse(_3),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),additive_inverse(_3),additive_inverse(additive_inverse(_3))), -sum(_3,_3,additive_identity), -product(additive_inverse(_3),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),_3,additive_inverse(additive_inverse(_3))), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,add(_1,c),additive_identity), -product(additive_inverse(_3),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -sum(additive_inverse(_3),_3,additive_inverse(additive_inverse(_3))), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,add(_1,c),additive_identity), -product(additive_inverse(_3),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(additive_inverse(_3)),additive_inverse(additive_inverse(_3)),add(_1,c)), -product(add(_1,c),additive_inverse(additive_inverse(_3)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(additive_inverse(_3)),additive_inverse(additive_inverse(_3)),add(_1,c)), -product(add(_1,c),additive_inverse(additive_inverse(_3)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(_3),_3,add(_1,c)), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(_3),_3,add(_1,c)), -product(additive_inverse(additive_inverse(_3)),additive_inverse(_3),add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(add(_1,c),add(_1,c),additive_inverse(additive_inverse(_3))), -product(add(_1,c),additive_inverse(additive_inverse(_3)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(add(_1,c),add(_1,c),additive_inverse(additive_inverse(_3))), -product(add(_1,c),additive_inverse(additive_inverse(_3)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(_3),add(_1,c),_3), -product(add(_1,c),additive_inverse(_3),additive_inverse(additive_inverse(_3))), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(_3),_3), -product(additive_inverse(_3),add(_1,c),_3), -product(add(_1,c),additive_inverse(_3),additive_inverse(additive_inverse(_3))), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c), -product(_0,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,add(c,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),c), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(additive_inverse(additive_inverse(additive_inverse(_10)))))),_3), -equalish(additive_inverse(additive_inverse(additive_inverse(additive_inverse(_10)))),additive_inverse(additive_inverse(additive_inverse(additive_inverse(additive_inverse(_10)))))), -product(additive_inverse(additive_inverse(additive_inverse(additive_inverse(_10)))),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(additive_inverse(additive_inverse(_11))))),_3), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),additive_inverse(additive_inverse(additive_inverse(additive_inverse(_11))))), -product(additive_inverse(additive_inverse(additive_inverse(_11))),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -equalish(add(_1,c),additive_inverse(_3)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(_1,c),_1,c), -product(add(_1,c),c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),add(_1,c)), -equalish(add(_1,c),additive_inverse(additive_inverse(_11))), -equalish(add(_1,c),additive_inverse(add(_1,c))), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(additive_inverse(add(_1,c)),add(add(add(_1,c),c),c)), -equalish(additive_inverse(_1),add(_1,c)), -product(additive_inverse(additive_inverse(_1)),additive_inverse(add(_1,c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(additive_inverse(_3),add(add(_3,c),c)), -equalish(additive_inverse(_1),_3), -product(additive_inverse(additive_inverse(_1)),additive_inverse(_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(add(_1,c)),_3), -equalish(additive_inverse(add(_1,c)),add(_1,c)), -product(additive_inverse(additive_inverse(add(_1,c))),additive_inverse(add(_1,c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(add(_1,c)),_3), -equalish(additive_inverse(add(_1,c)),add(_1,c)), -product(additive_inverse(additive_inverse(add(_1,c))),additive_inverse(add(_1,c)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -equalish(add(_1,c),add(_1,c)), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_identity),_3), -equalish(additive_inverse(additive_identity),additive_identity), -product(additive_inverse(additive_inverse(additive_identity)),add(_1,c),additive_inverse(additive_identity))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -equalish(add(_1,c),add(_1,c)), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_identity),_3), -equalish(additive_inverse(additive_identity),additive_identity), -product(additive_inverse(additive_inverse(additive_identity)),add(_1,c),additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -equalish(add(_1,c),additive_identity), -product(additive_inverse(_3),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -equalish(add(_1,c),additive_identity), -product(additive_inverse(_3),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(additive_inverse(_3),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,c), -product(_0,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(additive_inverse(_3),additive_inverse(additive_inverse(_11)),additive_identity), -product(additive_inverse(_3),additive_identity,additive_inverse(additive_inverse(_11))), -product(additive_inverse(_3),add(_1,c),additive_inverse(_3))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(additive_inverse(_3),additive_inverse(additive_inverse(_11)),additive_identity), -product(additive_inverse(_3),additive_identity,additive_inverse(additive_inverse(_11))), -product(additive_inverse(_3),add(_1,c),additive_inverse(_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),add(_1,c),additive_inverse(_3)), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),add(_1,c),additive_inverse(_3)), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),additive_identity,additive_inverse(_3)), -sum(additive_inverse(_3),additive_inverse(additive_inverse(_11)),additive_identity), -product(additive_identity,add(_1,c),additive_inverse(additive_inverse(_11))), -product(add(_1,c),add(_1,c),additive_inverse(_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -sum(add(_1,c),additive_identity,additive_inverse(_3)), -sum(additive_inverse(_3),additive_inverse(additive_inverse(_11)),additive_identity), -product(additive_identity,add(_1,c),additive_inverse(additive_inverse(_11))), -product(add(_1,c),add(_1,c),additive_inverse(_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(additive_inverse(_3),additive_inverse(_3),add(_1,c)), -product(add(_1,c),additive_inverse(_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(additive_inverse(_10),_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(additive_inverse(_3),additive_inverse(_3),add(_1,c)), -product(add(_1,c),additive_inverse(_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(add(_1,c),additive_identity,add(_1,c)), -product(additive_inverse(_3),add(_1,c),additive_inverse(_3)), -product(additive_inverse(_3),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(add(_1,c),additive_identity,add(_1,c)), -product(additive_inverse(_3),add(_1,c),additive_inverse(_3)), -product(additive_inverse(_3),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(add(_1,c),add(_1,c),additive_inverse(_3)), -product(add(_1,c),additive_inverse(_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(add(_1,c),add(_1,c),additive_inverse(_3)), -product(add(_1,c),additive_inverse(_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(add(_1,c),add(_1,c),additive_identity), -product(additive_inverse(_3),add(_1,c),additive_inverse(_3)), -product(additive_inverse(_3),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(additive_inverse(additive_inverse(additive_inverse(_11))),_3), -equalish(_3,additive_inverse(additive_inverse(_11))), -product(add(_1,c),add(_1,c),additive_identity), -product(additive_inverse(_3),add(_1,c),additive_inverse(_3)), -product(additive_inverse(_3),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -equalish(_3,multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -equalish(_3,multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(multiply(add(add(add(_1,c),c),c),add(_1,c)),add(add(add(_1,c),c),c)), -product(multiply(multiply(add(add(add(_1,c),c),c),add(_1,c)),add(_1,c)),multiply(add(add(add(_1,c),c),c),add(_1,c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(multiply(add(add(_3,c),c),_3),add(add(_3,c),c)), -product(multiply(multiply(add(add(_3,c),c),_3),_3),multiply(add(add(_3,c),c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -equalish(_3,add(_1,c)), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -equalish(_3,add(_1,c)), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,add(c,d),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -equalish(_3,additive_identity), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,add(c,d),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -equalish(_3,additive_identity), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12)),additive_identity), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c),multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12))), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12)),additive_identity), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c),multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12))), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,_3,multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,_3,multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -sum(additive_identity,multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12)),additive_identity), -product(add(_1,c),add(_1,c),multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12))), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -sum(_3,add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -sum(additive_identity,multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12)),additive_identity), -product(add(_1,c),add(_1,c),multiply(multiply(_3,multiply(_3,_12)),multiply(_3,_12))), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c)), -product(add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),add(_1,c)), -product(add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,add(d,d),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,add(d,d),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(add(_1,c),add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -product(add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(add(_1,c),add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -product(add(_1,c),multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12))),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(_3,multiply(_3,multiply(_3,_12))),_3), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,multiply(multiply(_3,multiply(_3,multiply(_3,_12))),multiply(_3,multiply(_3,_12)))), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(multiply(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(multiply(multiply(multiply(_10,_12),_12),_3),_3),_3),_3),_3), -equalish(multiply(multiply(multiply(multiply(_10,_12),_12),_3),_3),multiply(multiply(multiply(multiply(multiply(_10,_12),_12),_3),_3),_3)), -product(multiply(multiply(multiply(multiply(_10,_12),_12),_3),_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(multiply(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(multiply(multiply(_11,_12),_3),_3),_3),_3),_3), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),multiply(multiply(multiply(multiply(_11,_12),_3),_3),_3)), -product(multiply(multiply(multiply(_11,_12),_3),_3),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,add(additive_identity,d),d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -equalish(additive_identity,multiply(add(_1,c),_3)), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,add(additive_identity,d),d)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(multiply(add(_1,c),multiply(_1,multiply(_11,_12))),add(add(add(_1,c),c),c)), -equalish(add(add(_1,c),c),add(_1,c)), -product(multiply(add(add(_1,c),c),multiply(_1,multiply(_11,_12))),multiply(add(_1,c),multiply(_1,multiply(_11,_12))),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(add(_1,c),multiply(add(_1,c),multiply(add(_1,c),_12))),_3), -equalish(_3,add(_1,c)), -product(multiply(_3,multiply(add(_1,c),multiply(add(_1,c),_12))),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -equalish(additive_identity,multiply(add(_1,c),_3)), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(multiply(_3,multiply(_1,multiply(_11,_12))),add(add(_3,c),c)), -equalish(add(_3,c),_3), -product(multiply(add(_3,c),multiply(_1,multiply(_11,_12))),multiply(_3,multiply(_1,multiply(_11,_12))),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(add(_1,c),multiply(add(_1,c),multiply(_11,_12))),_3), -equalish(_3,add(_1,c)), -product(multiply(_3,multiply(add(_1,c),multiply(_11,_12))),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -equalish(additive_identity,add(_1,c)), -product(multiply(add(_1,c),_3),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -equalish(additive_identity,add(_1,c)), -product(multiply(add(_1,c),_3),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(additive_identity,multiply(additive_identity,multiply(additive_identity,_12))),_3), -equalish(_3,additive_identity), -product(multiply(_3,multiply(additive_identity,multiply(additive_identity,_12))),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -equalish(additive_identity,additive_identity), -product(multiply(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(additive_identity,multiply(additive_identity,multiply(_11,_12))),_3), -equalish(_3,additive_identity), -product(multiply(_3,multiply(additive_identity,multiply(_11,_12))),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -equalish(additive_identity,additive_identity), -product(multiply(add(_1,c),_3),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,additive_identity,add(_1,c)), -sum(multiply(add(_1,c),_3),multiply(add(_1,c),_3),additive_identity), -product(multiply(add(_1,c),_3),additive_identity,multiply(add(_1,c),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,additive_identity,add(_1,c)), -sum(multiply(add(_1,c),_3),multiply(add(_1,c),_3),additive_identity), -product(multiply(add(_1,c),_3),additive_identity,multiply(add(_1,c),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,multiply(add(_1,c),_3),add(_1,c)), -sum(multiply(multiply(_11,_12),_3),add(_1,c),additive_identity), -product(multiply(add(_1,c),_3),multiply(add(_1,c),_3),add(_1,c)), -product(multiply(add(_1,c),_3),additive_identity,multiply(multiply(_11,_12),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,multiply(add(_1,c),_3),add(_1,c)), -sum(multiply(multiply(_11,_12),_3),add(_1,c),additive_identity), -product(multiply(add(_1,c),_3),multiply(add(_1,c),_3),add(_1,c)), -product(multiply(add(_1,c),_3),additive_identity,multiply(multiply(_11,_12),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,additive_identity,multiply(add(_1,c),_3)), -sum(multiply(add(_1,c),_3),multiply(add(_1,c),_3),additive_identity), -product(additive_identity,add(_1,c),multiply(add(_1,c),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,multiply(add(_1,c),_3),multiply(add(_1,c),_3)), -sum(multiply(multiply(_11,_12),_3),add(_1,c),additive_identity), -product(multiply(add(_1,c),_3),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),multiply(multiply(_11,_12),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,additive_identity,multiply(add(_1,c),_3)), -sum(multiply(add(_1,c),_3),multiply(add(_1,c),_3),additive_identity), -product(additive_identity,add(_1,c),multiply(add(_1,c),_3))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -sum(additive_identity,multiply(add(_1,c),_3),multiply(add(_1,c),_3)), -sum(multiply(multiply(_11,_12),_3),add(_1,c),additive_identity), -product(multiply(add(_1,c),_3),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),multiply(multiply(_11,_12),_3))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(multiply(add(_1,c),_3),multiply(add(_1,c),_3),add(_1,c)), -product(add(_1,c),multiply(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(multiply(add(_1,c),_3),multiply(add(_1,c),_3),add(_1,c)), -product(add(_1,c),multiply(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(additive_identity,multiply(add(_1,c),_3),add(_1,c)), -product(multiply(add(_1,c),_3),additive_identity,multiply(multiply(_11,_12),_3)), -product(multiply(multiply(_11,_12),_3),multiply(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(additive_identity,multiply(add(_1,c),_3),add(_1,c)), -product(multiply(add(_1,c),_3),additive_identity,multiply(multiply(_11,_12),_3)), -product(multiply(multiply(_11,_12),_3),multiply(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(add(_1,c),add(_1,c),multiply(add(_1,c),_3)), -product(add(_1,c),multiply(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(add(_1,c),add(_1,c),multiply(add(_1,c),_3)), -product(add(_1,c),multiply(add(_1,c),_3),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(additive_identity,add(_1,c),multiply(add(_1,c),_3)), -product(multiply(multiply(_11,_12),_3),additive_identity,multiply(add(_1,c),_3)), -product(multiply(multiply(_11,_12),_3),multiply(add(_1,c),_3),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(multiply(multiply(multiply(_11,_12),_3),_3),_3), -equalish(add(_1,c),multiply(multiply(_11,_12),_3)), -product(additive_identity,add(_1,c),multiply(add(_1,c),_3)), -product(multiply(multiply(_11,_12),_3),additive_identity,multiply(add(_1,c),_3)), -product(multiply(multiply(_11,_12),_3),multiply(add(_1,c),_3),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(d,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,d), -product(c,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(d,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,d), -product(c,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -product(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,add(c,c)), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,add(c,c)), -product(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,additive_identity), -product(d,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,additive_identity), -product(d,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(_3,add(c,c),additive_identity), -product(d,c,add(c,c)), -product(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(_3,add(c,c),additive_identity), -product(d,c,add(c,c)), -product(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,d), -sum(c,c,additive_identity), -product(c,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,d), -sum(_3,add(c,c),additive_identity), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,d), -sum(c,c,additive_identity), -product(c,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,d), -sum(_3,add(c,c),additive_identity), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(d,d,add(c,c)), -product(add(c,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(c,c,add(c,c)), -product(d,c,_3), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(c,c,add(c,c)), -product(d,c,_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(c,add(c,c),c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(c,add(c,c),c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(c,add(c,c),c), -product(_3,c,d), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(c,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(add(c,c),add(c,c),d), -product(add(c,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(c,add(c,c),c), -product(_3,c,d), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(c,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -equalish(_3,c), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -equalish(_3,c), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(add(add(add(_1,c),c),c),add(add(_1,c),c),add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(c,add(add(_3,c),c)), -product(add(add(_3,c),c),add(_3,c),_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -equalish(_3,add(_1,c)), -product(c,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -equalish(_3,add(_1,c)), -product(c,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -equalish(_3,additive_identity), -product(c,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -equalish(_3,additive_identity), -product(c,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(c,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(c,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -product(c,add(_1,c),c), -product(c,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -product(c,add(_1,c),c), -product(c,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,_3,c), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,_3,c), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,add(_1,c),c), -sum(additive_identity,c,additive_identity), -product(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -sum(_3,add(_1,c),c), -sum(additive_identity,c,additive_identity), -product(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,add(_1,c)), -product(add(_1,c),_3,c), -product(c,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,add(_1,c)), -product(add(_1,c),_3,c), -product(c,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(d),d)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(d),d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(d),d), -product(_0,additive_identity,additive_identity), -product(_0,d,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(_3,add(_1,c),add(_1,c)), -product(c,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(d),d), -product(_0,additive_identity,additive_identity), -product(_0,d,additive_inverse(d))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(_3,add(_1,c),add(_1,c)), -product(c,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,d), -product(c,add(_1,c),c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,d), -product(c,add(_1,c),c), -product(_3,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(_1,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(_1,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,c), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,c), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,c), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,c), -product(c,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,c), -product(c,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(d,add(c,c)), -product(c,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(d,add(c,c)), -product(c,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,add(c,c)), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,add(c,c)), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,additive_identity), -product(c,add(c,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,additive_identity), -product(c,add(c,c),c)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,d,add(c,c)), -sum(_3,add(c,c),additive_identity), -product(c,d,add(c,c)), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,d,add(c,c)), -sum(_3,add(c,c),additive_identity), -product(c,d,add(c,c)), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,c,c), -sum(d,d,additive_identity), -product(c,add(c,c),d)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,c,c), -sum(d,d,additive_identity), -product(c,add(c,c),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,d,c), -sum(_3,add(c,c),additive_identity), -product(d,add(c,c),add(c,c)), -product(c,add(c,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -sum(c,d,c), -sum(_3,add(c,c),additive_identity), -product(d,add(c,c),add(c,c)), -product(c,add(c,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,d,d), -product(_0,add(d,d),c)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,d,d), -product(_0,add(d,d),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d), -product(_0,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(d),d), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,additive_identity), -product(_0,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,c,add(c,c)), -product(add(c,c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d), -product(_0,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(d),d), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(d),d), -product(_0,c,additive_identity), -product(_0,d,additive_inverse(d)), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,c,add(c,c)), -product(add(c,c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,additive_identity), -product(_0,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,d,add(c,c)), -product(c,c,_3), -product(_3,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(d),d), -product(_0,c,additive_identity), -product(_0,d,additive_inverse(d)), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,d,add(c,c)), -product(c,c,_3), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(c,c),c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(c,c),c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(add(c,c),add(c,c),c), -product(add(c,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(add(c,c),add(c,c),c), -product(add(c,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(c,c),d), -product(_3,c,c), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(c,c),d), -product(_3,c,c), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(d,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(d,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -equalish(_3,d), -product(_3,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -equalish(_3,d), -product(_3,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(d,add(add(add(_1,c),c),c)), -product(add(add(add(_1,c),c),c),c,add(_1,c)), -product(add(_1,c),d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,c,d), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(d,add(add(add(_1,c),c),c)), -product(add(add(_3,c),c),c,_3), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -equalish(_3,add(_1,c)), -product(d,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -equalish(_3,add(_1,c)), -product(d,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -equalish(_3,additive_identity), -product(d,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -equalish(_3,additive_identity), -product(d,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(d,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(d,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -product(d,add(_1,c),d), -product(d,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -product(d,add(_1,c),d), -product(d,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,_3,d), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,_3,d), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,add(_1,c),d), -sum(additive_identity,d,additive_identity), -product(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -sum(_3,add(_1,c),d), -sum(additive_identity,d,additive_identity), -product(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(_1,c)), -product(add(_1,c),_3,d), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(_1,c)), -product(add(_1,c),_3,d), -product(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(_3,add(_1,c),add(_1,c)), -product(d,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,c), -product(_1,add(_1,c),d), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(_3,add(_1,c),add(_1,c)), -product(d,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,c), -product(_1,add(_1,c),d), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(c,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(c,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,d), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,d), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,d), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(c,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(c,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -equalish(_3,c), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(add(add(add(_1,c),c),c),add(add(_1,c),c),add(_1,c)), -product(c,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -equalish(_3,add(_1,c)), -product(c,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -equalish(_3,additive_identity), -product(c,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -equalish(_3,c), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -product(add(add(_3,c),c),add(_3,c),_3), -product(c,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -equalish(_3,add(_1,c)), -product(c,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -equalish(_3,additive_identity), -product(c,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(c,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(c,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -product(c,add(_1,c),c), -product(c,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -product(c,add(_1,c),c), -product(c,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,_3,c), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,_3,c), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,add(_1,c),c), -sum(additive_identity,c,additive_identity), -product(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -sum(_3,add(_1,c),c), -sum(additive_identity,c,additive_identity), -product(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,_1,add(_1,c)), -product(c,_3,add(_1,c)), -product(add(_1,c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(add(_1,c),_3), -product(_3,_1,add(_1,c)), -product(c,_3,add(_1,c)), -product(add(_1,c),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(c,c,add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(_3,add(_1,c),add(_1,c)), -product(c,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(_3,add(_1,c),add(_1,c)), -product(c,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(_1,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(_1,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(add(_1,c),add(_1,c),c), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,c), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,_1,_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,c), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,add(additive_identity,d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(d,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,add(additive_identity,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,additive_inverse(d),additive_identity), -product(_0,additive_identity,additive_inverse(d))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(d,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,additive_inverse(d),additive_identity), -product(_0,additive_identity,additive_inverse(d))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -equalish(_3,d), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(add(add(add(_1,c),c),c),c,add(_1,c)), -product(d,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -equalish(_3,add(_1,c)), -product(d,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -equalish(_3,d), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -product(add(add(_3,c),c),c,_3), -product(d,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -equalish(_3,add(_1,c)), -product(d,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -equalish(_3,additive_identity), -product(d,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -equalish(_3,additive_identity), -product(d,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(d,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -product(d,add(_1,c),d), -product(d,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(d,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -product(d,add(_1,c),d), -product(d,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,_3,d), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,_3,d), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,add(_1,c),d), -sum(additive_identity,d,additive_identity), -product(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -sum(_3,add(_1,c),d), -sum(additive_identity,d,additive_identity), -product(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,c,add(_1,c)), -product(d,_3,add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,c,add(_1,c)), -product(d,_3,add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(d,d,add(_1,c)), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(_3,add(_1,c),add(_1,c)), -product(d,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(_3,add(_1,c),add(_1,c)), -product(d,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(c,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,d), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(c,add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(add(_1,c),add(_1,c),d), -product(add(_1,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,c,_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,d), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(additive_identity,add(_1,c),_13), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(additive_identity,add(_1,c),_13), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(add(_1,c),c),add(_1,c)), -product(_1,add(add(_1,c),c),add(add(_1,c),c)), -product(add(add(_1,c),c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -product(_1,add(_3,c),_3), -product(_1,add(_3,c),add(_3,c)), -product(add(_3,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -equalish(_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -equalish(_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -equalish(_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -equalish(_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_13,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_13,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(d,additive_identity),d), -product(_0,d,additive_identity), -product(_0,additive_identity,add(d,additive_identity))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(d,additive_identity),d), -product(_0,d,additive_identity), -product(_0,additive_identity,add(d,additive_identity))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_13,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_13,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_13,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_13,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_13,additive_identity), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_13,_3,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_13,_3,additive_identity), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -sum(_13,_13,additive_identity), -product(additive_identity,_3,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -sum(_13,_13,additive_identity), -product(additive_identity,_3,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_13,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_13,additive_identity), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_13,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_13,additive_identity), -product(additive_identity,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(_13,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,add(c,additive_identity),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,add(c,additive_identity),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),additive_identity), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),additive_identity), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_13,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(_0,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_13,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,d,additive_identity), -product(_0,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(_13,_13,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_inverse(c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(_13,_13,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_13,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,d,additive_identity), -product(_0,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_13,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(_13,_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(_13,_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,additive_identity), -sum(_13,_13,additive_identity), -product(_3,add(_1,c),_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,additive_identity), -sum(_13,_13,additive_identity), -product(_3,add(_1,c),_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_13,additive_identity), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -sum(_3,_13,additive_identity), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_13,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_13,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(additive_identity,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(additive_identity,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(_3,_13,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_13,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(_3,_13,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_13,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_1,add(_1,c),_13), -product(_1,add(_1,c),c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_1,add(_1,c),_13), -product(_1,add(_1,c),c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(c,add(_1,c),_13), -product(c,add(_1,c),d), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(c,add(_1,c),_13), -product(c,add(_1,c),d), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(add(_1,c),add(_1,c),_13), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(add(_1,c),add(_1,c),_13), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_1,add(_1,c),_13), -product(_1,add(_1,c),c), -product(_3,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_1,add(_1,c),_13), -product(_1,add(_1,c),c), -product(_3,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(c,add(_1,c),_13), -product(c,add(_1,c),d), -product(_3,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(c,add(_1,c),_13), -product(c,add(_1,c),d), -product(_3,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(additive_identity,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(additive_identity,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),c), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),c), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),d), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),d), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_9),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,_9,additive_inverse(_9))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(_9),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,_9,additive_inverse(_9))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(_9),_9)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_3,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_18)]]
Ag1 <------  Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),_13), -product(add(_1,c),_3,additive_identity), -product(add(_1,c),_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -product(_3,add(_1,c),_13), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),_13), -product(add(_1,c),_3,additive_identity), -product(add(_1,c),_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,c,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,c,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,_18,additive_identity), -product(_0,additive_identity,_18)]]
Ag1 <------  Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,_18,additive_identity), -product(_0,additive_identity,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -equalish(_1,add(_1,c)), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -equalish(_1,add(_1,c)), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -equalish(_1,additive_identity), -product(add(_1,c),add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -equalish(_1,additive_identity), -product(add(_1,c),add(_1,c),_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,add(c,_9),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(_0,c,additive_identity), -product(_0,c,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,_1,add(_1,c)), -sum(add(add(_1,c),c),add(add(_1,c),c),additive_identity), -product(add(_1,c),_1,add(add(_1,c),c))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(_14),c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,additive_inverse(_14)), -product(_0,add(c,additive_inverse(_14)),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_9),c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,_9,additive_inverse(_9)), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,_1,add(_1,c)), -sum(add(add(_1,c),c),add(add(_1,c),c),additive_identity), -product(add(_1,c),_1,add(add(_1,c),c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(_9),_9), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),add(_1,c)), -sum(add(add(_1,c),c),additive_identity,additive_identity), -product(add(_1,c),add(add(_1,c),c),additive_identity), -product(add(_1,c),_1,add(add(_1,c),c))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,c,c)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),add(_1,c)), -sum(add(add(_1,c),c),additive_identity,additive_identity), -product(add(_1,c),add(add(_1,c),c),additive_identity), -product(add(_1,c),_1,add(add(_1,c),c))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,d,additive_inverse(d)), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_13,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(_13),_13), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(add(add(_1,c),c),c),add(add(_1,c),c)), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(c,c),c),c),add(add(c,c),c),c), -product(add(add(add(c,c),c),c),c,d), -equalish(add(add(c,c),c),add(add(add(c,c),c),c)), -sum(add(add(add(c,c),c),c),add(add(add(c,c),c),c),add(add(c,c),c)), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -sum(add(c,c),add(c,c),c), -sum(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -sum(add(c,c),add(c,c),c), -sum(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -sum(add(_1,c),add(add(add(_1,c),c),c),add(add(_1,c),c)), -sum(add(_1,c),c,additive_identity), -product(add(_1,c),add(add(_1,c),c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -sum(add(_1,c),add(add(add(_1,c),c),c),add(add(_1,c),c)), -sum(add(_1,c),c,additive_identity), -product(add(_1,c),add(add(_1,c),c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -sum(add(c,c),add(c,c),c), -sum(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -sum(add(c,c),add(c,c),c), -sum(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(add(add(_1,c),c),c),c), -sum(d,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(add(add(_1,c),c),c),c), -sum(d,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_18), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -sum(add(_1,c),add(add(add(_1,c),c),c),c), -sum(c,d,additive_identity), -product(add(_1,c),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_18), -product(_0,c,c)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -sum(add(_1,c),add(add(add(_1,c),c),c),c), -sum(c,d,additive_identity), -product(add(_1,c),c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_18), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_18), -product(_0,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(_1,c),add(add(_1,c),c)), -sum(c,_1,additive_identity), -product(add(_1,c),add(add(_1,c),c),_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(_1,c),add(add(_1,c),c)), -sum(c,_1,additive_identity), -product(add(_1,c),add(add(_1,c),c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(_1,c),c), -sum(d,_1,additive_identity), -product(add(_1,c),c,_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(_1,c),c), -sum(d,_1,additive_identity), -product(add(_1,c),c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,_1,add(_1,c)), -sum(add(add(_1,c),c),add(add(_1,c),c),additive_identity), -product(_1,add(_1,c),add(add(_1,c),c))]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,_1,add(_1,c)), -sum(add(add(_1,c),c),add(add(_1,c),c),additive_identity), -product(_1,add(_1,c),add(add(_1,c),c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_18), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),add(_1,c)), -sum(add(add(_1,c),c),additive_identity,additive_identity), -product(add(add(_1,c),c),add(_1,c),additive_identity), -product(_1,add(_1,c),add(add(_1,c),c))]]
Ag1 <------  Send Clauses : [[-product(_0,_18,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_18), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),add(_1,c)), -sum(add(add(_1,c),c),additive_identity,additive_identity), -product(add(add(_1,c),c),add(_1,c),additive_identity), -product(_1,add(_1,c),add(add(_1,c),c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(c,add(add(add(_1,c),c),c),add(_1,c)), -product(add(_1,c),add(add(_1,c),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(c,add(add(add(_1,c),c),c),add(_1,c)), -product(add(_1,c),add(add(_1,c),c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(d,add(add(add(_1,c),c),c)), -product(d,add(add(add(_1,c),c),c),add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(d,add(add(add(_1,c),c),c)), -product(d,add(add(add(_1,c),c),c),add(_1,c)), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(add(_1,c),c),add(_1,c)), -product(add(_1,c),_1,add(add(_1,c),c)), -product(add(add(_1,c),c),add(add(_1,c),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(add(_1,c),c),add(_1,c)), -product(add(_1,c),_1,add(add(_1,c),c)), -product(add(add(_1,c),c),add(add(_1,c),c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),add(add(_1,c),c)), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(add(_1,c),c),add(add(add(_1,c),c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),add(add(_1,c),c)), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),c), -product(add(_1,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),c), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(add(add(_1,c),c),c,add(_1,c)), -product(add(add(add(_1,c),c),c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(c,add(add(add(_1,c),c),c)), -product(add(add(_1,c),c),c,add(_1,c)), -product(add(add(add(_1,c),c),c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(d,add(add(add(_1,c),c),c)), -product(c,d,add(_1,c)), -product(add(add(add(_1,c),c),c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(d,add(add(add(_1,c),c),c)), -product(c,d,add(_1,c)), -product(add(add(add(_1,c),c),c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(_1,c),add(add(_1,c),c)), -product(add(add(_1,c),c),_1,add(_1,c)), -product(add(add(_1,c),c),add(add(_1,c),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(_1,c),add(add(_1,c),c)), -product(add(add(_1,c),c),_1,add(_1,c)), -product(add(add(_1,c),c),add(add(_1,c),c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(_9,d),c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,_9,add(_9,d))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(_20,d),c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,_20,add(_20,d))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(_3,add(_1,c)), -product(_8,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(_3,add(_1,c)), -product(_8,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -product(_12,_12,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -product(_12,_12,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -equalish(add(_1,c),_3), -product(_12,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -equalish(add(_1,c),_3), -product(_12,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -equalish(add(_1,c),additive_identity), -product(_12,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -equalish(add(_1,c),additive_identity), -product(_10,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_10,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -sum(_3,add(_1,c),additive_identity), -product(_10,additive_identity,add(_1,c)), -product(_10,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -sum(_3,add(_1,c),additive_identity), -product(_15,additive_identity,add(_1,c)), -product(_15,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_1,add(_1,c)), -sum(_3,_3,_15), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(c,c)), -sum(_3,_3,_15), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -equalish(c,add(c,c)), -sum(_3,_3,_1), -sum(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -equalish(c,add(c,c)), -sum(_3,_3,_1), -sum(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_1,add(_1,c)), -sum(_3,_3,_15), -sum(add(_1,c),c,additive_identity), -product(_3,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -equalish(c,add(c,c)), -sum(_3,_3,_1), -sum(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(_1,c)), -sum(_3,_3,_15), -sum(d,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_1,add(_1,c)), -sum(_3,_3,_15), -sum(add(_1,c),c,additive_identity), -product(_3,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -equalish(c,add(c,c)), -sum(_3,_3,_1), -sum(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(_1,c)), -sum(_3,_3,_15), -sum(d,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(_1,c)), -sum(_3,_3,_15), -sum(add(_1,c),d,additive_identity), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(_1,c)), -sum(_3,_3,_15), -sum(add(_1,c),d,additive_identity), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_1,add(_1,c)), -sum(_3,_3,_15), -sum(c,add(_1,c),additive_identity), -product(_3,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_1,add(_1,c)), -sum(_3,_3,_15), -sum(c,add(_1,c),additive_identity), -product(_3,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(_1,c)), -sum(_3,_3,_15), -sum(d,add(_1,c),additive_identity), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(c,add(_1,c)), -sum(_3,_3,_15), -sum(d,add(_1,c),additive_identity), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_15), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_15), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_10), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_10), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(d),_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(d),_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(c,add(_1,c)), -product(_10,_3,_3), -product(_3,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(c,add(_1,c)), -product(_10,_3,_3), -product(_3,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(d,add(_1,c)), -product(_10,_3,_3), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(d,add(_1,c)), -product(_10,_3,_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,add(_1,c)), -product(_13,_13,_3), -product(_3,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -product(_10,_10,_3), -product(_3,_10,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -product(add(_1,c),additive_identity,_3), -product(_10,add(_1,c),_3), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,add(_1,c)), -product(add(_1,c),additive_identity,_3), -product(_10,add(_1,c),_3), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -equalish(_1,add(_1,c)), -product(_1,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -equalish(_1,add(_1,c)), -product(_1,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,d,_9), -product(_0,add(d,d),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(d),_9), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,d,_9), -product(_0,add(d,d),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_1,add(_1,c)), -product(_3,_3,_12), -product(_3,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_1,add(_1,c)), -product(_3,_3,_12), -product(_3,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(d),d), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,d,_9), -product(_0,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -equalish(c,add(_1,c)), -product(_1,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(_0,d,d), -product(_0,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,add(_3,c)), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -equalish(c,add(c,c)), -product(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -equalish(c,add(c,c)), -product(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(c,add(_1,c)), -product(_3,_3,_12), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(c,add(_1,c)), -product(_3,_3,_12), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,add(_1,c)), -product(_1,c,_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,add(_1,c)), -product(_1,c,_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,add(_1,c)), -product(c,d,_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,add(_1,c)), -product(c,d,_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -equalish(_3,add(_1,c)), -product(_3,_3,_14), -product(_3,_14,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -equalish(_3,add(_1,c)), -product(_3,_3,_12), -product(_3,_12,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(_3,add(_1,c),_12), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(_3,add(_1,c),_12), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,add(_3,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,add(_3,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -equalish(_3,_3), -product(_3,add(_3,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -equalish(_3,_3), -product(_3,add(_3,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_15,c),c),c),add(add(add(_15,c),c),c),c), -product(add(add(add(_15,c),c),c),c,d), -equalish(add(add(_15,c),c),add(add(add(_15,c),c),c)), -product(add(add(_15,c),c),add(add(_15,c),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(add(_3,c),c),c), -product(add(add(_3,c),c),c,d), -equalish(add(_3,c),add(add(_3,c),c)), -product(add(_3,c),add(_3,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -equalish(_3,add(_3,c)), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -equalish(_3,add(_3,c)), -product(_3,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(_9,c),c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,_9,add(_9,c))]]
Ag1 <------  Send Clauses : [[-product(_0,add(_20,c),c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,_20,add(_20,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -equalish(_3,additive_identity), -product(_3,add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -equalish(_3,additive_identity), -product(_3,add(_3,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,add(_3,c)), -sum(_3,_3,additive_identity), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,add(_3,c)), -sum(_3,_3,additive_identity), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,add(_3,c)), -sum(add(_3,c),additive_identity,additive_identity), -product(_3,_3,additive_identity), -product(_3,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,add(_3,c)), -sum(add(_3,c),additive_identity,additive_identity), -product(_3,_3,additive_identity), -product(_3,_3,add(_3,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(d),_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(d),_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_18,c),c),c),add(add(add(_18,c),c),c),c), -product(add(add(add(_18,c),c),c),c,d), -equalish(add(add(_18,c),c),add(add(add(_18,c),c),c)), -sum(add(add(add(_18,c),c),c),add(add(add(_18,c),c),c),add(add(_18,c),c)), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_18,c),c),c),add(add(add(_18,c),c),c),c), -product(add(add(add(_18,c),c),c),c,d), -equalish(add(add(_18,c),c),add(add(add(_18,c),c),c)), -sum(add(add(add(_18,c),c),c),add(add(add(_18,c),c),c),add(add(_18,c),c)), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_18,c),c),c),add(add(add(_18,c),c),c),c), -product(add(add(add(_18,c),c),c),c,d), -equalish(add(add(_18,c),c),add(add(add(_18,c),c),c)), -sum(add(add(_18,c),c),add(add(add(_18,c),c),c),add(add(_18,c),c)), -sum(add(_18,c),c,additive_identity), -product(add(add(_18,c),c),add(add(add(_18,c),c),c),add(_18,c))]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_18,c),c),c),add(add(add(_18,c),c),c),c), -product(add(add(add(_18,c),c),c),c,d), -equalish(add(add(_18,c),c),add(add(_3,c),c)), -sum(add(_3,c),add(add(_3,c),c),add(_3,c)), -sum(_3,c,additive_identity), -product(add(_3,c),add(add(_3,c),c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),add(_3,c),c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -sum(add(_3,c),_3,_3), -sum(c,_3,additive_identity), -product(_3,add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),add(_3,c),c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -sum(add(_3,c),_3,_3), -sum(c,_3,additive_identity), -product(_3,add(_3,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,_3), -sum(_3,_3,additive_identity), -product(_3,add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,_3), -sum(_3,_3,additive_identity), -product(_3,add(_3,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,_3), -sum(add(_3,c),additive_identity,additive_identity), -product(_3,add(_3,c),additive_identity), -product(_3,add(_3,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,_3,_3), -sum(add(_3,c),additive_identity,additive_identity), -product(_3,add(_3,c),additive_identity), -product(_3,add(_3,c),add(_3,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_identity),_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_identity),_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,d,_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,d,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,_3,add(_3,c)), -product(add(_3,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,_3,add(_3,c)), -product(add(_3,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,add(additive_identity,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,c,_9), -product(_0,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity), -product(_0,c,_9), -product(_0,additive_identity,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,_3,add(_3,c)), -product(_3,_3,add(_3,c)), -product(add(_3,c),_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,add(additive_identity,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,_3,add(_3,c)), -product(_3,_3,add(_3,c)), -product(add(_3,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),_9), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,c,_9), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity), -product(_0,c,_9), -product(_0,additive_identity,additive_inverse(c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,c,d)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),_9), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),add(c,c),c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -product(add(c,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),add(c,c),c), -product(add(c,c),c,d), -equalish(c,add(c,c)), -product(add(c,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_15,c),c),c),add(add(add(_15,c),c),c),c), -product(add(add(add(_15,c),c),c),c,d), -equalish(add(add(_15,c),c),add(add(add(_15,c),c),c)), -product(add(add(_15,c),c),add(add(add(_15,c),c),c),add(add(_15,c),c)), -product(add(add(_15,c),c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_15,c),c),c),add(add(add(_15,c),c),c),c), -product(add(add(add(_15,c),c),c),c,d), -equalish(add(add(_15,c),c),add(add(add(_15,c),c),c)), -product(add(add(_15,c),c),add(add(add(_15,c),c),c),add(add(_15,c),c)), -product(add(add(_15,c),c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,d,_9), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,d,_9), -product(_0,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -product(_3,add(c,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -product(_3,add(c,c),_3), -product(_3,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(d,c),_3), -product(_3,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(d,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(add(_3,c),add(_3,c),_3), -product(add(_3,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(add(_3,c),add(_3,c),_3), -product(add(_3,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,add(_3,c),_3), -product(add(_3,c),_3,_3), -product(add(_3,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -product(_3,add(_3,c),_3), -product(add(_3,c),_3,_3), -product(add(_3,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,_9,_9), -product(_0,c,d)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,_9,_9), -product(_0,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,_9,_9), -product(_0,_9,d)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,_9,_9), -product(_0,_9,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,_9,_9), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,_9,_9), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_8,_3), -equalish(_3,_11), -product(_8,add(_3,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_8,_3), -equalish(_3,_11), -product(_8,add(_3,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,c,d), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,c,d), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_11,_3), -equalish(_11,_11), -product(_11,add(_11,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_11,_3), -equalish(_11,_11), -product(_11,add(_11,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_14,_3), -equalish(_3,_11), -equalish(add(_11,c),_14), -product(add(_11,c),add(_3,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_14,_3), -equalish(_3,_11), -equalish(add(_11,c),_14), -product(add(_11,c),add(_3,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_10,c),c),c),_11,c), -product(add(add(add(_10,c),c),c),c,d), -equalish(_15,add(add(add(_10,c),c),c)), -equalish(add(add(_10,c),c),_11), -product(_15,_15,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),_11,c), -product(add(add(_3,c),c),c,d), -equalish(_15,add(add(_3,c),c)), -equalish(add(_3,c),_11), -product(_15,_15,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_15,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -product(_15,add(add(_10,c),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_15,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -product(_15,add(add(_10,c),c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -equalish(add(_11,c),add(_3,c)), -product(_15,add(_11,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -equalish(add(_11,c),add(_3,c)), -product(_15,add(_11,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,additive_identity,c), -product(_3,c,d), -equalish(additive_identity,_3), -equalish(additive_identity,additive_identity), -product(additive_identity,add(additive_identity,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,additive_identity,c), -product(_3,c,d), -equalish(additive_identity,_3), -equalish(_11,additive_identity), -product(additive_identity,add(_11,c),_11)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -equalish(add(_11,c),additive_identity), -product(_15,add(_3,c),add(_11,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -equalish(add(_11,c),additive_identity), -product(_15,add(_3,c),add(_11,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(_9,_9),c), -product(_0,add(_9,_9),d), -product(_0,c,additive_identity), -product(_0,_9,add(_9,_9))]]
Ag1 <------  Send Clauses : [[-product(_0,add(_20,_20),c), -product(_0,add(_20,_20),d), -product(_0,c,additive_identity), -product(_0,_20,add(_20,_20))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -sum(add(_11,c),add(_11,c),add(_3,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_11,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -sum(add(_11,c),add(_11,c),add(_3,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_11,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -sum(add(_11,c),additive_identity,add(_3,c)), -sum(add(_3,c),add(_11,c),additive_identity), -product(_13,additive_identity,add(_11,c)), -product(_13,add(_11,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -sum(add(_11,c),additive_identity,add(_3,c)), -sum(add(_3,c),add(_11,c),additive_identity), -product(_13,additive_identity,add(_11,c)), -product(_13,add(_11,c),add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_18,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -sum(_3,_3,_18), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_18,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -sum(_3,_3,_18), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_18,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -sum(_3,_3,_18), -sum(add(add(add(_10,c),c),c),c,additive_identity), -product(_3,add(add(add(_10,c),c),c),add(add(add(_10,c),c),c))]]
Ag0 <------  Send Clauses : [[-product(_3,add(add(_11,c),c),c), -product(_3,c,d), -equalish(_18,_3), -equalish(add(_11,c),add(add(_11,c),c)), -sum(_3,_3,_18), -sum(add(add(_11,c),c),c,additive_identity), -product(_3,add(add(_11,c),c),add(add(_11,c),c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,add(_11,c),c), -product(_3,c,d), -equalish(_18,_3), -equalish(_11,add(_11,c)), -sum(_3,_3,_18), -sum(c,add(_11,c),additive_identity), -product(_3,add(_11,c),add(_11,c))]]
Ag0 <------  Send Clauses : [[-product(_3,add(_11,c),c), -product(_3,c,d), -equalish(_18,_3), -equalish(_11,add(_11,c)), -sum(_3,_3,_18), -sum(c,add(_11,c),additive_identity), -product(_3,add(_11,c),add(_11,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_18,_3), -equalish(_3,_11), -sum(add(_11,c),add(_11,c),_18), -sum(additive_identity,additive_identity,additive_identity), -product(add(_11,c),add(_3,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_18,_3), -equalish(_3,_11), -sum(add(_11,c),add(_11,c),_18), -sum(additive_identity,additive_identity,additive_identity), -product(add(_11,c),add(_3,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_18,_3), -equalish(_3,_11), -sum(add(_11,c),additive_identity,_18), -sum(add(_3,c),add(_11,c),additive_identity), -product(additive_identity,add(_3,c),add(_11,c)), -product(add(_11,c),add(_3,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_18,_3), -equalish(_3,_11), -sum(add(_11,c),additive_identity,_18), -sum(add(_3,c),add(_11,c),additive_identity), -product(additive_identity,add(_3,c),add(_11,c)), -product(add(_11,c),add(_3,c),add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_16,_3), -equalish(_3,_11), -product(_16,_16,add(_3,c)), -product(add(_3,c),_16,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -product(_13,_13,add(_3,c)), -product(add(_3,c),_13,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(_9,_9),c), -product(_0,add(_9,_9),d), -product(_0,d,additive_identity), -product(_0,_9,add(_9,_9))]]
Ag1 <------  Send Clauses : [[-product(_0,add(_20,_20),c), -product(_0,add(_20,_20),d), -product(_0,d,additive_identity), -product(_0,_20,add(_20,_20))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -product(add(_11,c),additive_identity,add(_3,c)), -product(_13,add(_11,c),add(_3,c)), -product(add(_3,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,_11), -product(add(_11,c),additive_identity,add(_3,c)), -product(_13,add(_11,c),add(_3,c)), -product(add(_3,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_10,c),c),c),add(add(add(_10,c),c),c),c), -product(add(add(add(_10,c),c),c),c,d), -equalish(c,add(add(add(_10,c),c),c)), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -product(add(add(add(_10,c),c),c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(add(_3,c),c),c), -product(add(add(_3,c),c),c,d), -equalish(c,add(add(_3,c),c)), -equalish(add(_3,c),add(add(_3,c),c)), -product(add(add(_3,c),c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_15,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -product(_3,_3,_15), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,add(add(add(_10,c),c),c),c), -product(_3,c,d), -equalish(_15,_3), -equalish(add(add(_10,c),c),add(add(add(_10,c),c),c)), -product(_3,_3,_15), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,_11), -product(_11,add(c,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,_11), -product(_11,add(c,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,_11), -product(c,add(d,c),_3), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,_11), -product(c,add(d,c),_3), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_17,_3), -equalish(_3,_11), -product(add(_3,c),add(_3,c),_17), -product(add(_3,c),_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -product(add(_3,c),add(_3,c),_15), -product(add(_3,c),_15,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -product(add(_11,c),add(_3,c),additive_identity), -product(add(_3,c),add(_11,c),_15), -product(add(_3,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,_11), -product(add(_11,c),add(_3,c),additive_identity), -product(add(_3,c),add(_11,c),_15), -product(add(_3,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,_1,add(_1,c)), -product(_8,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,_1,add(_1,c)), -product(_8,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,_1,add(_1,c)), -equalish(_3,_15), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,_1,add(_1,c)), -equalish(_3,_15), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -product(c,c,add(c,c)), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -product(c,c,add(c,c)), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -equalish(_3,c), -product(_16,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -equalish(_3,c), -product(_16,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,_9,d), -product(_0,c,additive_identity), -product(_9,d,_9), -product(_9,add(d,d),c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,_9,d), -product(_0,c,additive_identity), -product(_9,d,_9), -product(_9,add(d,d),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -equalish(_3,additive_identity), -product(_16,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -equalish(_3,additive_identity), -product(_16,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,c), -sum(add(_1,c),add(_1,c),additive_identity), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,c), -sum(add(_1,c),add(_1,c),additive_identity), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -sum(_3,add(_1,c),c), -sum(additive_identity,c,additive_identity), -product(_14,add(_1,c),c), -product(_14,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,_1,add(_1,c)), -sum(_3,add(_1,c),c), -sum(additive_identity,c,additive_identity), -product(_8,add(_1,c),c), -product(_8,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(add(c,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(add(c,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(c,_3,c), -sum(_3,c,additive_identity), -product(c,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_13,c), -product(_0,_13,d), -product(_0,_13,additive_identity), -product(_0,_13,_13), -product(_0,additive_identity,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_1,_3,c), -sum(_3,c,additive_identity), -product(_1,c,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,_9,d), -product(_0,_9,additive_identity), -product(_0,_9,_9), -product(_0,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_3,_1), -sum(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(d,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_3,_1), -sum(add(c,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_3,_1), -sum(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(d,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_3,_1), -sum(add(c,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),d,additive_identity), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),d,additive_identity), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(c,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(d,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(add(c,c),add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(c,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(c,_3,c), -sum(_3,add(c,c),additive_identity), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(d,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_3,_3,c), -sum(add(c,c),add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -sum(_1,_3,c), -sum(_3,add(c,c),additive_identity), -product(_1,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_19,_1), -sum(c,_3,additive_identity), -product(_19,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_19,_1), -sum(c,_3,additive_identity), -product(_19,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(d,add(_1,c),additive_identity), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_19,_1), -sum(add(c,c),_3,additive_identity), -product(_19,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(d,add(_1,c),additive_identity), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(c,c)), -sum(_3,_19,_1), -sum(add(c,c),_3,additive_identity), -product(_19,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,add(_1,c),_19), -sum(additive_identity,c,additive_identity), -product(add(_1,c),c,c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -sum(_3,add(_1,c),_19), -sum(additive_identity,c,additive_identity), -product(add(_1,c),c,c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -product(_14,_3,_3), -product(_3,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -product(_14,_3,_3), -product(_3,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,_1,add(_1,c)), -product(_17,_17,c), -product(c,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -product(_14,_14,c), -product(c,_14,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -product(_3,add(_1,c),c), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,add(_1,c)), -product(_3,add(_1,c),c), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -product(c,_3,c), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -product(c,_3,c), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -product(_1,_1,add(_1,c)), -product(_1,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_3,add(_3,c)), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -product(c,c,add(c,c)), -product(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -product(c,c,add(c,c)), -product(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(add(_1,c),_1), -product(_1,_1,add(_1,c)), -product(_1,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -product(_3,_3,add(_3,c)), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -product(_3,_3,_16), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -product(_3,_3,_16), -product(_3,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(_9,c),c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,_9,add(_9,c)), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,_9,_9), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_9,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),_9)]]
Ag1 <------  Send Clauses : [[-product(_0,add(_9,c),c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,_9,add(_9,c)), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_9,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),additive_identity), -product(_0,c,_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_20,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,_20,_20), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_20,d), -product(_0,c,additive_identity), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),_20)]]
Ag1 <------  Send Clauses : [[-product(_0,_20,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_20), -product(_0,_20,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_20,d), -product(_0,c,additive_identity), -product(_0,additive_inverse(c),additive_identity), -product(_0,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -product(c,_3,c), -product(c,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(c,c)), -product(c,_3,c), -product(c,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,add(_1,c)), -product(_1,c,c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,_1,add(_1,c)), -product(_1,c,c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,_1,add(_1,c)), -product(c,c,d), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,_1,add(_1,c)), -product(c,c,d), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,_1,add(_1,c)), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,_1,add(_1,c)), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(_3,_1,add(_1,c)), -product(c,c,_18), -product(c,_18,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -product(c,c,_16), -product(c,_16,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -product(_3,c,add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,add(_1,c)), -product(_3,c,add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,c,add(_1,c)), -product(_8,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,c,add(_1,c)), -product(_8,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,c,add(_1,c)), -equalish(_3,_15), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,c,add(_1,c)), -equalish(_3,_15), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -product(d,c,add(d,c)), -product(d,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -product(d,c,add(d,c)), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -equalish(_3,d), -product(_16,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -equalish(_3,d), -product(_16,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -equalish(_3,additive_identity), -product(_16,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -equalish(_3,additive_identity), -product(_16,d,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,add(c,c),d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,c,add(c,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,additive_inverse(c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,additive_identity,_9), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,add(c,c),d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,c,add(c,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(c),_9), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(_0,additive_inverse(c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -sum(_3,_3,d), -sum(add(_1,c),add(_1,c),additive_identity), -product(_14,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,additive_identity,_9), -product(_0,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -sum(_3,_3,d), -sum(add(_1,c),add(_1,c),additive_identity), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -sum(_3,add(_1,c),d), -sum(additive_identity,d,additive_identity), -product(_14,add(_1,c),d), -product(_14,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -product(_0,additive_inverse(c),_9), -product(_0,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -sum(_3,add(_1,c),d), -sum(additive_identity,d,additive_identity), -product(_14,add(_1,c),d), -product(_14,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(d,c)), -sum(_3,_3,d), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(d,c)), -sum(_3,_3,d), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(d,c)), -sum(d,_3,d), -sum(_3,c,additive_identity), -product(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(d,c)), -sum(_1,_3,d), -sum(_3,c,additive_identity), -product(_1,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(d,c)), -sum(_3,_19,_1), -sum(c,_3,additive_identity), -product(_19,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -product(_3,c,add(d,c)), -sum(_3,_19,_1), -sum(c,_3,additive_identity), -product(_19,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -sum(_3,add(_1,c),_19), -sum(additive_identity,d,additive_identity), -product(add(_1,c),d,d), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -sum(_3,add(_1,c),_19), -sum(additive_identity,d,additive_identity), -product(add(_1,c),d,d), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -product(_14,_3,_3), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -product(_14,_3,_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,c,add(_1,c)), -product(_17,_17,d), -product(d,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -product(_14,_14,d), -product(d,_14,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -product(_3,add(_1,c),d), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,add(_1,c)), -product(_3,add(_1,c),d), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -product(d,c,add(d,c)), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -product(d,c,add(d,c)), -product(d,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,c,_9), -product(_0,additive_inverse(c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(c),_9), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,c,_9), -product(_0,additive_inverse(c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(d,c)), -product(d,_3,d), -product(d,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(c),_9), -product(_0,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(d,c)), -product(d,_3,d), -product(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(_1,c)), -product(_1,d,c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(_1,c)), -product(_1,d,c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(_1,c)), -product(c,d,d), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,c,add(_1,c)), -product(c,d,d), -product(_3,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_9), -product(_0,_9,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_9), -product(_0,_9,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,c,add(_1,c)), -product(c,d,add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(_3,c,add(_1,c)), -product(c,d,add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(_3,c,add(_1,c)), -product(d,d,_18), -product(d,_18,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -product(d,d,_16), -product(d,_16,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -product(_3,d,add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,add(_1,c)), -product(_3,d,add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_8,additive_identity,add(_1,c)), -product(_8,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_8,additive_identity,add(_1,c)), -product(_8,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_8,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_14,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -equalish(_3,_15), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -equalish(_3,_15), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_3), -product(_16,_16,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_3), -product(_16,_16,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(c,d,_9), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(c,additive_identity,_9), -product(c,additive_inverse(additive_identity),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_16,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(c,d,_9), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_16,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(c,additive_identity,_9), -product(c,additive_inverse(additive_identity),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_16,_3,add(_1,c)), -product(_16,_3,_3), -equalish(_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,_9,additive_identity), -product(_7,additive_identity,_9), -product(_7,_9,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,_3), -equalish(_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_16,_3,add(_1,c)), -product(_16,_3,_3), -equalish(add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_7,additive_identity,c), -product(_7,c,d), -product(_7,additive_identity,additive_identity), -product(_7,additive_identity,additive_identity), -product(_7,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_16,_3,add(_1,c)), -product(_16,_3,_3), -equalish(add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_16,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_16,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_10,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_14,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_10,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_14,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_14,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_10,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_14,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_14,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),additive_identity), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),additive_identity), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,add(_1,c),additive_identity), -sum(_14,additive_identity,additive_identity), -product(_14,add(_1,c),additive_identity), -product(_14,_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,add(_1,c),additive_identity), -sum(_14,additive_identity,additive_identity), -product(_14,add(_1,c),additive_identity), -product(_14,_3,_14)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,additive_identity,_9), -product(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,additive_inverse(additive_identity),_9), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,additive_identity,_9), -product(c,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,additive_inverse(additive_identity),_9), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -sum(_3,_3,_19), -sum(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(c,c),add(c,c)), -product(_3,add(c,c),c), -sum(_3,_3,_19), -sum(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_19,_3,add(c,c)), -product(_19,_3,c), -sum(_3,_3,_1), -sum(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_19,_3,add(c,c)), -product(_19,_3,c), -sum(_3,_3,_11), -sum(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(_1,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_11,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_11,add(_11,c)), -product(_3,_11,_11), -sum(_3,_3,_19), -sum(_11,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -sum(additive_identity,_3,_19), -sum(_1,c,additive_identity), -product(additive_identity,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -sum(additive_identity,_3,_19), -sum(_1,c,additive_identity), -product(additive_identity,_1,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_19,_3,add(c,c)), -product(_19,_3,c), -sum(_3,_3,_1), -sum(c,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_19,_3,add(c,c)), -product(_19,_3,c), -sum(_3,_3,_1), -sum(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -sum(_3,_3,_19), -sum(d,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -sum(_3,_3,_19), -sum(d,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(add(_1,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -sum(additive_identity,_3,_19), -sum(c,d,additive_identity), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -sum(additive_identity,_3,_19), -sum(c,d,additive_identity), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(c,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(c,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(d,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(c,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(d,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,add(_1,c)), -product(_3,_1,_1), -sum(_3,_3,_19), -sum(c,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,add(_1,c)), -product(_3,c,c), -sum(_3,_3,_19), -sum(d,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -sum(_3,additive_identity,_19), -sum(c,_3,additive_identity), -product(additive_identity,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -sum(_3,additive_identity,_19), -sum(c,_3,additive_identity), -product(additive_identity,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -sum(_3,additive_identity,_19), -sum(d,_3,additive_identity), -product(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -sum(_3,additive_identity,_19), -sum(d,_3,additive_identity), -product(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,add(_11,additive_identity),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,add(_11,additive_identity),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,_11,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(add(_1,c),_3,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(d,additive_inverse(_11),c), -product(d,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,additive_identity,_9), -product(d,_11,c), -product(d,_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,additive_inverse(_11),_9), -product(d,_11,c), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,_11,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,add(_1,c),_19), -sum(_19,additive_identity,additive_identity), -product(add(_1,c),additive_identity,additive_identity), -product(_3,additive_identity,_19)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(d,additive_inverse(_11),c), -product(d,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -sum(_3,add(_1,c),_19), -sum(_19,additive_identity,additive_identity), -product(add(_1,c),additive_identity,additive_identity), -product(_3,additive_identity,_19)]]
Ag1 <------  Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(d,additive_identity,_9), -product(d,_11,c), -product(d,_11,c)]]
Ag1 <------  Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(d,additive_inverse(_11),_9), -product(d,_11,c), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(_10,_11), -product(_10,_11,add(_1,c)), -product(_10,_11,c), -product(c,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,c), -product(c,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(_10,_11), -product(_10,_11,add(_1,c)), -product(_10,_11,c), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,c), -product(add(_1,c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(_7,additive_identity,_9), -product(_7,_9,c), -product(_7,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(_7,additive_identity,_9), -product(_7,_9,c), -product(_7,c,c)]]
Ag1 <------  Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(_7,additive_identity,_9), -product(_7,_9,c), -product(_7,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(_7,additive_identity,_9), -product(_7,_9,c), -product(_7,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_9,c), -product(_7,c,d), -product(_7,c,additive_identity), -product(_7,additive_identity,_9), -product(_7,c,c), -product(_7,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -product(_14,_3,additive_identity), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,additive_identity,_9), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -product(_14,_3,additive_identity), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(_10,_11), -product(_10,_11,add(_1,c)), -product(_10,_11,d), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,d), -product(d,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(_10,_11), -product(_10,_11,add(_1,c)), -product(_10,_11,d), -product(add(_1,c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c), -product(_0,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,d), -product(add(_1,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c), -product(_0,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,c,c), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),d), -product(_14,_3,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),d), -product(_14,_3,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,additive_identity,c), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,_9,c), -product(_0,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,c,_9), -product(_0,_9,c), -product(_0,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_11,_3), -product(_11,_11,add(_1,c)), -product(_11,_11,_3), -product(_3,_11,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_14,add(_1,c)), -product(_14,_14,_3), -product(_3,_14,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_14,_3,_3), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_14,_3,_3), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,add(_1,c)), -product(_10,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,add(_1,c)), -product(_14,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_17,_17,additive_identity), -product(additive_identity,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_14,_14,additive_identity), -product(additive_identity,_14,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_14,_3,_14), -product(_14,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_14,_3,_14), -product(_14,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -product(_1,c,add(_1,c)), -product(_1,c,_1), -product(_1,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(_3,c)), -product(_3,c,_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(_1,_11), -product(_1,_11,add(_1,c)), -product(_1,_11,_1), -product(_1,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -product(_1,_3,add(_1,c)), -product(_1,_3,_1), -product(_1,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(add(_1,c),_11), -product(add(_1,c),_11,add(_1,c)), -product(add(_1,c),_11,_1), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,_1), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -product(additive_identity,_3,_16), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_1), -product(additive_identity,_3,_16), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -product(_1,c,add(_1,c)), -product(_1,c,c), -product(_1,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,add(_3,c)), -product(_3,c,c), -product(_3,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -product(c,d,add(c,c)), -product(c,d,c), -product(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -product(_3,d,add(c,c)), -product(_3,d,c), -product(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(c,_11), -product(c,_11,add(_1,c)), -product(c,_11,c), -product(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(c,_3,add(_1,c)), -product(c,_3,c), -product(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_11,_1,c), -product(_11,c,d), -equalish(add(_1,c),_11), -product(add(_1,c),_11,add(_1,c)), -product(add(_1,c),_11,c), -product(add(_1,c),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,c), -product(add(_1,c),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -product(additive_identity,_3,_16), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),c), -product(additive_identity,_3,_16), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(add(_0,_0),c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(add(c,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_1,c,add(_1,c)), -product(_1,c,c), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_1,c,add(_1,c)), -product(_1,c,c), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(c,d,add(_1,c)), -product(c,d,d), -product(_3,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(c,d,add(_1,c)), -product(c,d,d), -product(_3,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(d,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,_0,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(additive_identity),c,_0)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(additive_identity),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(c,_3,add(_1,c)), -product(c,_3,add(_1,c)), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(c,_3,add(_1,c)), -product(c,_3,add(_1,c)), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,additive_identity,d), -product(additive_identity,c,additive_identity), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(d,_3,add(_1,c)), -product(d,_3,add(_1,c)), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,additive_identity,d), -product(additive_identity,c,additive_identity), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(d,_3,add(_1,c)), -product(d,_3,add(_1,c)), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_17), -product(add(_1,c),_17,additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_16), -product(add(_1,c),_16,additive_identity), -product(_3,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,d,additive_identity), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(additive_identity,additive_identity,_18), -product(additive_identity,_18,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(additive_identity,additive_identity,_16), -product(additive_identity,_16,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c)), -product(_16,_3,_16), -product(_16,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c)), -product(_16,_3,_16), -product(_16,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity), -product(c,c,_0)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),c,c), -product(additive_inverse(additive_identity),_0,d), -product(additive_inverse(additive_identity),_0,additive_identity), -product(additive_identity,c,_0)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(_3,additive_identity), -product(_8,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(_3,additive_identity), -product(_8,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(multiply(_8,add(_1,c)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),c,c), -product(additive_inverse(additive_identity),c,d), -product(additive_inverse(additive_identity),c,additive_identity), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -equalish(multiply(_8,add(_1,c)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -product(_12,add(_1,c),_12)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -product(_12,add(_1,c),_12)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,c), -product(add(_0,c),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,c), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_inverse(_0),c,c), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,_0,d), -product(additive_identity,c,additive_identity), -product(c,c,_0), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,c), -product(add(_0,c),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),c,c), -product(additive_inverse(_0),c,d), -product(additive_inverse(_0),c,additive_identity), -product(_0,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -equalish(add(_1,c),_3), -product(_12,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -equalish(add(_1,c),_3), -product(_12,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_inverse(c),c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(c,c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(c),c,c), -product(additive_inverse(c),c,d), -product(additive_inverse(c),c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_10,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_10,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_10,add(_1,c),add(_1,c)), -product(_10,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_10,add(_1,c),add(_1,c)), -product(_10,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_10,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_10,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,additive_identity,_3), -product(_10,additive_identity,additive_identity), -product(_10,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,additive_identity,_3), -product(_10,additive_identity,additive_identity), -product(_10,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_15,additive_identity), -sum(_3,_3,_15), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_15,additive_identity), -sum(_3,_3,_15), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_15,additive_identity), -sum(_3,add(_1,c),_15), -product(add(_1,c),add(_1,c),add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_15,additive_identity), -sum(_3,add(_1,c),_15), -product(add(_1,c),add(_1,c),add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,additive_identity), -sum(add(_1,c),add(_1,c),_15), -sum(additive_identity,additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,additive_identity), -sum(add(_1,c),add(_1,c),_15), -sum(additive_identity,additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,additive_identity), -sum(add(_1,c),additive_identity,_15), -sum(_3,additive_identity,_3), -product(additive_identity,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -equalish(_3,additive_identity), -sum(add(_1,c),additive_identity,_15), -sum(_3,additive_identity,_3), -product(additive_identity,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -equalish(c,additive_identity), -product(_3,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(add(_1,c),c),add(_1,c),c), -product(add(add(_1,c),c),c,d), -equalish(add(_1,c),add(add(_1,c),c)), -equalish(c,additive_identity), -product(add(_1,c),add(_1,c),add(add(_1,c),c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -equalish(d,additive_identity), -product(c,c,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -equalish(d,additive_identity), -product(c,c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -equalish(_3,additive_identity), -product(_13,_13,add(_1,c)), -product(add(_1,c),_13,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -product(_10,_10,add(_1,c)), -product(add(_1,c),_10,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(c,additive_identity), -product(_3,_1,add(_1,c)), -product(_10,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(c,additive_identity), -product(_3,_1,add(_1,c)), -product(_10,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(d,additive_identity), -product(_3,c,add(_1,c)), -product(_10,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(d,additive_identity), -product(_3,c,add(_1,c)), -product(_10,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_10,additive_identity), -product(_3,_3,add(_1,c)), -product(_10,_3,_10)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_10,additive_identity), -product(_3,_3,add(_1,c)), -product(_10,_3,_10)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_10,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_10,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -product(add(_1,c),additive_identity,add(_1,c)), -product(_10,add(_1,c),_3), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -equalish(_3,additive_identity), -product(add(_1,c),additive_identity,add(_1,c)), -product(_10,add(_1,c),_3), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,additive_identity), -product(_1,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,additive_identity), -product(_1,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(d,additive_identity), -product(_1,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -equalish(d,additive_identity), -product(_1,add(_1,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -equalish(add(_3,c),additive_identity), -product(_3,add(_3,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -equalish(add(_3,c),additive_identity), -product(_3,add(_3,c),add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,additive_identity), -product(_1,add(_1,c),_3), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -equalish(c,additive_identity), -product(_1,add(_1,c),_3), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,additive_identity), -product(c,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(c,additive_identity), -product(c,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,additive_identity), -product(c,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(d,c), -equalish(d,additive_identity), -product(c,add(_1,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -equalish(add(_3,c),additive_identity), -product(c,add(_3,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -equalish(add(_3,c),additive_identity), -product(c,add(_3,c),add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,additive_identity), -product(c,add(_1,c),_3), -product(_3,_3,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -equalish(d,additive_identity), -product(c,add(_1,c),_3), -product(_3,_3,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -equalish(c,additive_identity), -product(add(_3,c),add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(add(add(_1,c),c),add(_1,c),c), -product(add(add(_1,c),c),c,d), -equalish(add(_1,c),add(add(_1,c),c)), -equalish(c,additive_identity), -product(add(add(_1,c),c),add(add(_1,c),c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -equalish(d,additive_identity), -product(add(_3,c),add(_3,c),c)]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -equalish(d,additive_identity), -product(add(_3,c),add(_3,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -equalish(_3,additive_identity), -product(add(_1,c),add(_1,c),_14), -product(add(_1,c),_14,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -product(add(_1,c),add(_1,c),_12), -product(add(_1,c),_12,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(c,additive_identity), -product(_3,add(_1,c),_1), -product(_3,_3,_12)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(c,additive_identity), -product(_3,add(_1,c),_1), -product(_3,_3,_12)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(add(_0,_0),d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(d,additive_identity), -product(_3,add(_1,c),c), -product(_3,_3,_12)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(c,d,d), -product(c,d,additive_identity), -product(add(c,c),d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(d,additive_identity), -product(_3,add(_1,c),c), -product(_3,_3,_12)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_12,additive_identity), -product(_3,add(_1,c),_3), -product(add(_1,c),_3,_12)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_12,additive_identity), -product(_3,add(_1,c),_3), -product(add(_1,c),_3,_12)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_3,_3,_12)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_3,_3,_12)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -product(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),_12), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_12,_3), -equalish(_3,additive_identity), -product(add(_1,c),add(_1,c),additive_identity), -product(_3,add(_1,c),_12), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,_1,additive_identity), -product(_8,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,_1,additive_identity), -product(_15,add(_1,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,_1,additive_identity), -equalish(_3,_15), -product(_3,add(_1,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,_1,additive_identity), -equalish(_3,_15), -product(_3,add(_1,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(c,d,d)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(add(add(add(_1,c),c),c),add(add(_1,c),c),additive_identity), -product(add(_1,c),add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -product(add(add(_3,c),c),add(_3,c),additive_identity), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -equalish(_3,add(_1,c)), -product(_16,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -equalish(_3,add(_1,c)), -product(_16,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -product(c,c,additive_identity), -product(c,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -product(c,c,additive_identity), -product(_3,add(c,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(c,d,d), -product(c,c,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -equalish(_3,c), -product(_16,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -equalish(_3,c), -product(_16,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),c), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),c), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,c,c), -product(_14,add(_1,c),c), -product(_14,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,c,c), -product(_14,add(_1,c),c), -product(_14,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(additive_identity,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,_0,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(additive_identity),_0,_0)]]
Ag1 <------  Send Clauses : [[-product(_20,d,c), -product(_20,d,d), -product(_20,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,c,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(additive_identity),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,additive_identity), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,additive_identity), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,additive_identity), -sum(_3,add(_1,c),_19), -sum(additive_identity,c,c), -product(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,_1,additive_identity), -sum(_3,add(_1,c),_19), -sum(additive_identity,c,c), -product(add(_1,c),add(_1,c),c), -product(_3,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,additive_identity,d), -product(additive_identity,d,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,additive_identity,d), -product(additive_identity,d,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -product(add(_3,c),_3,additive_identity), -product(_3,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -product(add(_3,c),_3,additive_identity), -product(_3,_3,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,_1,additive_identity), -product(_17,_17,add(_1,c)), -product(add(_1,c),_17,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -product(_14,_14,add(_1,c)), -product(add(_1,c),_14,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -product(_3,_1,add(_1,c)), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -product(_3,_1,add(_1,c)), -product(_14,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,_1,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,_0,d), -product(additive_identity,_0,additive_identity), -product(d,_0,_0)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),d,c), -product(additive_inverse(additive_identity),_0,d), -product(additive_inverse(additive_identity),_0,additive_identity), -product(additive_identity,_0,_0)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(d,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),d,c), -product(additive_inverse(additive_identity),c,d), -product(additive_inverse(additive_identity),c,additive_identity), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,_1,additive_identity), -product(c,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,_1,additive_identity), -product(c,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,_1,additive_identity), -product(c,add(_1,c),d), -product(_3,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,_1,additive_identity), -product(c,add(_1,c),d), -product(_3,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -product(add(_3,c),_3,additive_identity), -product(add(_3,c),add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -product(add(_3,c),_3,additive_identity), -product(add(_3,c),add(_3,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(_3,_1,additive_identity), -product(add(_1,c),add(_1,c),_18), -product(add(_1,c),_18,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -product(add(_1,c),add(_1,c),_16), -product(add(_1,c),_16,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_11,d,c), -product(_11,_11,d), -product(_11,_11,additive_identity), -product(additive_identity,_11,_11)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -product(_3,add(_1,c),_1), -product(_3,_3,_16)]]
Ag1 <------  Send Clauses : [[-product(_11,d,c), -product(_11,_11,d), -product(_11,_11,additive_identity), -product(additive_identity,_11,_11)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -product(_3,add(_1,c),_1), -product(_3,_3,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,_1,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(d,d,d), -product(add(_0,d),d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(additive_identity,d,d), -product(_0,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(additive_inverse(_0),d,d), -product(additive_identity,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,_0,d), -product(additive_identity,d,additive_identity), -product(c,_0,_0), -product(c,_0,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),d,c), -product(additive_inverse(_0),d,d), -product(additive_inverse(_0),c,additive_identity), -product(_0,d,d), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(c,d,d), -product(c,c,additive_identity), -product(d,d,d), -product(add(c,d),d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,c,additive_identity), -product(_8,add(_1,c),d)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(c,d,d), -product(c,c,additive_identity), -product(additive_identity,d,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,c,additive_identity), -product(_15,add(_1,c),d)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(c,d,d), -product(c,c,additive_identity), -product(additive_inverse(c),d,d), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,c,d), -product(additive_identity,d,additive_identity), -product(c,c,c), -product(c,c,d)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(c),d,c), -product(additive_inverse(c),d,d), -product(additive_inverse(c),c,additive_identity), -product(c,d,d), -product(additive_identity,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,c,additive_identity), -equalish(_3,_15), -product(_3,add(_1,c),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,c,additive_identity), -equalish(_3,_15), -product(_3,add(_1,c),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(add(add(add(_1,c),c),c),c,additive_identity), -product(add(_1,c),add(_1,c),d)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -product(add(add(_3,c),c),c,additive_identity), -product(_3,_3,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -equalish(_3,add(_1,c)), -product(_16,_3,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -equalish(_3,add(_1,c)), -product(_16,_3,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -product(d,c,additive_identity), -product(d,add(d,c),d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -product(d,c,additive_identity), -product(_3,add(d,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -equalish(_3,d), -product(_16,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -equalish(_3,d), -product(_16,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),d), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),d), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,d,d), -product(_14,add(_1,c),d), -product(_14,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(additive_identity,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,d,d), -product(_14,add(_1,c),d), -product(_14,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,additive_identity), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,additive_identity), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,additive_identity), -sum(_3,add(_1,c),_19), -sum(additive_identity,d,d), -product(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,c,additive_identity), -sum(_3,add(_1,c),_19), -sum(additive_identity,d,d), -product(add(_1,c),add(_1,c),d), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(add(_3,c),c,additive_identity), -product(c,c,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(add(_3,c),c,additive_identity), -product(c,c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,c,additive_identity), -product(_17,_17,add(_1,c)), -product(add(_1,c),_17,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -product(_14,_14,add(_1,c)), -product(add(_1,c),_14,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -product(_3,c,add(_1,c)), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -product(_3,c,add(_1,c)), -product(_14,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(add(_0,_0),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(add(c,c),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),d)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,c,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(_14,_3,additive_identity), -product(additive_identity,add(_1,c),d)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(d,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(c,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(c,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,additive_identity), -product(_1,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,additive_identity), -product(_1,add(_1,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,additive_identity), -product(_1,add(_1,c),c), -product(_3,c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_3,c,additive_identity), -product(_1,add(_1,c),c), -product(_3,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(add(_3,c),c,additive_identity), -product(add(_3,c),add(_3,c),c)]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(add(_3,c),c,additive_identity), -product(add(_3,c),add(_3,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(_3,c,additive_identity), -product(add(_1,c),add(_1,c),_18), -product(add(_1,c),_18,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -product(add(_1,c),add(_1,c),_16), -product(add(_1,c),_16,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -product(_3,add(_1,c),c), -product(_3,_3,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -product(_3,add(_1,c),c), -product(_3,_3,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,c,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,_0,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,_0)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,c,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_8,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_8,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),multiply(_8,add(_1,c)))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_8,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),multiply(_8,add(_1,c)))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_11,additive_identity,c), -product(_11,_11,d), -product(_11,additive_identity,additive_identity), -product(_11,additive_identity,_11)]]
Ag1 <------  Send Clauses : [[-product(_18,additive_identity,c), -product(_18,_18,d), -product(_18,additive_identity,additive_identity), -product(_18,additive_identity,_18)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_20,additive_identity,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(_20,c,_20)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(d,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_20,additive_identity,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,_20)]]
Ag1 <------  Send Clauses : [[-product(_20,additive_identity,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -equalish(_3,_15), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -equalish(_3,_15), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(add(_1,c),c),additive_identity), -product(_1,add(add(_1,c),c),add(add(_1,c),c)), -product(add(_1,c),add(_1,c),add(add(_1,c),c))]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -product(_1,add(add(_1,c),c),additive_identity), -product(_1,add(add(_1,c),c),add(add(_1,c),c)), -product(add(_1,c),add(_1,c),add(add(_1,c),c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(additive_identity,c,additive_identity), -product(add(_0,additive_identity),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(additive_identity,c,additive_identity), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(additive_inverse(_0),c,additive_identity), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,_0,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_0), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(_14),additive_identity,c), -product(additive_inverse(_14),additive_identity,d), -product(additive_inverse(_14),c,additive_identity), -product(additive_identity,c,additive_identity), -product(add(additive_inverse(_14),additive_identity),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),additive_identity,c), -product(additive_inverse(_0),additive_identity,d), -product(additive_inverse(_0),c,additive_identity), -product(_0,c,additive_identity), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(additive_identity,c,additive_identity), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c), -product(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_16,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(additive_inverse(c),c,additive_identity), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_16,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,c,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(c),additive_identity,c), -product(additive_inverse(c),additive_identity,d), -product(additive_inverse(c),c,additive_identity), -product(c,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,additive_identity), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c), -product(d,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_16,add(_1,c),_16)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,additive_identity), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_16,add(_1,c),_16)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d), -product(d,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_16,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -equalish(_3,additive_identity), -product(_16,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,additive_identity,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(c,_13,additive_identity), -product(_13,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_13,additive_identity,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(c,_13,additive_identity), -product(_13,_13,_13)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_16,additive_identity,c), -product(_16,additive_identity,d), -product(_16,c,additive_identity), -product(c,c,additive_identity), -product(_16,c,c), -product(_16,additive_identity,_16)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,c,additive_identity), -product(c,c,additive_identity), -product(d,c,c), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),add(_1,c)), -product(_10,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -product(_10,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(additive_identity,_3,additive_identity), -product(_10,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),_3,add(_1,c)), -product(_10,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,_3,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_11,additive_identity,c), -product(_11,_11,d), -product(_11,additive_identity,additive_identity), -product(additive_identity,additive_identity,_11), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_14,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_11,additive_identity,c), -product(_11,_11,d), -product(_11,additive_identity,additive_identity), -product(additive_identity,additive_identity,_11), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_14,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -sum(_14,add(_1,c),additive_identity), -product(_14,additive_identity,add(_1,c)), -product(_14,_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -sum(_14,add(_1,c),additive_identity), -product(_14,additive_identity,add(_1,c)), -product(_14,_3,_14)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,additive_identity,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(additive_identity,_13,additive_identity), -product(additive_identity,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_13,additive_identity,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(additive_identity,_13,additive_identity), -product(additive_identity,_13,_13)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(additive_identity),_0,_0)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(additive_identity,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(additive_identity),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(additive_identity,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(add(_1,c),additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,_3,_19), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,additive_identity,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,_19), -sum(_3,additive_identity,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(additive_identity,_3,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,_19), -sum(additive_identity,_3,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,_19), -sum(additive_identity,additive_identity,additive_identity), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,_3,_19), -sum(additive_identity,additive_identity,additive_identity), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,additive_identity,_19), -sum(_19,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -sum(_3,additive_identity,_19), -sum(_19,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),add(_1,c)), -product(_3,add(_1,c),_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -product(_1,_10,additive_identity), -product(_1,_10,c), -product(_10,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -product(_1,_10,additive_identity), -product(_1,_10,c), -product(_10,d,add(d,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -product(_1,_10,additive_identity), -product(_1,_10,d), -product(_10,c,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -product(_1,_10,additive_identity), -product(_1,_10,d), -product(_10,c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -product(_10,_3,additive_identity), -product(_10,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_14,_3,additive_identity), -product(_14,_3,add(_1,c)), -product(_3,additive_identity,add(_1,c)), -product(additive_identity,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -product(_1,_17,additive_identity), -product(_1,_17,c), -product(_3,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(add(_1,c),c),add(_1,c),c), -product(add(add(_1,c),c),c,d), -equalish(add(_1,c),add(add(_1,c),c)), -product(_1,c,additive_identity), -product(_1,c,c), -product(add(_1,c),add(_1,c),add(add(_1,c),c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(_1,_17,additive_identity), -product(_1,_17,d), -product(c,c,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(_1,_17,additive_identity), -product(_1,_17,d), -product(c,c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(add(_1,c),_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_14,_14,add(_1,c)), -product(add(_1,c),_14,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,c,d), -product(additive_identity,_0,additive_identity), -product(_9,_0,_0)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_0,c), -product(additive_inverse(additive_identity),c,d), -product(additive_inverse(additive_identity),_0,additive_identity), -product(additive_identity,_0,_0)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),c), -product(additive_identity,_1,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_18,c), -product(additive_identity,c,d), -product(additive_identity,_18,additive_identity), -product(_9,_18,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),c), -product(additive_identity,_1,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),d), -product(additive_identity,c,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_18,c), -product(additive_inverse(additive_identity),c,d), -product(additive_inverse(additive_identity),_18,additive_identity), -product(additive_identity,_18,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),d), -product(additive_identity,c,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c)), -product(_14,_3,_14), -product(_14,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c)), -product(_14,_3,_14), -product(_14,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_1,add(_1,c),additive_identity), -product(_1,add(_1,c),c), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_1,add(_1,c),additive_identity), -product(_1,add(_1,c),c), -product(_3,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,c,d), -product(_9,_9,additive_identity), -product(additive_identity,_9,_9)]]
Ag1 <------  Send Clauses : [[-product(_18,_18,c), -product(_18,c,d), -product(_18,_18,additive_identity), -product(additive_identity,_18,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(_1,c),additive_identity), -product(c,add(_1,c),d), -product(_3,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(_1,c),additive_identity), -product(c,add(_1,c),d), -product(_3,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,_9,_9), -product(add(c,_0),_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,c,d), -product(additive_identity,_9,additive_identity), -product(c,_0,_0), -product(c,_0,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),_9,c), -product(additive_inverse(_0),c,d), -product(additive_inverse(_0),c,additive_identity), -product(_0,_9,_9), -product(additive_identity,_9,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_16,add(c,c),additive_identity), -product(_16,add(c,c),c), -product(_3,_16,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,_9,_9), -product(add(c,_0),_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,_9,_9), -product(_0,_9,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -product(_16,add(c,c),additive_identity), -product(_16,add(c,c),c), -product(_3,_16,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_inverse(_0),_9,_9), -product(additive_identity,_9,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,_9,additive_identity), -product(c,c,c), -product(c,c,_9)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(d),_9,c), -product(additive_inverse(d),c,d), -product(additive_inverse(d),c,additive_identity), -product(d,_9,_9), -product(additive_identity,_9,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_18,_9,c), -product(_18,c,d), -product(_18,c,additive_identity), -product(additive_identity,_9,_9), -product(_18,_9,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_inverse(c),_9,_9), -product(additive_identity,_9,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_1,add(_1,c),additive_identity), -product(_1,add(_1,c),c), -product(_3,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(_1,add(_1,c),additive_identity), -product(_1,add(_1,c),c), -product(_3,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,additive_identity,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,additive_identity,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(additive_identity,c),additive_identity), -product(c,add(additive_identity,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(_1,c),additive_identity), -product(c,add(_1,c),d), -product(_3,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(c,add(_1,c),additive_identity), -product(c,add(_1,c),d), -product(_3,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,additive_identity,c), -product(_3,c,d), -equalish(_1,_3), -product(_16,add(additive_identity,c),additive_identity), -product(_16,add(additive_identity,c),c), -product(_3,_16,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,additive_identity,c), -product(_3,c,d), -equalish(_1,_3), -product(_16,add(additive_identity,c),additive_identity), -product(_16,add(additive_identity,c),c), -product(_3,_16,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(additive_identity,_3,_16), -product(additive_identity,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(c,_3,additive_identity), -product(c,_3,d), -product(_1,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_10,_1,c), -product(_10,c,d), -equalish(c,_10), -product(c,_10,additive_identity), -product(c,_10,d), -product(_1,add(_1,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(c,_3,additive_identity), -product(c,_3,add(_1,c)), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -product(c,_3,additive_identity), -product(c,_3,add(_1,c)), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(d,_3,additive_identity), -product(d,_3,c), -product(c,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(d,_3,additive_identity), -product(d,_3,c), -product(c,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,d,additive_identity), -product(_3,d,_3), -product(c,add(_1,c),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(_3,d,additive_identity), -product(_3,d,_3), -product(c,add(_1,c),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(d,_3,additive_identity), -product(d,_3,add(_1,c)), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -product(d,_3,additive_identity), -product(d,_3,add(_1,c)), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -product(_1,_18,additive_identity), -product(_1,_18,c), -product(add(_3,c),add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(add(add(_1,c),c),add(_1,c),c), -product(add(add(_1,c),c),c,d), -equalish(add(_1,c),add(add(_1,c),c)), -product(_1,c,additive_identity), -product(_1,c,c), -product(add(add(_1,c),c),add(add(_1,c),c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(_1,_18,additive_identity), -product(_1,_18,d), -product(add(_3,c),add(_3,c),c)]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -product(_1,_11,additive_identity), -product(_1,_11,d), -product(add(_3,c),add(_3,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(add(_1,c),_18,additive_identity), -product(add(_1,c),_18,_3), -product(add(_1,c),add(_1,c),_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(add(_1,c),_18,additive_identity), -product(add(_1,c),_18,_3), -product(add(_1,c),add(_1,c),_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_18), -product(add(_1,c),_18,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_16), -product(add(_1,c),_16,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),c), -product(additive_identity,add(_1,c),_1), -product(_3,additive_identity,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),c), -product(additive_identity,add(_1,c),_1), -product(_3,additive_identity,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),d), -product(additive_identity,add(_1,c),c), -product(_3,additive_identity,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),d), -product(additive_identity,add(_1,c),c), -product(_3,additive_identity,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_16,_3,_16), -product(_16,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),additive_identity), -product(_16,_3,_16), -product(_16,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_6,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_6,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_6,additive_identity), -product(_6,add(_1,c),_6), -product(_6,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(_13,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_6,_3),additive_identity,additive_identity), -product(_6,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_6,_3),additive_identity,additive_identity), -product(_6,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_6,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_6,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_6,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_14,_3,add(_1,c)), -equalish(_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_14,_3,add(_1,c)), -equalish(_3,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_14,_3,add(_1,c)), -equalish(_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_14,_3,add(_1,c)), -equalish(_3,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_14,additive_identity), -product(_14,add(_1,c),_14), -equalish(_3,_14), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_14,additive_identity), -product(_14,add(_1,c),_14), -equalish(_3,_14), -product(_3,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,d,additive_identity), -product(additive_identity,d,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(additive_identity),d,_0)]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,d,d), -product(c,d,additive_identity), -product(additive_identity,d,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_15,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,_15,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(additive_identity),d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_15,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,_15,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_15,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_15,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -equalish(add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -equalish(_3,_3), -product(_15,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -equalish(_3,_3), -product(_15,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_15,additive_identity), -product(_15,_3,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_15,additive_identity), -product(_15,_3,_15)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(d,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_15)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(d,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -equalish(additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -equalish(additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -equalish(_3,additive_identity), -product(_15,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -equalish(_3,additive_identity), -product(_15,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,d,d), -product(additive_identity,_0,additive_identity), -product(_9,d,_0)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_0,c), -product(additive_inverse(additive_identity),d,d), -product(additive_inverse(additive_identity),_0,additive_identity), -product(additive_identity,d,_0)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_18,c), -product(additive_identity,d,d), -product(additive_identity,_18,additive_identity), -product(_9,d,_18)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_18,c), -product(additive_inverse(additive_identity),d,d), -product(additive_inverse(additive_identity),_18,additive_identity), -product(additive_identity,d,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -sum(_13,additive_identity,add(_1,c)), -product(_13,add(_1,c),_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -sum(_13,additive_identity,add(_1,c)), -product(_13,add(_1,c),_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_13,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_13,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -sum(_13,add(_1,c),add(_1,c)), -product(_13,_3,add(_1,c)), -product(_13,add(_1,c),_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -sum(_13,add(_1,c),add(_1,c)), -product(_13,_3,add(_1,c)), -product(_13,add(_1,c),_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_13,_3,_3), -sum(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_13,_3,_3), -sum(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,_3,_3), -sum(additive_identity,_3,add(_1,c)), -product(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,_3,_3), -sum(additive_identity,_3,add(_1,c)), -product(_13,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(d,d,_9), -product(add(d,_0),d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(d,d,_9), -product(add(d,_0),d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,d,d), -product(additive_identity,_9,additive_identity), -product(c,d,_0), -product(c,d,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),_9,c), -product(additive_inverse(_0),d,d), -product(additive_inverse(_0),c,additive_identity), -product(_0,d,_9), -product(additive_identity,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(additive_identity,d,_9), -product(_0,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,d,d), -product(_0,c,additive_identity), -product(additive_inverse(_0),d,_9), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,d,d), -product(additive_identity,_9,additive_identity), -product(c,d,c), -product(c,d,_9)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(d),_9,c), -product(additive_inverse(d),d,d), -product(additive_inverse(d),c,additive_identity), -product(d,d,_9), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_9,c), -product(additive_identity,d,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_13,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,d,d), -product(c,c,additive_identity), -product(additive_inverse(c),d,c), -product(additive_identity,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_13,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c)), -product(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c)), -product(_13,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -sum(_13,additive_identity,add(_1,c)), -product(_13,additive_identity,additive_identity), -product(_13,add(_1,c),_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -sum(_13,additive_identity,add(_1,c)), -product(_13,additive_identity,additive_identity), -product(_13,add(_1,c),_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,_3,_3), -sum(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,_3,_3), -sum(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_13,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_13,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,add(_1,c),_3), -sum(add(_1,c),additive_identity,_3), -product(_13,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,add(_1,c),_3), -sum(add(_1,c),additive_identity,_3), -product(_13,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_13,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_13,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_3,_3), -product(_13,_3,add(_1,c)), -product(_13,_13,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_3,_3), -product(_13,_3,add(_1,c)), -product(_13,_13,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,add(_1,c),_3), -product(_13,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,add(_1,c),_3), -product(_13,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_13,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_13,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3), -product(_13,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3), -product(_13,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_3,_3), -product(_13,_3,additive_identity), -product(_13,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_3,_3), -product(_13,_3,additive_identity), -product(_13,_13,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(additive_identity,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_13,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_13,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_13,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_13,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_13,_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_13,_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_3,_3), -product(_13,_3,_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -sum(_13,_3,_3), -product(_13,_3,_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(add(_1,c),add(_1,c),_3), -sum(_13,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(add(_1,c),add(_1,c),_3), -sum(_13,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(_3,add(_1,c),_3), -sum(add(_1,c),_13,additive_identity), -product(_13,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(_3,add(_1,c),_3), -sum(add(_1,c),_13,additive_identity), -product(_13,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(add(_1,c),_3,_3), -sum(_13,add(_1,c),additive_identity), -product(_13,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(add(_1,c),_3,_3), -sum(_13,add(_1,c),additive_identity), -product(_13,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(_3,_3,_3), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(_3,_3,_3), -sum(add(_1,c),add(_1,c),additive_identity), -product(_13,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(_3,add(_1,c),_3), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(_13,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -sum(_3,add(_1,c),_3), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(_13,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,_0)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),c,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(add(c,c),c,_3), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_20,_9,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(d,additive_identity,_9), -product(_20,c,_20)]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(d,additive_identity,_9), -product(_20,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -product(add(d,c),d,d), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,additive_identity,d), -product(_9,additive_identity,additive_identity), -product(_9,additive_identity,_9)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),_3,additive_identity), -product(add(d,c),d,_3), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(_20,_20,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(_20,additive_identity,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_20,_9,c), -product(_20,additive_identity,d), -product(_20,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_9,c,_20)]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_9,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -product(add(c,c),_3,_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -product(add(c,c),_3,_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(add(_1,c),_3,c), -product(_1,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(add(_1,c),_3,c), -product(_1,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(add(_1,c),_3,d), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(add(_1,c),_3,d), -product(c,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(add(additive_identity,_0),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,additive_identity,d), -product(additive_identity,_9,additive_identity), -product(c,_9,_0), -product(c,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),_9,c), -product(additive_inverse(_0),additive_identity,d), -product(additive_inverse(_0),c,additive_identity), -product(_0,c,_9), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -product(additive_inverse(_0),c,_9), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(additive_identity,c,_9), -product(add(additive_identity,c),c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(c,d,d), -product(c,d,d)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,additive_identity,d), -product(additive_identity,_9,additive_identity), -product(c,_9,d), -product(c,_9,_9)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_9,c), -product(additive_inverse(additive_identity),additive_identity,d), -product(additive_inverse(additive_identity),c,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_9,c), -product(_13,additive_identity,d), -product(_13,c,additive_identity), -product(additive_inverse(_13),c,_9), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),_3,add(_1,c)), -sum(c,c,_1)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,_18,additive_identity), -product(c,_18,d), -product(c,_18,_18)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,add(c,c),additive_identity), -product(add(c,c),c,add(c,c)), -sum(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(d,c,c), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),c,_1), -sum(d,c,_3)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(d,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),c,_1), -sum(d,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,_3), -sum(add(_1,c),c,add(_1,c)), -product(_1,_1,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(d,d,d), -product(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,_3), -sum(add(_1,c),c,add(_1,c)), -product(_1,_1,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,d,additive_identity), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(d,d,d), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),c,_1), -sum(c,d,_3)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(d,d,d), -product(additive_identity,d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),c,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),c,add(_1,c)), -sum(d,d,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,_9,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(d,_13,_9), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),c,add(_1,c)), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,_3), -sum(add(_1,c),d,add(_1,c)), -product(c,c,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_18,_9,c), -product(_18,additive_identity,d), -product(_18,_18,additive_identity), -product(d,_18,_9), -product(_18,_18,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,_3), -sum(add(_1,c),d,add(_1,c)), -product(c,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_9,c), -product(_18,additive_identity,d), -product(_18,c,additive_identity), -product(d,c,_9), -product(_18,c,c), -product(_18,additive_identity,_18)]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,additive_identity,d), -product(c,c,additive_identity), -product(d,c,_9), -product(c,c,c), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(additive_identity,d,d), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_3,c),_1,_3), -sum(c,add(_1,c),add(_1,c)), -product(_1,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_1,add(c,c)), -sum(add(_1,c),c,additive_identity), -product(add(c,c),_1,c), -sum(c,add(_1,c),add(_1,c)), -product(_1,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_3,c),_1,_3), -sum(d,add(_1,c),add(_1,c)), -product(_1,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_3,c),_1,_3), -sum(d,add(_1,c),add(_1,c)), -product(_1,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_18,additive_identity), -product(_1,c,_18), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_18,additive_identity), -product(_1,c,_18), -sum(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,d,additive_identity), -product(c,d,d), -product(c,d,d), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(_1,c,c), -sum(_1,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(_1,c,c), -sum(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,c,_3), -sum(add(_1,c),_3,_18), -product(add(_1,c),_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,c,_3), -sum(add(_1,c),_3,_18), -product(add(_1,c),_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_18,additive_identity), -product(_1,d,_18), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_18,additive_identity), -product(_1,d,_18), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,d,_3), -sum(add(_1,c),_3,_18), -product(add(_1,c),c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,d,_3), -sum(add(_1,c),_3,_18), -product(add(_1,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(_1,c,c), -sum(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(_1,c,c), -sum(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,_3,_3), -sum(_18,_18,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,_3,_3), -sum(_18,_18,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,_3,_3), -sum(add(_1,c),_18,_18), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,_3,_3), -sum(add(_1,c),_18,_18), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_18,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,_18,_3), -sum(_3,add(_1,c),_1), -product(add(_1,c),c,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_18,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,_18,_3), -sum(_3,add(_1,c),_1), -product(add(_1,c),c,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,_3,_3), -sum(_18,add(_1,c),_18), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_18,_3,_3), -sum(_18,add(_1,c),_18), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_18,_3,add(_1,c)), -sum(additive_identity,additive_identity,_18), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_18,_3,add(_1,c)), -sum(additive_identity,additive_identity,_18), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_3,_18), -product(_3,_3,add(_1,c)), -product(_18,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_3,_18), -product(_3,_3,add(_1,c)), -product(_18,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,additive_identity,d), -product(_9,_9,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(_9,additive_identity,d), -product(_9,_9,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,_9,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(additive_identity,_13,_9), -product(additive_identity,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_13,_9,c), -product(_13,additive_identity,d), -product(_13,_13,additive_identity), -product(additive_identity,_13,_9), -product(additive_identity,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(_18,_3,c), -sum(add(_1,c),_3,_18), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(_18,_3,c), -sum(add(_1,c),_3,_18), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(_18,_3,d), -sum(add(_1,c),_3,_18), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(_18,_3,d), -sum(add(_1,c),_3,_18), -product(add(_1,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_18,_3,add(_1,c)), -sum(additive_identity,_18,_18), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_18,_3,add(_1,c)), -sum(additive_identity,_18,_18), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_18), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_18), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_3,_18), -product(_3,_3,additive_identity), -product(_18,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_3,_18), -product(_3,_3,additive_identity), -product(_18,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -product(c,_1,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -product(c,_1,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -product(c,_1,c), -sum(add(c,c),c,c), -product(add(c,c),c,add(c,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(_3,c,additive_identity), -product(_3,_1,c), -sum(add(_3,c),c,_3), -product(add(_3,c),c,add(_3,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_0,_0),_9,c), -product(add(_0,_0),_9,d), -product(add(_0,_0),c,additive_identity), -product(_0,_9,_9)]]
Ag1 <------  Send Clauses : [[-product(add(_20,_20),_9,c), -product(add(_20,_20),_9,d), -product(add(_20,_20),c,additive_identity), -product(_20,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -product(d,_1,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -product(d,_1,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -product(d,_1,d), -sum(add(d,c),d,d), -product(add(d,c),c,add(d,c))]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(_3,d,additive_identity), -product(_3,_1,d), -sum(add(_3,c),d,_3), -product(add(_3,c),c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_18,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_18,_3), -sum(c,add(_1,c),_1), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,_18,add(d,c)), -sum(_1,d,additive_identity), -product(_1,_18,d), -sum(c,add(_1,c),_1), -product(add(_1,c),d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_18,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_18,_3), -sum(d,add(_1,c),_1), -product(add(_1,c),c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_18,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_18,_3), -sum(d,add(_1,c),_1), -product(add(_1,c),c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_18,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_18,_18), -product(_18,_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_18,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_18,_18), -product(_18,_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_18,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_3,_18), -product(_3,_3,_3), -product(_18,_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_18,additive_identity,additive_identity), -product(_18,add(_1,c),additive_identity), -sum(_18,_3,_18), -product(_3,_3,_3), -product(_18,_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_3,_18), -sum(c,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_3,_18), -sum(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_18,add(c,c)), -sum(_3,add(_1,c),additive_identity), -product(_1,_18,add(_1,c)), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_9,_3), -sum(c,_18,add(c,c)), -sum(_3,add(_9,c),additive_identity), -product(_9,_18,add(_9,c)), -sum(_3,_3,_9), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,_1,add(_1,c)), -sum(_18,_3,_18), -sum(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,_1,add(_1,c)), -sum(_18,_3,_18), -sum(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_3,_18), -sum(_1,c,add(_1,c)), -product(_18,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_3,_18), -sum(_1,c,add(_1,c)), -product(_18,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_18,add(c,c)), -sum(_3,add(_1,c),additive_identity), -product(_1,_18,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_18,add(c,c)), -sum(_3,add(_1,c),additive_identity), -product(_1,_18,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_3,_18), -sum(d,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_3,_18), -sum(d,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,c,add(_1,c)), -sum(_18,_3,_18), -sum(add(_1,c),d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,c,add(_1,c)), -sum(_18,_3,_18), -sum(add(_1,c),d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_3,_18), -sum(c,d,add(_1,c)), -product(_18,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_3,_18), -sum(c,d,add(_1,c)), -product(_18,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,_1,add(_1,c)), -sum(_3,_18,_18), -sum(c,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,_1,add(_1,c)), -sum(_3,_18,_18), -sum(c,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,c,add(_1,c)), -sum(_3,_18,_18), -sum(d,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_18,c,add(_1,c)), -sum(_3,_18,_18), -sum(d,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_18,_18), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_18,_18), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_18,_18), -sum(_3,additive_identity,add(_1,c)), -product(_18,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_18,_18), -sum(_3,additive_identity,add(_1,c)), -product(_18,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_0,_0),_9,c), -product(add(_0,_0),_9,d), -product(add(_0,_0),d,additive_identity), -product(_0,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_18,_18), -sum(c,_3,add(_1,c)), -product(_18,_1,_3)]]
Ag1 <------  Send Clauses : [[-product(add(_20,_20),_9,c), -product(add(_20,_20),_9,d), -product(add(_20,_20),d,additive_identity), -product(_20,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_18,_18), -sum(c,_3,add(_1,c)), -product(_18,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_18,_18), -sum(d,_3,add(_1,c)), -product(_18,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_3,_18,_18), -sum(d,_3,add(_1,c)), -product(_18,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_18,_18), -sum(additive_identity,_3,add(_1,c)), -product(_18,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_3,additive_identity), -sum(_18,_18,_18), -sum(additive_identity,_3,add(_1,c)), -product(_18,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -product(_18,add(_1,c),_18), -sum(_3,_3,_18), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -product(_18,add(_1,c),_18), -sum(_3,_3,_18), -sum(add(_1,c),add(_1,c),additive_identity), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -product(_18,add(_1,c),_18), -sum(_3,add(_1,c),_18), -sum(additive_identity,_18,additive_identity), -product(add(_1,c),_3,_18), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -product(_18,add(_1,c),_18), -sum(_3,add(_1,c),_18), -sum(additive_identity,_18,additive_identity), -product(add(_1,c),_3,_18), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_13,_9), -sum(c,_9,add(_1,c)), -sum(c,_9,additive_identity), -product(_13,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_13,_9), -sum(c,_9,add(_1,c)), -sum(c,_9,additive_identity), -product(_13,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,c,c), -product(_9,c,d), -equalish(_1,_9), -sum(c,_9,add(c,c)), -sum(d,_9,additive_identity), -product(_1,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_9,c,c), -product(_9,c,d), -equalish(_9,_9), -sum(c,_9,add(c,c)), -sum(d,_9,additive_identity), -product(_9,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_9,c), -product(_9,c,d), -equalish(_1,_9), -sum(c,_9,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,_9,_1)]]
Ag0 <------  Send Clauses : [[-product(_9,_9,c), -product(_9,c,d), -equalish(_1,_9), -sum(c,_9,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,_9,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_13,_9), -sum(c,_9,add(_1,c)), -sum(_9,add(_1,c),additive_identity), -product(_13,_9,add(_1,c)), -product(add(_1,c),_1,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -product(_13,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_3,add(c,c)), -sum(c,add(c,c),additive_identity), -product(_13,_3,add(c,c)), -product(_13,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_13,add(c,c)), -sum(d,_3,additive_identity), -product(_1,_13,_3), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_9,_3), -sum(c,_13,add(c,c)), -sum(d,_3,additive_identity), -product(_9,_13,_3), -product(_9,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_1,add(_1,c)), -sum(_3,_3,additive_identity), -product(_13,_1,_3), -product(_13,_3,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_3,add(_3,c)), -sum(_3,_3,additive_identity), -product(_13,_3,_3), -product(_13,_3,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_13,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_13,_3), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_13,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_13,_3), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -product(_13,_3,_13), -product(_13,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -product(_13,_3,_13), -product(_13,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,c,c), -product(_9,c,d), -equalish(_1,_9), -sum(d,_9,add(c,c)), -sum(c,_9,additive_identity), -product(_1,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_9,c,c), -product(_9,c,d), -equalish(_1,_9), -sum(d,_9,add(c,c)), -sum(c,_9,additive_identity), -product(_1,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_0,_0),_9,c), -product(add(_0,_0),_9,d), -product(add(_0,_0),additive_identity,additive_identity), -product(_0,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_13,_9), -sum(d,_9,add(_1,c)), -sum(d,_9,additive_identity), -product(_13,_9,_9)]]
Ag1 <------  Send Clauses : [[-product(add(_20,_20),_9,c), -product(add(_20,_20),_9,d), -product(add(_20,_20),additive_identity,additive_identity), -product(_20,additive_identity,_9)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_13,c), -sum(d,c,add(_1,c)), -sum(d,c,additive_identity), -product(_13,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_9,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_9,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_13,_9), -sum(d,_9,add(_1,c)), -sum(_9,add(_1,c),additive_identity), -product(_13,_9,add(_1,c)), -product(add(_1,c),c,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(d,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_13,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_13,_3), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_13,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_13,_3), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -product(_13,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_13,_3,add(_1,c)), -product(_13,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(d,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_13,c,_3), -product(_13,_3,_13)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_13,c), -sum(d,c,add(_1,c)), -sum(c,c,additive_identity), -product(_13,c,c), -product(_13,c,_13)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(_9,additive_identity,additive_identity), -product(_9,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_13,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_13,_3), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(_20,_20,c), -product(_20,_20,d), -product(_20,additive_identity,additive_identity), -product(_20,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_13,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_13,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -product(_13,_3,_13), -product(_13,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,additive_identity), -product(_13,_3,_13), -product(_13,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,_3,additive_identity), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,_3,additive_identity), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_9,_3), -sum(_3,_9,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_9,_9,_3), -product(_3,_9,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_13,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_13,_13,_3), -product(_3,_13,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_1,add(_1,c)), -sum(c,_3,additive_identity), -product(_13,_1,_3), -product(_13,_13,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_1,add(_1,c)), -sum(c,_3,additive_identity), -product(_13,_1,_3), -product(_13,_13,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,c,add(_1,c)), -sum(d,_3,additive_identity), -product(_13,c,_3), -product(_13,_13,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,c,add(_1,c)), -sum(d,_3,additive_identity), -product(_13,c,_3), -product(_13,_13,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_13,add(_1,c),_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_13,add(_1,c),_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_13,add(_1,c)), -sum(_13,_3,additive_identity), -product(_13,_13,_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,_13,add(_1,c)), -sum(_13,_3,additive_identity), -product(_13,_13,_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_13,add(_1,c),_3), -product(_13,_13,_13), -product(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_13,add(_1,c),_3), -product(_13,_13,_13), -product(_13,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -product(_13,add(_1,c),_3), -product(add(_1,c),_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -product(_13,add(_1,c),_3), -product(add(_1,c),_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -product(_13,add(_1,c),_3), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -product(_13,add(_1,c),_3), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_13,_13,additive_identity), -product(_13,add(_1,c),_13), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_13,_13,additive_identity), -product(_13,add(_1,c),_13), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -product(add(_1,c),additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_13,add(_1,c),add(_1,c)), -product(add(_1,c),additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(add(_1,c),_3,_3), -product(_13,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(add(_1,c),_3,_3), -product(_13,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_16,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_16,_3), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,c,_3), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_16,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_16,_3), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_16,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_16,_3), -product(c,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,_9,d), -product(_0,c,additive_identity), -product(_9,d,_9), -product(add(_9,_9),d,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_9,c), -product(_13,_9,d), -product(_13,c,additive_identity), -product(_9,d,_9), -product(add(_9,_9),d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_16,additive_identity), -product(_16,add(_1,c),_16), -product(_16,_16,_3), -product(_3,_16,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(_13,_13,_3), -product(_3,_13,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,_1,_3), -product(_13,_13,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,_1,_3), -product(_13,_13,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,c,_3), -product(_13,_13,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,c,_3), -product(_13,_13,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,add(_1,c),_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,add(_1,c),_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_13,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,_13,_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_13,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,_13,_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,_3,_3), -product(_13,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_13,add(_1,c),additive_identity), -product(_13,_3,_3), -product(_13,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(_3,add(_1,c),_3), -product(_13,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -product(_13,add(_1,c),_13), -product(_3,add(_1,c),_3), -product(_13,_3,additive_identity), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(c,_1,additive_identity), -product(c,_1,_1), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(c,_3,additive_identity), -product(c,_3,_3), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,c,c), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -product(d,_3,c), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_9,c), -product(c,c,d), -equalish(_1,c), -sum(_9,c,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_9,c), -product(c,c,d), -equalish(_1,c), -sum(_9,c,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_10,_9), -sum(_1,_9,add(_1,c)), -sum(_9,_10,additive_identity), -product(_10,_9,_10), -product(_10,c,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,_3,add(_1,c)), -sum(_3,_15,additive_identity), -product(_15,_3,_15), -product(_15,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_15,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_15,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_15,_3,add(_1,c)), -product(_3,_3,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_15,_3,add(_1,c)), -product(_3,_3,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,c,_3), -product(_15,_3,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,c,_3), -product(_15,_3,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_15,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_15,_3), -product(add(_1,c),c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_15,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_15,_3), -product(add(_1,c),c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_3,_15), -product(_15,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_3,_15), -product(_15,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(c,_1,additive_identity), -product(c,_1,_1), -product(_1,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(c,_3,additive_identity), -product(c,_3,_3), -product(_3,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,c,c), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -product(d,_3,c), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_9,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_9,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_9,c)), -sum(_1,_1,additive_identity), -product(_1,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_9,_1,c), -product(_9,c,d), -equalish(_10,_9), -sum(c,_9,add(_1,c)), -sum(_9,_10,additive_identity), -product(_10,_9,_10), -product(_10,d,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(_3,_15,additive_identity), -product(_15,_3,_15), -product(_15,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(d,c)), -sum(c,_3,additive_identity), -product(_1,_15,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(d,c)), -sum(c,_3,additive_identity), -product(_1,_15,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,d,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,d,_3), -product(_15,_3,_15)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_0,_9),c,c), -product(add(_0,_9),c,d), -product(add(_0,_9),c,additive_identity), -product(_0,c,c), -product(_9,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,d,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,d,_3), -product(_15,_3,_15)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(_0,_9,_9), -product(additive_identity,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,_9,d), -product(additive_identity,c,additive_identity), -product(c,_0,_0), -product(additive_inverse(c),_0,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,_9,_9), -product(_0,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,_9,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(c),_0,_0), -product(c,_0,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_15,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_15,_3), -product(add(_1,c),d,_1)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,_9),c,c), -product(add(additive_identity,_9),c,d), -product(add(additive_identity,_9),c,additive_identity), -product(additive_identity,c,c), -product(_9,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_15,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_15,_3), -product(add(_1,c),d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_3,_15), -product(_15,d,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,c,d), -product(_20,c,additive_identity), -product(_20,_9,_9), -product(additive_identity,_9,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_3,_15), -product(_15,d,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,_9,d), -product(additive_identity,c,additive_identity), -product(c,c,c), -product(additive_inverse(c),c,_9)]]
Ag1 <------  Send Clauses : [[-product(_11,_9,c), -product(_11,c,d), -product(_11,c,additive_identity), -product(additive_identity,_9,_9), -product(_11,_9,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_11,c), -product(additive_identity,_9,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(c),_11,_11), -product(c,_11,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,_3,additive_identity), -product(c,c,_3), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,_3,additive_identity), -product(c,c,_3), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(c,_1,additive_identity), -product(_15,_3,_1), -product(_3,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(c,_1,additive_identity), -product(_15,_3,_1), -product(_3,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(d,c,additive_identity), -product(_15,_3,c), -product(_3,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(d,c,additive_identity), -product(_15,_3,c), -product(_3,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_15,_15), -product(_15,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_15,_15), -product(_15,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(c,_3,add(_1,c)), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(c,_3,add(_1,c)), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(c,_3,add(_1,c)), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(c,_3,add(_1,c)), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -product(c,c,_3), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -product(c,c,_3), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(c,_3,additive_identity), -product(_1,c,c), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(c,_3,additive_identity), -product(_1,c,c), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(d,_3,add(_1,c)), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(d,_3,add(_1,c)), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(d,_3,add(_1,c)), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(d,_3,add(_1,c)), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -product(d,d,_3), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -product(d,d,_3), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(d,_3,additive_identity), -product(c,d,d), -product(_3,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(d,_3,additive_identity), -product(c,d,d), -product(_3,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_10,_10,additive_identity), -product(_10,add(_1,c),_10), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_10,_10,additive_identity), -product(_10,add(_1,c),_10), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_10,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_10,additive_identity), -product(_10,add(_1,c),_10), -product(add(_1,c),_3,_10), -product(_10,_10,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -product(add(_1,c),_3,_15), -product(_15,_15,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_17,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_17,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,c,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_17,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_17,_3), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_17,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_17,_3), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,_3,_17), -product(_3,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -product(_3,_3,_15), -product(_3,_15,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_1), -product(_3,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_1), -product(_3,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,c), -product(_3,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,c), -product(_3,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,add(_1,c)), -product(_15,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,add(_1,c)), -product(_15,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_15,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_15), -product(_3,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_15,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_15), -product(_3,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_3), -product(_15,_15,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_15,add(_1,c),additive_identity), -product(_15,_3,_3), -product(_15,_15,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -product(_3,_3,add(_1,c)), -product(additive_identity,_3,_15), -product(additive_identity,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -product(_15,add(_1,c),_15), -product(_3,_3,add(_1,c)), -product(additive_identity,_3,_15), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_13,add(_1,c)),additive_identity), -product(_13,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_0,_9),c,c), -product(add(_0,_9),c,d), -product(add(_0,_9),d,additive_identity), -product(_0,c,c), -product(_9,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_13,add(_1,c)),additive_identity), -product(_13,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(_0,c,_9), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,_9,d), -product(additive_identity,d,additive_identity), -product(c,_9,_0), -product(additive_inverse(c),_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,d,additive_identity), -product(additive_identity,c,_9), -product(_0,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,_9,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(c),_9,_0), -product(c,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_13,_3),multiply(_13,add(_1,c)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(_20,_9),c,c), -product(add(_20,_9),c,d), -product(add(_20,_9),d,additive_identity), -product(_20,c,c), -product(_9,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_13,_3),multiply(_13,add(_1,c)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,multiply(_13,_3),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,c,d), -product(_20,d,additive_identity), -product(_20,c,_9), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,multiply(_13,_3),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(additive_identity,_9,d), -product(additive_identity,d,additive_identity), -product(c,_9,_20), -product(additive_inverse(c),_9,_9)]]
Ag1 <------  Send Clauses : [[-product(_11,_9,c), -product(_11,c,d), -product(_11,d,additive_identity), -product(additive_identity,c,_9), -product(_11,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(additive_identity,_9,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(c),_9,_20), -product(c,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_1,_3,add(_1,c)), -sum(c,multiply(_16,_3),additive_identity), -equalish(_3,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_1,_3,add(_1,c)), -sum(c,multiply(_16,_3),additive_identity), -equalish(_3,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(c,_3,add(_1,c)), -sum(d,multiply(_16,_3),additive_identity), -equalish(_3,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(c,_3,add(_1,c)), -sum(d,multiply(_16,_3),additive_identity), -equalish(_3,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_16,add(_1,c)),additive_identity), -equalish(_16,_16), -product(_16,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_16,add(_1,c)),additive_identity), -equalish(_16,_16), -product(_16,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),multiply(_17,_3),additive_identity), -product(_17,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),multiply(_17,_3),additive_identity), -product(_17,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_17,add(_1,c)),additive_identity), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_17,add(_1,c)),additive_identity), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_15,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_15,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -sum(additive_identity,_15,add(_1,c)), -product(_15,_3,_15), -product(_15,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -sum(additive_identity,_15,add(_1,c)), -product(_15,_3,_15), -product(_15,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(multiply(_15,_3),multiply(_15,_3),additive_identity), -sum(add(_1,c),add(_1,c),multiply(_15,_3)), -product(_15,multiply(_15,_3),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(multiply(_15,_3),multiply(_15,_3),additive_identity), -sum(add(_1,c),add(_1,c),multiply(_15,_3)), -product(_15,multiply(_15,_3),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -sum(additive_identity,_15,add(_1,c)), -product(_15,multiply(_15,_3),_15), -product(_15,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -sum(additive_identity,_15,add(_1,c)), -product(_15,multiply(_15,_3),_15), -product(_15,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_0,_9),c,c), -product(add(_0,_9),c,d), -product(add(_0,_9),additive_identity,additive_identity), -product(_0,additive_identity,c), -product(_9,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_identity,_9), -product(additive_identity,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,_9,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_0), -product(additive_inverse(c),additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(_0,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(additive_identity,_9,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(c),additive_identity,_0), -product(c,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(add(d,_9),c,c), -product(add(d,_9),c,d), -product(add(d,_9),additive_identity,additive_identity), -product(d,additive_identity,c), -product(_9,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,c,d), -product(_20,additive_identity,additive_identity), -product(_20,additive_identity,_9), -product(additive_identity,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(additive_identity,_9,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_20), -product(additive_inverse(c),additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_15,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,_9,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(c),additive_identity,d), -product(c,additive_identity,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_15,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,_15,_3), -product(_15,_15,add(_1,c)), -product(_15,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,_20,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,_15,_3), -product(_15,_15,add(_1,c)), -product(_15,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,_15,_3), -product(_15,_15,multiply(_15,add(_1,c))), -product(_15,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,_15,_3), -product(_15,_15,multiply(_15,add(_1,c))), -product(_15,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,additive_identity,_3), -product(_15,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,additive_identity,_3), -product(_15,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(_9,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_9,additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_11,_9,c), -product(_11,_11,d), -product(_11,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_9,additive_identity,_11)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,_15,_3), -product(_15,_15,_15), -product(_15,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_20,_20,c), -product(_20,_20,d), -product(_20,additive_identity,additive_identity), -product(_20,additive_identity,_20), -product(_20,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -sum(additive_identity,_15,_3), -product(_15,_15,_15), -product(_15,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_9,c), -product(_18,c,d), -product(_18,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_18,additive_identity,c), -product(_9,c,_18)]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,c,d), -product(_20,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_20,additive_identity,c), -product(_9,c,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,d,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c), -product(c,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d), -product(d,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,d), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,_9,d), -product(additive_identity,additive_identity,additive_identity), -product(_9,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(_9,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_9,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(_20,_20,c), -product(_20,_20,d), -product(_20,additive_identity,additive_identity), -product(_20,additive_identity,_20), -product(_20,additive_identity,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_11,_9,c), -product(_11,_11,d), -product(_11,additive_identity,additive_identity), -product(_11,additive_identity,_9), -product(_11,additive_identity,_11)]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,_20,d), -product(_20,additive_identity,additive_identity), -product(_20,additive_identity,_9), -product(_20,additive_identity,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_9,c), -product(_18,c,d), -product(_18,additive_identity,additive_identity), -product(c,additive_identity,_9), -product(_18,additive_identity,c), -product(_18,c,_18)]]
Ag1 <------  Send Clauses : [[-product(_20,_9,c), -product(_20,c,d), -product(_20,additive_identity,additive_identity), -product(c,additive_identity,_9), -product(_20,additive_identity,c), -product(_20,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -sum(_15,_15,_3), -sum(_3,_3,additive_identity), -product(_15,_15,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -sum(_15,_15,_3), -sum(_3,_3,additive_identity), -product(_15,_15,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -sum(_15,_3,_3), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_15,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -sum(_15,_3,_3), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_3,additive_identity), -product(_15,_15,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_16,_9,c), -product(_16,c,d), -product(_16,additive_identity,additive_identity), -product(_16,additive_identity,_9), -product(_9,additive_identity,c), -product(_16,c,_16)]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(_9,c,d), -product(_9,additive_identity,additive_identity), -product(_9,additive_identity,_9), -product(_9,additive_identity,c), -product(_9,c,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_16,_9,c), -product(_16,c,d), -product(_16,additive_identity,additive_identity), -product(_16,additive_identity,_9), -product(c,additive_identity,c), -product(c,c,_16)]]
Ag1 <------  Send Clauses : [[-product(d,_9,c), -product(d,c,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,_9), -product(c,additive_identity,c), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),multiply(add(c,c),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),multiply(add(c,c),c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),multiply(add(c,c),c),additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),multiply(add(c,c),c),additive_identity), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),multiply(add(d,c),d),additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),multiply(add(d,c),d),additive_identity), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),multiply(add(c,c),_3),additive_identity), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),multiply(add(c,c),_3),additive_identity), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),add(_1,c)),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),add(_1,c)),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,multiply(add(_1,c),_3),additive_identity), -product(_3,add(_1,c),multiply(add(_1,c),_3)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,multiply(add(_1,c),_3),additive_identity), -product(_3,add(_1,c),multiply(add(_1,c),_3)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,multiply(add(_3,c),_3),additive_identity), -sum(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,multiply(add(_3,c),_3),additive_identity), -sum(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,multiply(add(c,c),c),additive_identity), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,multiply(add(c,c),c),additive_identity), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,multiply(add(c,c),c),additive_identity), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,multiply(add(c,c),c),additive_identity), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,multiply(add(_3,c),c),additive_identity), -sum(d,d,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,multiply(add(_3,c),c),additive_identity), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),multiply(add(_3,c),_1),additive_identity), -sum(c,_3,add(_1,c)), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),multiply(add(_3,c),_1),additive_identity), -sum(c,_3,add(_1,c)), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),multiply(add(_3,c),_1),additive_identity), -sum(d,_3,add(_1,c)), -product(_1,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),multiply(add(_3,c),_1),additive_identity), -sum(d,_3,add(_1,c)), -product(_1,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,multiply(add(_1,c),add(_1,c)),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,multiply(add(_1,c),add(_1,c)),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),multiply(add(_1,c),_3),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(c,d,_9), -product(additive_identity,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(additive_identity,c,_9), -product(additive_inverse(additive_identity),c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(c,d,_9), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(additive_identity,c,_9), -product(additive_inverse(additive_identity),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),multiply(_1,c),additive_identity), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),multiply(_1,c),additive_identity), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),multiply(_20,c),additive_identity), -sum(_3,_3,_20), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),multiply(_20,c),additive_identity), -sum(_3,_3,_20), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),multiply(_1,d),additive_identity), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),multiply(_1,d),additive_identity), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),multiply(_20,d),additive_identity), -sum(_3,_3,_20), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),multiply(_20,d),additive_identity), -sum(_3,_3,_20), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_20,add(c,c)), -sum(add(c,c),multiply(_1,_20),additive_identity), -sum(_3,_3,_1), -product(_3,c,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_20,add(c,c)), -sum(add(c,c),multiply(_1,_20),additive_identity), -sum(_3,_3,_1), -product(_3,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(add(_1,c),add(_1,c),_20), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(add(_1,c),add(_1,c),_20), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,_20,_20), -product(_20,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,_20,_20), -product(_20,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,_20,_20), -product(_20,_3,multiply(_20,add(_1,c))), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,_20,_20), -product(_20,_3,multiply(_20,add(_1,c))), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,multiply(c,_1),additive_identity), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,multiply(c,_1),additive_identity), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,multiply(c,_1),additive_identity), -sum(c,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(_3,multiply(_3,_1),additive_identity), -sum(c,c,_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,multiply(d,_1),additive_identity), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,multiply(d,_1),additive_identity), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,multiply(d,_1),additive_identity), -sum(d,d,d), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(_3,multiply(_3,_1),additive_identity), -sum(d,d,_3), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_20,add(_3,c)), -sum(_1,multiply(_1,_20),additive_identity), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_20,add(_3,c)), -sum(_1,multiply(_1,_20),additive_identity), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,_8,additive_identity), -product(additive_identity,_8,_8), -product(_8,_8,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_20,add(_3,c)), -sum(_1,multiply(_1,_20),additive_identity), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,_8,additive_identity), -product(additive_identity,_8,_8), -product(_8,_8,c)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_20,add(_3,c)), -sum(_1,multiply(_1,_20),additive_identity), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,additive_identity,_20), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,additive_identity,_20), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,_20,_20), -product(_20,_3,_20), -product(additive_identity,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,multiply(_20,add(_1,c)),additive_identity), -sum(additive_identity,_20,_20), -product(_20,_3,_20), -product(additive_identity,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,_3,_20), -sum(c,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,_3,_20), -sum(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_20,add(c,c)), -sum(_3,multiply(_1,_20),additive_identity), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_20,add(c,c)), -sum(_3,multiply(_1,_20),additive_identity), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(additive_identity,_3,_20), -sum(_20,c,add(_1,c)), -product(additive_identity,_1,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(additive_identity,_3,_20), -sum(_20,c,add(_1,c)), -product(additive_identity,_1,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_20,add(c,c)), -sum(_3,multiply(_1,_20),additive_identity), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_20,add(c,c)), -sum(_3,multiply(_1,_20),additive_identity), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,_3,_20), -sum(d,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,_3,_20), -sum(d,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(additive_identity,_3,_20), -sum(_20,d,add(_1,c)), -product(additive_identity,c,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(additive_identity,_3,_20), -sum(_20,d,add(_1,c)), -product(additive_identity,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,additive_identity,_20), -sum(c,_20,add(_1,c)), -product(additive_identity,_1,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,additive_identity,_20), -sum(c,_20,add(_1,c)), -product(additive_identity,_1,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(d,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_inverse(additive_identity),c,_9), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,additive_identity,_20), -sum(d,_20,add(_1,c)), -product(additive_identity,c,_20)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_20,_3),additive_identity), -sum(_3,additive_identity,_20), -sum(d,_20,add(_1,c)), -product(additive_identity,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_20,add(_1,c)),additive_identity), -sum(_20,_20,_20), -sum(_3,_3,additive_identity), -product(_20,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_inverse(additive_identity),c,_9), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_20,add(_1,c)),additive_identity), -sum(_20,_20,_20), -sum(_3,_3,additive_identity), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_20,add(_1,c)),additive_identity), -sum(_20,_3,_20), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,_3,additive_identity), -product(_20,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_20,add(_1,c)),additive_identity), -sum(_20,_3,_20), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,_3,additive_identity), -product(_20,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(c,multiply(_15,_3),additive_identity), -product(_15,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(c,multiply(_15,_3),additive_identity), -product(_15,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(c,c)), -sum(d,multiply(_1,_15),additive_identity), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(c,c)), -sum(d,multiply(_1,_15),additive_identity), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(_3,c)), -sum(_1,multiply(_1,_15),additive_identity), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_15,add(_3,c)), -sum(_1,multiply(_1,_15),additive_identity), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -product(_15,_3,additive_identity), -product(additive_identity,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -product(_15,_3,additive_identity), -product(additive_identity,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_15,add(c,c)), -sum(c,multiply(_1,_15),additive_identity), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_15,add(c,c)), -sum(c,multiply(_1,_15),additive_identity), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(d,_3,add(_1,c)), -sum(d,multiply(_15,_3),additive_identity), -product(_15,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(d,_3,add(_1,c)), -sum(d,multiply(_15,_3),additive_identity), -product(_15,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_15,add(_3,c)), -sum(_1,multiply(_1,_15),additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_15,add(_3,c)), -sum(_1,multiply(_1,_15),additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -product(_15,_3,additive_identity), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),multiply(_15,_3),additive_identity), -product(_15,_3,additive_identity), -product(additive_identity,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(d,additive_identity,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_18,add(_1,c)), -sum(c,multiply(_1,_18),additive_identity), -product(_1,_1,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(d,additive_identity,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_18,add(_1,c)), -sum(c,multiply(_1,_18),additive_identity), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_18,add(_1,c)), -sum(d,multiply(c,_18),additive_identity), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_18,add(_1,c)), -sum(d,multiply(c,_18),additive_identity), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_18,add(_1,c)),additive_identity), -product(_18,_18,_3), -product(_3,_18,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -product(_15,_15,_3), -product(_3,_15,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,_9), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,_1,_3), -product(_15,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,_9), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,_1,_3), -product(_15,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,c,_3), -product(_15,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,c,_3), -product(_15,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_15,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,additive_identity,_3), -product(_15,additive_identity,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_15,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,additive_identity,_3), -product(_15,additive_identity,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,_15,_3), -product(_15,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_15,add(_1,c)),additive_identity), -product(additive_identity,_15,_3), -product(_15,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -product(_15,_3,_3), -product(_15,_15,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_15,add(_1,c)),additive_identity), -product(_15,_3,_3), -product(_15,_15,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(add(d,additive_identity),_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(d,_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(additive_inverse(d),_11,c), -product(additive_identity,_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,d,_9), -product(_11,d,c), -product(_11,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(add(d,additive_identity),_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_inverse(d),_11,_9), -product(d,_11,c), -product(additive_identity,_11,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,multiply(c,_1),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(d,_11,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,multiply(c,_1),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(c,multiply(c,_1),additive_identity), -product(_1,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,_11,_9), -product(additive_inverse(d),_11,c), -product(additive_identity,_11,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(c,multiply(c,_3),additive_identity), -product(_3,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,d,_9), -product(_11,d,c), -product(_11,d,c)]]
Ag1 <------  Send Clauses : [[-product(c,_9,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_inverse(d),_11,_9), -product(d,_11,c), -product(additive_identity,_11,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,multiply(d,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,multiply(d,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,multiply(d,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,multiply(d,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,multiply(d,c),additive_identity), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,multiply(d,_3),additive_identity), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(c,multiply(_1,_17),additive_identity), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(c,multiply(_1,_17),additive_identity), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_1,_3,add(_1,c)), -sum(d,multiply(_17,_3),additive_identity), -product(_3,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_1,_3,add(_1,c)), -sum(d,multiply(_17,_3),additive_identity), -product(_3,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_17,add(_3,c)), -sum(_1,multiply(_1,_17),additive_identity), -product(_3,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_17,add(_3,c)), -sum(_1,multiply(_1,_17),additive_identity), -product(_3,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_17,_3),additive_identity), -product(additive_identity,_3,_17), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),multiply(_17,_3),additive_identity), -product(additive_identity,_3,_17), -product(additive_identity,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,multiply(c,_1),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,multiply(c,_1),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(c,multiply(c,_1),additive_identity), -product(_1,d,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(c,multiply(c,_3),additive_identity), -product(_3,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,multiply(d,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,multiply(d,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,multiply(d,c),additive_identity), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,multiply(d,_3),additive_identity), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(d,c)), -sum(c,multiply(_1,_17),additive_identity), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(d,c)), -sum(c,multiply(_1,_17),additive_identity), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_17,add(_3,c)), -sum(_1,multiply(_1,_17),additive_identity), -product(_3,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_17,add(_3,c)), -sum(_1,multiply(_1,_17),additive_identity), -product(_3,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_17,_3),additive_identity), -product(additive_identity,_3,_17), -product(additive_identity,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(_17,_3),additive_identity), -product(additive_identity,_3,_17), -product(additive_identity,d,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,multiply(c,_3),additive_identity), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,_0,d), -product(additive_identity,additive_identity,additive_identity), -product(_0,c,additive_identity), -product(additive_identity,c,_0), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,multiply(c,_3),additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,multiply(c,_3),additive_identity), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,multiply(c,_3),additive_identity), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,multiply(c,c),additive_identity), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,multiply(c,c),additive_identity), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(c,_3),additive_identity), -product(_1,c,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),multiply(c,_3),additive_identity), -product(_1,c,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,multiply(d,_3),additive_identity), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,multiply(d,_3),additive_identity), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,multiply(d,_3),additive_identity), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,multiply(d,_3),additive_identity), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,multiply(d,d),additive_identity), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,multiply(d,d),additive_identity), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),multiply(d,_3),additive_identity), -product(c,d,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),multiply(d,_3),additive_identity), -product(c,d,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_19,add(_1,c)), -sum(c,multiply(_1,_19),additive_identity), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_19,add(_1,c)), -sum(c,multiply(_1,_19),additive_identity), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_19,add(_1,c)), -sum(d,multiply(c,_19),additive_identity), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_19,add(_1,c)), -sum(d,multiply(c,_19),additive_identity), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_19,add(_1,c)),additive_identity), -product(_3,_3,_19), -product(_3,_19,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -product(_3,_3,_17), -product(_3,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,_1), -product(_3,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,_1), -product(_3,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,c), -product(_3,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,c), -product(_3,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,additive_identity), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,additive_identity), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,_3), -product(additive_identity,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,multiply(_17,add(_1,c)),additive_identity), -product(additive_identity,_3,_3), -product(additive_identity,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -product(_17,_3,_3), -product(add(_1,c),_17,_17), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,multiply(_17,add(_1,c)),additive_identity), -product(_17,_3,_3), -product(add(_1,c),_17,_17), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_13,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(multiply(_13,_3),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(multiply(_13,_3),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,c,_9), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(d,c,_9), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_3,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_1,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_3,_15)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(_9,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_3,_15)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(_9,c,c), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_3,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,_15), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,_15), -product(additive_identity,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(additive_identity,c,_9), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_16,_16,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_16,_16,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,_9), -product(additive_identity,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,_3), -product(_16,additive_identity,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,_9), -product(additive_identity,c,c), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,_3), -product(_16,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_13,c), -product(_0,c,d), -product(_0,_13,additive_identity), -product(_13,_13,_13), -product(c,_13,c), -product(additive_identity,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -product(_9,_9,_9), -product(c,_9,c), -product(additive_identity,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,_9), -product(additive_identity,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_16,_3,_16)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -product(c,c,_9), -product(additive_identity,c,c), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_16,_3,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_16,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_16,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,add(c,_8),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,add(c,_8),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,add(c,c),additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,additive_inverse(c),d), -product(_0,additive_identity,additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,c,additive_identity), -equalish(additive_identity,_8)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,add(c,c),additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(additive_inverse(c),_8)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -equalish(c,_8)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,additive_inverse(c),d), -product(_0,additive_identity,additive_identity), -equalish(c,_8)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_3,additive_identity), -product(_14,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,c,additive_identity), -equalish(additive_identity,_8)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_3,additive_identity), -product(_14,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(additive_inverse(c),_8)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_8,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -equalish(d,_8)]]
Ag1 <------  Send Clauses : [[-product(_0,_8,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -equalish(d,_8)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_14,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_14,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_14,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_14,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_14,additive_identity,additive_identity), -product(_14,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,add(_9,c),additive_identity), -equalish(c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,_9,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(additive_inverse(_9),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_9,d), -product(_0,c,additive_identity), -equalish(c,_9)]]
Ag1 <------  Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,add(_9,c),additive_identity), -equalish(c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_9),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(_9,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,additive_identity,_3), -sum(_14,_14,add(_1,c)), -product(_14,additive_identity,_14)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -equalish(additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,additive_identity,_3), -sum(_14,_14,add(_1,c)), -product(_14,additive_identity,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,_14,_3), -sum(_3,add(_1,c),add(_1,c)), -product(_14,_14,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(additive_inverse(c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,_14,_3), -sum(_3,add(_1,c),add(_1,c)), -product(_14,_14,add(_1,c)), -product(_14,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,c,additive_identity), -equalish(c,d)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -equalish(c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -equalish(c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(c,add(_1,c),_1), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(c,add(_1,c),_1), -product(additive_identity,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(d,add(_1,c),_1), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(d,add(_1,c),_1), -product(additive_identity,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_3,add(_1,c)), -product(additive_identity,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_3,add(_1,c)), -product(additive_identity,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,c,d), -product(_0,c,additive_identity), -equalish(add(_9,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -equalish(_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_9,c), -product(_0,additive_inverse(_9),d), -product(_0,c,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,_9,d), -product(_0,c,additive_identity), -equalish(_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_9),c), -product(_0,_9,d), -product(_0,c,additive_identity), -equalish(additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(additive_identity,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,c,additive_identity), -equalish(add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(additive_identity,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity), -equalish(c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_inverse(c),d), -product(_0,c,additive_identity), -equalish(additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,d,d), -product(_0,c,additive_identity), -equalish(d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,d,d), -product(_0,c,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -equalish(additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity), -equalish(additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_identity,additive_identity), -equalish(additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),additive_identity,additive_identity), -sum(_3,_19,_1), -product(_19,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),additive_identity,additive_identity), -sum(_3,_19,_1), -product(_19,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_3,_19), -product(_3,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_3,_19), -product(_3,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -sum(_1,c,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,additive_identity,add(c,c)), -sum(_3,additive_identity,additive_identity), -sum(_1,c,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,additive_identity,additive_identity), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,additive_identity,additive_identity), -sum(d,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(c,add(c,add(_13,_16))),d), -product(_0,add(add(_7,c),add(c,add(_13,_16))),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,additive_identity,additive_identity), -sum(_1,d,d), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,_7,c), -product(_0,add(c,add(c,add(_13,_16))),d), -product(_0,add(add(_7,c),add(c,add(_13,_16))),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(additive_identity,c),d), -product(_0,add(_7,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,additive_identity,add(d,c)), -sum(_3,additive_identity,additive_identity), -sum(_1,d,_3), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(additive_inverse(_7),c),d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_7),c), -product(_0,add(_7,c),d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(additive_identity,c),d), -product(_0,add(c,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(additive_inverse(c),c),d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(c,_19,_1), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(c),c), -product(_0,add(c,c),d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,additive_identity,add(d,c)), -sum(_1,additive_identity,additive_identity), -sum(c,_19,_1), -product(_19,d,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(d,_19,_1), -product(_19,c,_19)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -sum(d,_19,_1), -product(_19,c,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_19,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_19,additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_19,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_19,additive_identity,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_identity),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_identity),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,_3,_19), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,_3,_19), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_19,additive_identity,additive_identity), -sum(_3,_3,_1), -sum(d,c,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_19,additive_identity,additive_identity), -sum(_3,_3,_1), -sum(d,c,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),_3,_19), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),_3,_19), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_19,additive_identity,additive_identity), -sum(_3,_3,_1), -sum(c,d,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_19,additive_identity,additive_identity), -sum(_3,_3,_1), -sum(c,d,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,_3,_19), -sum(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,_3,_19), -sum(d,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),_3,_19), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(add(_1,c),_3,_19), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,add(_1,c),_19), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,add(_1,c),_19), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,add(_1,c),_19), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -sum(_3,add(_1,c),_19), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,additive_identity,_19), -sum(_19,_19,add(_1,c)), -product(additive_identity,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,additive_identity,_19), -sum(_19,_19,add(_1,c)), -product(additive_identity,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(c,additive_identity),d), -product(_0,add(_7,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(additive_identity,additive_identity),d), -product(_0,_7,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(_7,additive_identity),d), -product(_0,_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,_19,_19), -sum(_3,add(_1,c),add(_1,c)), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(c,additive_identity),d), -product(_0,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(additive_identity,_19,_19), -sum(_3,add(_1,c),add(_1,c)), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(additive_identity,additive_identity),d), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_identity),d), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_14,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(d,additive_identity,additive_identity), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(d,additive_identity,additive_identity), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_14,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_14,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(d,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(d,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_14,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(c,additive_inverse(add(_7,c))),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(additive_identity,additive_inverse(_7)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(additive_inverse(_7),additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,_7,c), -product(_0,add(c,additive_inverse(add(_7,c))),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(_7,additive_inverse(_7)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_7),c), -product(_0,add(_7,additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(d,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_14,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(additive_identity,additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(d,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_14,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(additive_inverse(c),additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(d,additive_inverse(d)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,add(d,additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(additive_identity,additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_1,_1,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(additive_identity,additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_14,_14,_3), -product(_3,_14,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(add(_1,c),_1,_3), -product(_14,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(add(_1,c),_1,_3), -product(_14,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(add(_1,c),c,_3), -product(_14,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(add(_1,c),c,_3), -product(_14,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_14,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_14,add(_1,c),_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_14,additive_identity,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_14,add(_1,c),_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),additive_identity,_3), -product(_14,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),additive_identity,_3), -product(_14,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_14,_3), -product(_14,additive_identity,_3), -product(_3,_14,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_14,_3), -product(_14,additive_identity,_3), -product(_3,_14,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,add(additive_inverse(_7),c),d), -product(_0,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_7),c), -product(_0,add(_7,c),d), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,add(additive_inverse(c),c),d), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(c),c), -product(_0,add(c,c),d), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,additive_identity,add(_1,c)), -sum(_1,additive_identity,additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,additive_identity,add(_3,c)), -sum(_3,additive_identity,additive_identity), -product(_3,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(c,additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(d,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(_3,additive_identity,additive_identity), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_1,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_3,_3,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_1,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_3,_3,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_16,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_16,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),_3,_16), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),_3,_16), -product(add(_1,c),c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_7),c), -product(_0,add(additive_identity,_7),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(additive_inverse(_7),_7),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(c),c), -product(_0,add(additive_identity,c),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,add(additive_inverse(_18),_18),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,additive_identity,add(d,c)), -sum(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,additive_identity,add(d,c)), -sum(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,additive_identity,add(_1,c)), -sum(_1,additive_identity,additive_identity), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_3,c)), -sum(_3,additive_identity,additive_identity), -product(_3,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(d,c)), -sum(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(d,c)), -sum(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(c,additive_identity,additive_identity), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,additive_identity,add(c,c)), -sum(_3,additive_identity,additive_identity), -product(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(d,c)), -sum(c,additive_identity,additive_identity), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(d,c)), -sum(c,additive_identity,additive_identity), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_16,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_16,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),_3,_16), -product(add(_1,c),d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),_3,_16), -product(add(_1,c),d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(d,c), -sum(d,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,additive_identity,add(_3,c)), -sum(_1,additive_identity,additive_identity), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,_3,_18), -product(_3,_18,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,_3,_16), -product(_3,_16,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(c,additive_identity,additive_identity), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(d,additive_identity,additive_identity), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_16,additive_identity,additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_16,additive_identity,additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_16)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,c,d), -product(_0,add(add(_7,c),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_inverse(_7),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(_7),c), -product(_0,_7,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_16)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,add(add(c,c),additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,additive_identity,additive_identity), -product(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_3,_16), -product(_3,additive_identity,_16), -product(_3,_16,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_inverse(c),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(additive_identity,_3,_16), -product(_3,additive_identity,_16), -product(_3,_16,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,d,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_14), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_14), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,_1,add(_1,c)), -sum(multiply(_14,_3),c,additive_identity), -equalish(_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,_1,add(_1,c)), -sum(multiply(_14,_3),c,additive_identity), -equalish(_3,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_18), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_18), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(_19,_19,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(_19,_19,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(add(_7,c),additive_inverse(c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(_7,additive_inverse(additive_identity)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(additive_inverse(_7))),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(_7,additive_inverse(_7)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(add(c,c),additive_inverse(c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_inverse(d)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_inverse(additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(additive_inverse(c))),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_inverse(c)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_inverse(d)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_inverse(d)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_inverse(d)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_inverse(c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_inverse(d)),additive_identity), -product(_0,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_inverse(d)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(d)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_inverse(d)),additive_identity), -product(_0,c,d)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(c)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_inverse(d)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,additive_identity,d), -product(_0,add(_18,additive_inverse(d)),additive_identity), -product(_0,c,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_19,c,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,_18,c), -product(_0,additive_identity,d), -product(_0,add(_18,additive_inverse(d)),additive_identity), -product(_0,c,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_19,c,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,_1,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_inverse(_7)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,_1,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_inverse(c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_17), -sum(_3,_3,c), -product(_17,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_17), -sum(_3,_3,c), -product(_17,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,c,additive_identity), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,c,additive_identity), -product(_17,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_inverse(additive_identity)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_inverse(additive_identity)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_inverse(d)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_inverse(d)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity), -product(_0,additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(_3,_3,_1), -product(_17,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(_3,_3,_1), -product(_17,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,_1), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,_1), -product(_17,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(d),additive_identity), -product(_0,d,additive_inverse(d))]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(d),additive_identity), -product(_0,d,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,c), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,c), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(additive_identity,additive_identity,_3), -sum(_17,_17,add(_1,c)), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(additive_identity,additive_identity,_3), -sum(_17,_17,add(_1,c)), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(additive_identity,_17,_3), -sum(_3,add(_1,c),add(_1,c)), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -sum(additive_identity,_17,_3), -sum(_3,add(_1,c),add(_1,c)), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,c,d), -product(_0,add(add(_7,additive_identity),c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,_7,d), -product(_0,add(additive_identity,_7),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,c,d), -product(_0,add(add(c,additive_identity),c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,c,d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,add(c,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,add(c,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),c,additive_identity), -equalish(d,add(d,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),c,additive_identity), -equalish(d,add(d,c)), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_inverse(add(_7,additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,additive_inverse(additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_17,c), -product(_0,additive_inverse(add(_17,additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,add(_1,c)), -product(_1,_1,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,additive_inverse(additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,add(_1,c)), -product(_1,_1,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,add(_1,c)), -product(_1,add(_1,c),_1), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,add(_1,c)), -product(_1,add(_1,c),_1), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(c),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(c),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,add(_1,c)), -product(_1,add(_1,c),c), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,add(_1,c)), -product(_1,add(_1,c),c), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,_7,d), -product(_0,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,c,d), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_3,c)), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_3,c)), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,add(c,c)), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,add(c,c)), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_3,c)), -sum(add(_3,c),c,_3), -product(_3,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_3,c)), -sum(add(_3,c),c,_3), -product(_3,_3,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,add(c,c)), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,add(c,c)), -sum(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,add(c,c)), -sum(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,add(c,c)), -sum(d,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(c,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_3,c)), -sum(add(_3,c),d,_3), -product(c,c,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(c,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_3,c)), -sum(add(_3,c),d,_3), -product(c,c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(_3,add(_3,c)), -sum(c,add(_1,c),_1), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_1,c,additive_identity), -equalish(c,add(c,c)), -sum(c,add(_1,c),_1), -product(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,add(_3,c)), -sum(d,add(_1,c),_1), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,add(_3,c)), -sum(d,add(_1,c),_1), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_1,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_1,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_3,c), -sum(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_3,c), -sum(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_3,c), -sum(c,_3,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_3,c), -sum(_1,_3,c), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -sum(c,d,add(d,c)), -sum(add(d,c),c,additive_identity), -equalish(_3,d), -sum(d,_3,d), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(d,_3), -sum(c,d,add(d,c)), -sum(add(d,c),c,additive_identity), -equalish(_3,d), -sum(_1,_3,d), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_3,_1), -sum(_3,_22,_1), -product(_22,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_3,_1), -sum(_3,_22,_1), -product(_22,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,_1), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,_1), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(add(_7,additive_inverse(c)),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(_7),_7),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_inverse(_7)),c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,_7),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(add(c,additive_inverse(c)),c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(d),d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(d),d),additive_identity), -product(_0,c,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,c), -product(add(_1,c),_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_inverse(additive_identity)),c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,c), -product(add(_1,c),_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(d),d),additive_identity), -product(_0,c,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,c), -sum(_1,c,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,_3), -sum(_1,c,_3), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(d,c,additive_identity), -equalish(d,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(d,c,additive_identity), -equalish(d,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(d,c,additive_identity), -equalish(d,d), -sum(_1,d,d), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,d,add(d,c)), -sum(_3,c,additive_identity), -equalish(d,_3), -sum(_1,d,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,_1), -sum(c,_22,_1), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,d,add(d,c)), -sum(_1,c,additive_identity), -equalish(c,_1), -sum(c,_22,_1), -product(_22,d,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(d,_1), -sum(d,_22,_1), -product(_22,c,_22)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(d,_1), -sum(d,_22,_1), -product(_22,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(_22,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(_22,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(_22,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(_22,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_inverse(additive_inverse(additive_identity))),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_inverse(additive_inverse(additive_identity))),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,c,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(d,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,c,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(d,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_inverse(_7)),c), -product(_0,additive_identity,d), -product(_0,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_inverse(_17)),c), -product(_0,additive_identity,d), -product(_0,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,c,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(c,d,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,c,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(c,d,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(d,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(additive_identity,additive_identity,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(additive_identity,additive_identity,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(additive_identity,_22,_22), -sum(_3,add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_22), -sum(additive_identity,_22,_22), -sum(_3,add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(_3,_1), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(_3,_1), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,c,add(c,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,c,add(c,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,_1), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,_1), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_20), -product(_20,_20,_3), -product(_3,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),_1,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),_1,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),c,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),c,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_17,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_17,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -product(additive_identity,_17,_3), -product(_17,additive_identity,_3), -product(_3,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_17), -product(additive_identity,_17,_3), -product(_17,additive_identity,_3), -product(_3,_17,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_inverse(d)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_inverse(d)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(_1,c,additive_identity), -equalish(_1,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,c), -product(_3,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(_7,additive_inverse(d)),additive_identity), -product(_0,c,add(_7,additive_inverse(d)))]]
Ag1 <------  Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(_7,additive_inverse(d)),additive_identity), -product(_0,c,add(_7,additive_inverse(d)))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_19), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_19), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,_1), -product(_19,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(c,_1), -product(_19,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,d,add(d,c)), -sum(c,c,additive_identity), -equalish(d,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,d,add(d,c)), -sum(c,c,additive_identity), -equalish(d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(_1,c,additive_identity), -equalish(_1,c), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(_3,c,additive_identity), -equalish(_3,c), -product(_3,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,d,add(d,c)), -sum(c,c,additive_identity), -equalish(c,d)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,d,add(d,c)), -sum(c,c,additive_identity), -equalish(c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -equalish(c,d), -product(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(d,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(d,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(d,_1), -product(_19,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_3,add(_3,c)), -sum(_1,c,additive_identity), -equalish(d,_1), -product(_19,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,c), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(add(_7,d),additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(_1,c,c)]]
Ag1 <------  Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(add(_7,d),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c), -product(_1,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(d,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,c), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,c), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,d), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,d), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,d), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,d), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,d), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(_7,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,_23,c), -product(_0,additive_identity,d), -product(_0,add(_23,d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(_3,_3,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_21), -product(_3,_3,_21), -product(_3,_21,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -product(_3,_3,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_19,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_19,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(_3,c,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -product(additive_identity,_3,_19), -product(_3,additive_identity,_19), -product(_3,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_1,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(_3,_19), -product(additive_identity,_3,_19), -product(_3,additive_identity,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_14), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_14), -product(_14,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,c,add(_1,c)), -sum(multiply(_14,_3),d,additive_identity), -equalish(_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,c,add(_1,c)), -sum(multiply(_14,_3),d,additive_identity), -equalish(_3,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_14)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_14)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_18), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_18), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_7,c), -product(_0,additive_identity,d), -product(_0,add(add(_7,additive_identity),d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(_19,_19,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(add(c,additive_identity),d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(_19,_19,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,additive_identity,d), -product(_0,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(additive_identity),c), -product(_0,additive_identity,d), -product(_0,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_19,d,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_19,d,additive_identity), -equalish(_3,_19), -product(_19,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,c,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,c,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_17), -sum(_3,_3,d), -product(_17,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_17), -sum(_3,_3,d), -product(_17,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,d,additive_identity), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,d,additive_identity), -product(_17,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_15,_16),c),c),c), -product(_0,_14,d), -product(_0,add(add(add(_15,_16),c),add(c,_14)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_identity,add(add(_15,_16),c)),c), -product(_0,c,d), -product(_0,add(add(add(_15,_16),c),c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_inverse(add(add(add(_15,_16),c),c)),add(add(_15,_16),c)),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(c,_16),c),c),c), -product(_0,_14,d), -product(_0,add(add(add(c,_16),c),add(c,_14)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_identity,add(add(d,_16),c)),c), -product(_0,c,d), -product(_0,add(add(add(d,_16),c),c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_inverse(add(add(add(additive_identity,_16),c),c)),add(add(additive_identity,_16),c)),c), -product(_0,c,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(_3,_3,c), -product(_17,_3,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_15,c), -product(_0,c,d), -product(_0,add(_15,add(additive_identity,c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(_3,_3,c), -product(_17,_3,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_inverse(add(additive_identity,_15)),c), -product(_0,_15,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,c), -product(_17,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,d,c), -product(_0,c,d), -product(_0,add(d,add(additive_identity,c)),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,c), -product(_17,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_inverse(add(additive_identity,add(additive_identity,_14))),c), -product(_0,add(additive_identity,_14),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,d), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,d), -product(_17,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(c,add(additive_inverse(c),additive_identity)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(additive_identity),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(c),additive_identity),additive_identity), -product(_0,c,add(additive_inverse(c),additive_identity))]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(c,add(additive_inverse(c),additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(additive_identity),additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(c),additive_identity),additive_identity), -product(_0,c,add(additive_inverse(c),additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -sum(add(_1,c),additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_15,c), -product(_0,c,d), -product(_0,add(additive_identity,add(_15,c)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,_15,c), -product(_0,c,d), -product(_0,add(additive_identity,add(_15,c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(c),add(c,additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(c),add(c,additive_identity)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(additive_identity,additive_identity,_3), -sum(_17,_17,add(_1,c)), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(additive_identity,additive_identity,_3), -sum(_17,_17,add(_1,c)), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(additive_identity,_17,_3), -sum(_3,add(_1,c),add(_1,c)), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -sum(additive_identity,_17,_3), -sum(_3,add(_1,c),add(_1,c)), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(c,add(additive_identity,additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(c,add(additive_identity,additive_identity)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(c,add(c,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(c,add(c,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(c,add(c,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(c,add(c,c)), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,add(c,additive_identity)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,add(c,additive_identity)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(c,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,add(_1,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,add(_1,c)), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,add(_1,c)), -product(c,add(_1,c),c), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,add(_1,c)), -product(c,add(_1,c),c), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,add(_1,c)), -product(c,add(_1,c),d), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,add(_1,c)), -product(c,add(_1,c),d), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(add(c,c),c,c), -product(c,c,add(c,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -equalish(c,add(c,c)), -sum(add(_3,c),c,_3), -product(c,c,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,_15),c),additive_inverse(add(add(_14,_15),c))),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_identity,add(add(_14,_15),c)),c), -product(_0,additive_identity,d), -product(_0,add(add(_14,_15),c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(d,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(_14,_15),c),additive_inverse(add(add(_14,_15),c))),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_inverse(add(add(_14,_15),c)),add(add(_14,_15),c)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(d,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(c,d),c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,add(c,c)), -sum(add(c,c),d,c), -product(c,c,add(c,c))]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_identity,add(add(c,d),c)),c), -product(_0,additive_identity,d), -product(_0,add(add(c,d),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -equalish(c,add(c,c)), -sum(add(_3,c),d,_3), -product(c,c,add(_3,c))]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_inverse(add(add(c,_20),c)),add(add(c,_20),c)),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(d,c),c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(c,d),c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(d,d),c), -product(_0,additive_identity,d), -product(_0,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(d,d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(_3,add(_3,c)), -sum(c,add(_1,c),_1), -product(c,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,add(d,c),c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(_3,add(_3,c)), -sum(c,add(_1,c),_1), -product(c,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(d,add(d,add(d,_20))),c), -product(_0,additive_identity,d), -product(_0,add(d,add(d,_20)),additive_identity), -product(_0,c,add(d,add(d,_20)))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,add(_3,c)), -sum(d,add(_1,c),_1), -product(c,c,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,add(d,d),c), -product(_0,additive_identity,d), -product(_0,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,add(_3,c)), -sum(d,add(_1,c),_1), -product(c,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_identity,d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -product(c,c,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,add(d,d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,add(_1,c)), -sum(_3,_3,add(_1,c)), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(c,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_0,add(d,add(d,add(_18,c))),c), -product(_0,additive_identity,d), -product(_0,add(d,add(_18,c)),additive_identity), -product(_0,c,add(d,add(_18,c)))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(c,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_18,d),d),d),c), -product(_0,additive_identity,d), -product(_0,add(add(_18,d),d),additive_identity), -product(_0,c,add(add(_18,d),d))]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_identity,d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(_18,_20),d),d),c), -product(_0,additive_identity,d), -product(_0,add(add(_18,_20),d),additive_identity), -product(_0,c,add(add(_18,_20),d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(_3,_1), -sum(_3,_22,_1), -product(_22,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),d,additive_identity), -equalish(_3,_1), -sum(_3,_22,_1), -product(_22,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,c), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,c), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,d), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,d), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,c), -sum(_1,c,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -equalish(c,_3), -sum(_1,c,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,c,add(d,c)), -sum(d,d,additive_identity), -equalish(d,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,c,add(d,c)), -sum(d,d,additive_identity), -equalish(d,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,c,add(d,c)), -sum(d,d,additive_identity), -equalish(d,d), -sum(_1,d,d), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,c,add(d,c)), -sum(_3,d,additive_identity), -equalish(d,_3), -sum(_1,d,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,_1), -sum(c,_22,_1), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(d,c)), -sum(_1,d,additive_identity), -equalish(c,_1), -sum(c,_22,_1), -product(_22,d,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(d,_1), -sum(d,_22,_1), -product(_22,c,_22)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(d,_1), -sum(d,_22,_1), -product(_22,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(_22,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(_22,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(_22,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(_22,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(d,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(c,c,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(d,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,d,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(d,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,d,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(d,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,d,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(c,d,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(_22,d,additive_identity), -equalish(_3,_1), -sum(_3,_3,_1), -sum(c,d,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,_3,_22), -sum(d,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(add(_1,c),_3,_22), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_22), -sum(_3,add(_1,c),_22), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(additive_identity,additive_identity,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(additive_identity,additive_identity,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(additive_identity,_22,_22), -sum(_3,add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_22), -sum(additive_identity,_22,_22), -sum(_3,add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_18,c), -product(_0,additive_identity,d), -product(_0,add(d,_18),additive_identity), -product(_0,c,_18)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_identity,d), -product(_0,add(d,c),additive_identity), -product(_0,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(_3,_1), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(_3,_1), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),_1,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,c,add(c,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_1,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_identity,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,c,add(c,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,_1), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,_1), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -product(_17,_3,add(_1,c)), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,c), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,c), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_20), -product(_20,_20,_3), -product(_3,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),_1,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),_1,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),c,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),c,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_17,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_17,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -product(additive_identity,_17,_3), -product(_17,additive_identity,_3), -product(_3,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_17), -product(additive_identity,_17,_3), -product(_17,additive_identity,_3), -product(_3,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_1,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,c,add(_1,c)), -sum(_1,d,additive_identity), -equalish(_1,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_3,c)), -sum(_3,d,additive_identity), -equalish(_3,c), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -equalish(c,d), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_19), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_19), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,_1), -product(_19,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(c,_1), -product(_19,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,_15),c),c),c), -product(_0,additive_inverse(c),d), -product(_0,add(add(add(_14,_15),c),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,_15),c),c),c), -product(_0,additive_inverse(c),d), -product(_0,add(add(_14,_15),c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_inverse(additive_identity),add(add(_14,_15),c)),c), -product(_0,additive_inverse(add(add(_14,_15),c)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(_18,_15),c),c),c), -product(_0,additive_inverse(c),d), -product(_0,add(add(add(_18,_15),c),additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,c,add(d,c)), -sum(c,d,additive_identity), -equalish(d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(c,_15),c),c),c), -product(_0,additive_inverse(c),d), -product(_0,add(add(c,_15),c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,c,add(d,c)), -sum(c,d,additive_identity), -equalish(d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,c,add(_1,c)), -sum(_1,d,additive_identity), -equalish(_1,c), -product(_1,d,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_inverse(additive_identity),add(add(d,_15),c)),c), -product(_0,additive_inverse(add(add(d,_15),c)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_3,c)), -sum(_3,d,additive_identity), -equalish(_3,c), -product(_3,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,d,additive_identity), -equalish(c,d)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,d,additive_identity), -equalish(c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -equalish(c,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -equalish(c,d), -product(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(d,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(d,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(d,_1), -product(_19,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,c,add(_3,c)), -sum(_1,d,additive_identity), -equalish(d,_1), -product(_19,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_19), -product(add(_1,c),d,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_14,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,add(_14,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_14,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,_14,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,add(c,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,c,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,c), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,c), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,c), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,c), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,c), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(additive_identity)),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(additive_inverse(additive_identity))),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(additive_identity)),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,d), -product(c,d,_1)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,d), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,d), -product(c,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(additive_inverse(additive_identity))),d), -product(_0,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,d), -product(c,d,c)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,d), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,d), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,c), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,c), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_21), -product(_3,_3,_21), -product(_3,_21,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -product(_3,_3,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(c,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(d,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_19,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_19,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(_3,d,additive_identity), -equalish(_3,_19), -product(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -product(additive_identity,_3,_19), -product(_3,additive_identity,_19), -product(_3,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,c,add(_1,c)), -sum(add(_1,c),d,additive_identity), -equalish(_3,_19), -product(additive_identity,_3,_19), -product(_3,additive_identity,_19), -product(_3,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,add(c,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,add(c,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_14,additive_identity), -equalish(_3,_14), -product(_3,add(_1,c),_14), -product(_14,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(additive_identity),d), -product(_0,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_14,additive_identity), -equalish(_3,_14), -product(_3,add(_1,c),_14), -product(_14,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_14,_3),additive_identity,additive_identity), -equalish(_14,_14), -product(_14,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_14,_3),additive_identity,additive_identity), -equalish(_14,_14), -product(_14,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_14), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_14), -product(additive_identity,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(_3,_18), -product(_3,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(c),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_inverse(c),d), -product(_0,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c)), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c)), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c)), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_18), -product(additive_identity,_3,add(_1,c)), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_3,_18), -product(_3,add(_1,c),_18), -equalish(add(_1,c),_18), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_3,_18), -product(_3,add(_1,c),_18), -equalish(add(_1,c),_18), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_19,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_19,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_19,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_19,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,additive_identity),additive_identity),additive_identity),c), -product(_0,c,d), -product(_0,add(add(add(_14,additive_identity),additive_identity),c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,additive_identity),additive_identity),additive_identity),c), -product(_0,additive_inverse(add(add(_14,additive_identity),additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(_14,additive_identity),additive_identity),additive_identity),c), -product(_0,c,d), -product(_0,add(add(add(_14,additive_identity),additive_identity),c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_identity,additive_identity),c), -product(_0,add(add(_14,additive_identity),additive_identity),d), -product(_0,add(add(_14,additive_identity),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_inverse(add(add(_14,additive_identity),additive_identity)),additive_identity),c), -product(_0,add(add(_14,additive_identity),additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(c,additive_identity),additive_identity),additive_identity),c), -product(_0,additive_inverse(add(add(c,additive_identity),additive_identity)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_identity,additive_identity),c), -product(_0,add(add(c,additive_identity),additive_identity),d), -product(_0,add(add(c,additive_identity),additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_inverse(add(add(d,additive_identity),additive_identity)),additive_identity),c), -product(_0,add(add(d,additive_identity),additive_identity),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -equalish(add(_1,c),_3), -product(_19,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -equalish(add(_1,c),_3), -product(_19,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,c,d), -product(_0,additive_inverse(additive_identity),additive_identity), -product(_0,additive_identity,additive_inverse(additive_identity))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -equalish(add(_1,c),additive_identity), -product(_19,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -equalish(add(_1,c),additive_identity), -product(_19,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,add(_1,c),add(_1,c)), -sum(_17,_17,_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,add(_1,c),add(_1,c)), -sum(_17,_17,_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,additive_inverse(_13)),additive_inverse(c)),additive_inverse(c)),c), -product(_0,c,d), -product(_0,add(add(add(_14,additive_inverse(_13)),additive_inverse(c)),additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(_14,additive_inverse(_13)),additive_inverse(c)),additive_inverse(c)),c), -product(_0,c,d), -product(_0,add(add(add(_14,additive_inverse(_13)),additive_inverse(c)),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_14,additive_inverse(_13)),additive_inverse(c)),additive_inverse(c)),c), -product(_0,c,d), -product(_0,add(add(_14,additive_inverse(_13)),additive_inverse(c)),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_inverse(additive_identity),additive_inverse(add(add(_14,additive_inverse(_13)),additive_inverse(c)))),c), -product(_0,add(add(_14,additive_inverse(_13)),additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(c,additive_inverse(_13)),additive_inverse(c)),additive_inverse(c)),c), -product(_0,c,d), -product(_0,add(add(c,additive_inverse(_13)),additive_inverse(c)),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_inverse(additive_identity),additive_inverse(add(add(d,additive_inverse(_13)),additive_inverse(c)))),c), -product(_0,add(add(d,additive_inverse(_13)),additive_inverse(c)),d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -sum(_17,_17,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -sum(_17,_17,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,_17), -product(additive_identity,add(_1,c),additive_identity), -sum(_17,_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,_17), -product(additive_identity,add(_1,c),additive_identity), -sum(_17,_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(additive_inverse(additive_identity)),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_inverse(additive_identity)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3), -product(_17,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(additive_inverse(additive_identity)),additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3), -product(_17,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,additive_inverse(additive_inverse(additive_identity)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -sum(add(_1,c),additive_identity,_3), -sum(_17,add(_1,c),additive_identity), -product(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -sum(add(_1,c),additive_identity,_3), -sum(_17,add(_1,c),additive_identity), -product(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_20,d),d),d),c), -product(_0,additive_identity,d), -product(_0,add(add(add(_20,d),d),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(add(add(_20,d),d),d),c), -product(_0,additive_identity,d), -product(_0,add(add(_20,d),d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,add(additive_inverse(additive_identity),d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(c,d),d),d),c), -product(_0,additive_identity,d), -product(_0,add(add(add(c,d),d),additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(add(add(d,d),d),d),c), -product(_0,additive_identity,d), -product(_0,add(add(d,d),d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,add(additive_inverse(additive_identity),d),c), -product(_0,additive_identity,d), -product(_0,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,add(c,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,add(c,c)), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(add(c,c),add(c,c)), -product(add(c,c),c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_3,c),add(c,c)), -product(add(_3,c),c,_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -equalish(add(d,c),add(d,c)), -product(add(d,c),d,d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),_3,additive_identity), -equalish(add(_3,c),add(d,c)), -product(add(_3,c),d,_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),_3,_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),_3,_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(d),additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_0,additive_identity,c), -product(_0,additive_identity,d), -product(_0,add(additive_inverse(d),additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,c), -product(_1,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,c), -product(_1,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,d), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,d), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(_3,_3,add(_1,c)), -sum(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,add(c,c),additive_identity), -equalish(c,add(c,c)), -product(c,c,add(c,c)), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),c,_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),c,_1), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(_3,_3,add(_1,c)), -sum(add(_1,c),c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(_3,_3,add(_1,c)), -sum(add(_1,c),c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,_3), -sum(additive_identity,c,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,_3), -sum(additive_identity,c,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),c,_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),c,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(_3,c,add(_1,c)), -sum(d,d,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(c,c)), -product(c,c,add(_1,c)), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(_3,c)), -product(c,c,add(_1,c)), -sum(add(_1,c),d,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(_3,c)), -product(c,c,add(_1,c)), -sum(add(_1,c),d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,_3), -sum(additive_identity,d,add(_1,c)), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,_3), -sum(additive_identity,d,add(_1,c)), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(_3,_3,add(_1,c)), -sum(c,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(c,c)), -product(c,c,add(_1,c)), -sum(c,add(_1,c),_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_1,c), -product(c,_1,d), -product(add(_0,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(_3,c)), -product(c,c,add(_1,c)), -sum(d,add(_1,c),_1)]]
Ag1 <------  Send Clauses : [[-product(_7,_1,c), -product(c,_1,d), -product(add(_7,c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_1,c), -product(additive_identity,_1,d), -product(_0,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(_3,c)), -product(c,c,add(_1,c)), -sum(d,add(_1,c),_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_0,_1,c), -product(additive_inverse(_0),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_0,c), -product(_1,_0,d), -product(_1,_0,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_0),_1,c), -product(_0,_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(additive_identity,d,d), -product(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,d,c), -product(additive_inverse(c),d,d), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(d,c,d), -product(d,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(c),d,c), -product(c,d,d), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_3,c)), -product(add(_1,c),_1,_3), -sum(c,additive_identity,add(_1,c)), -product(_1,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_1,add(c,c)), -sum(add(_1,c),c,additive_identity), -equalish(add(_1,c),add(c,c)), -product(add(_1,c),_1,c), -sum(c,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_3,c)), -product(add(_1,c),_1,_3), -sum(d,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_3,c)), -product(add(_1,c),_1,_3), -sum(d,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),_3,additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_1), -product(_3,c,_22), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_1), -product(_3,c,_22), -sum(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_22,_1), -product(_22,c,c), -sum(_22,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_22,_1), -product(_22,c,c), -sum(_22,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),c,_3), -sum(additive_identity,_3,_22), -product(additive_identity,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),c,_3), -sum(additive_identity,_3,_22), -product(additive_identity,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_1), -product(_3,d,_22), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_1), -product(_3,d,_22), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),d,_3), -sum(additive_identity,_3,_22), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),d,_3), -sum(additive_identity,_3,_22), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_22,_1), -product(_22,c,c), -sum(_3,_22,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(_22,_1), -product(_22,c,c), -sum(_3,_22,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,_3), -sum(add(_1,c),add(_1,c),_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,_3), -sum(add(_1,c),add(_1,c),_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,_3), -sum(additive_identity,add(_1,c),_22), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,_3), -sum(additive_identity,add(_1,c),_22), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_22,_3), -sum(_3,additive_identity,_1), -product(additive_identity,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_22,_3), -sum(_3,additive_identity,_1), -product(additive_identity,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,_3), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,_3), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_3,add(_1,c)), -sum(_22,_22,_22), -product(_22,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_3,add(_1,c)), -sum(_22,_22,_22), -product(_22,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,c), -sum(additive_identity,_3,_22), -product(additive_identity,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,c), -sum(additive_identity,_3,_22), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,d), -sum(additive_identity,_3,_22), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,d), -sum(additive_identity,_3,_22), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_inverse(additive_identity),c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_inverse(additive_identity),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_3,add(_1,c)), -sum(_22,additive_identity,_22), -product(_22,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_3,add(_1,c)), -sum(_22,additive_identity,_22), -product(_22,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,_22), -product(additive_identity,add(_1,c),additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,_22), -product(additive_identity,add(_1,c),additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),c), -product(add(c,c),_1,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),c), -product(add(c,c),_1,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,_1,additive_identity), -equalish(_1,c), -product(_1,c,_1), -sum(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,_1,additive_identity), -equalish(_1,c), -product(_1,c,_1), -sum(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),c), -product(add(c,c),_1,c), -sum(additive_identity,c,c), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(_3,c,additive_identity), -equalish(add(_3,c),_3), -product(add(_3,c),_1,c), -sum(additive_identity,c,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),d), -product(add(d,c),_1,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),d), -product(add(d,c),_1,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,c,add(d,c)), -sum(d,_1,additive_identity), -equalish(_1,d), -product(_1,c,_1), -sum(_1,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,c,add(d,c)), -sum(d,_1,additive_identity), -equalish(_1,d), -product(_1,c,_1), -sum(_1,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),d), -product(add(d,c),_1,d), -sum(additive_identity,d,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(_3,d,additive_identity), -equalish(add(_3,c),_3), -product(add(_3,c),_1,d), -sum(additive_identity,d,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_3,add(_3,c)), -sum(_1,_22,additive_identity), -equalish(_22,_1), -product(_22,_3,_22), -sum(c,_22,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_3,add(_3,c)), -sum(_1,_22,additive_identity), -equalish(_22,_1), -product(_22,_3,_22), -sum(c,_22,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(d,c,additive_identity), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,c,add(_3,c)), -sum(_1,_22,additive_identity), -equalish(_22,_1), -product(_22,c,_22), -sum(d,_22,_1)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(d,c,additive_identity), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,c,add(_3,c)), -sum(_1,_22,additive_identity), -equalish(_22,_1), -product(_22,c,_22), -sum(d,_22,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),_22), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),_22), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_22,_3), -sum(c,additive_identity,_1), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,_22,add(d,c)), -sum(_1,d,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_22,d), -sum(c,additive_identity,_1), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_22,_3), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_22,_3), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -equalish(add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,_3,_22), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,_3,_22), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,_22,_22), -product(_22,_3,_22), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,_22), -product(_22,add(_1,c),additive_identity), -sum(_3,_22,_22), -product(_22,_3,_22), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(c,c)), -sum(add(c,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(c,c,add(c,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_1), -product(additive_identity,_22,add(_1,c)), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_15,c),additive_identity), -equalish(additive_identity,_15), -product(additive_identity,_22,add(_15,c)), -sum(_3,_3,_15), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_1,add(_1,c)), -sum(additive_identity,_3,_22), -sum(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_1,add(_1,c)), -sum(additive_identity,_3,_22), -sum(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_1,_3,_22), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_1,_3,_22), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_inverse(additive_identity),c), -product(c,additive_inverse(additive_identity),d), -product(c,additive_inverse(additive_identity),additive_identity), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_1), -product(additive_identity,_22,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_1), -product(additive_identity,_22,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,additive_inverse(additive_identity),c), -product(c,additive_inverse(additive_identity),d), -product(c,additive_inverse(additive_identity),additive_identity), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,c,add(_1,c)), -sum(additive_identity,_3,_22), -sum(add(_1,c),d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,c,add(_1,c)), -sum(additive_identity,_3,_22), -sum(add(_1,c),d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(c,_3,_22), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(c,_3,_22), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_1,add(_1,c)), -sum(_3,additive_identity,_22), -sum(c,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,_1,add(_1,c)), -sum(_3,additive_identity,_22), -sum(c,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,c,add(_1,c)), -sum(_3,additive_identity,_22), -sum(d,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(additive_identity,c,add(_1,c)), -sum(_3,additive_identity,_22), -sum(d,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_22,_22,_22), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_22,_22,_22), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_22,_22), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_22,_22), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(c,add(_1,c),add(_1,c)), -product(_3,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(c,add(_1,c),add(_1,c)), -product(_3,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(d,add(_1,c),add(_1,c)), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_3,_3,_22), -sum(d,add(_1,c),add(_1,c)), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_22), -product(_22,_3,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_3,add(_1,c),_22), -sum(add(_1,c),add(_1,c),_22), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_3,add(_1,c),_22), -sum(add(_1,c),add(_1,c),_22), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_3,add(_1,c),_22), -sum(add(_1,c),additive_identity,_22), -sum(_22,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_3,add(_1,c),_22), -sum(add(_1,c),additive_identity,_22), -sum(_22,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_22)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,_1,c), -product(c,add(c,_1),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,additive_identity,c), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,additive_inverse(c),c), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,c), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,additive_inverse(c),c), -product(c,additive_inverse(c),d), -product(c,additive_inverse(c),additive_identity), -product(c,c,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(c,add(c,c),c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,additive_identity,c), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,additive_inverse(c),c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,c), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -product(_17,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(c,additive_inverse(c),c), -product(c,additive_inverse(c),d), -product(c,additive_inverse(c),additive_identity), -product(c,c,c), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(c,c)), -sum(c,add(c,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(c,c)), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_15,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -equalish(add(_15,c),_15), -product(add(_15,c),_17,_3), -product(_15,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(_3,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),_1,_3), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_3,c)), -sum(_3,_3,additive_identity), -equalish(add(_3,c),_17), -product(add(_3,c),_3,_3), -product(_17,_3,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -product(_17,_3,c), -product(c,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -product(_17,_3,c), -product(c,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_17), -product(additive_identity,_3,add(_1,c)), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(_3,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),c,_3), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_17,c), -sum(d,c,add(_1,c)), -sum(c,c,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),c,c), -product(_17,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_17,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -product(_17,_3,d), -product(d,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_17), -product(_17,_3,additive_identity), -product(_17,_3,d), -product(d,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),_1,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),_1,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),c,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),c,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -equalish(additive_identity,_17), -product(additive_identity,add(_1,c),_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -equalish(additive_identity,_17), -product(additive_identity,add(_1,c),_3), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -equalish(add(_1,c),_17), -product(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),_3), -product(_17,_17,_3), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),_3), -product(_17,_17,_3), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_20,_3), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),c,_3), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_20,_3), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_20,_3), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,_20,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,_20), -product(_3,_20,add(_1,c)), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,_20,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,_20), -product(_3,_20,add(_1,c)), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_20,additive_identity), -equalish(_3,_20), -product(_3,add(_1,c),_20), -product(_20,_20,_3), -product(_3,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,_1,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,_1,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,c,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,c,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,_3,_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,_3,_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,_17), -product(_17,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),_17), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_3,add(_1,c),_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),_17), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c), -product(_1,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_13,_13,c), -product(_13,c,d), -equalish(c,_13), -sum(_13,_13,add(_13,c)), -sum(d,c,additive_identity), -equalish(_13,c), -product(_13,_13,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,c,add(_1,c)), -sum(_1,_1,additive_identity), -equalish(_1,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,c,add(_1,c)), -sum(_1,_1,additive_identity), -equalish(_1,c), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_1,_1), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(c,_3,additive_identity), -equalish(add(_3,c),c), -product(add(_3,c),_3,_3), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(d,d), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(d,d), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,d), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,d), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(add(c,c),d), -product(add(c,c),c,c), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -equalish(add(_3,c),d), -product(add(_3,c),_3,c), -product(c,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,add(d,d),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_15,_1,c), -product(_15,c,d), -equalish(_16,_15), -sum(_1,_15,add(_1,c)), -sum(d,_16,additive_identity), -equalish(_15,_16), -product(_15,_15,_16)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,add(d,d),d)]]
Ag0 <------  Send Clauses : [[-product(_15,_1,c), -product(_15,c,d), -equalish(_16,_15), -sum(_1,_15,add(_1,c)), -sum(d,_16,additive_identity), -equalish(_15,_16), -product(_15,_15,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_15,c), -product(c,c,d), -equalish(_1,c), -sum(_15,c,add(_15,c)), -sum(_1,_1,additive_identity), -equalish(_16,_1), -product(_16,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_15,c), -product(c,c,d), -equalish(_1,c), -sum(_15,c,add(_15,c)), -sum(_1,_1,additive_identity), -equalish(_16,_1), -product(_16,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_15,_1,c), -product(_15,c,d), -equalish(_16,_15), -sum(_1,_15,add(_1,c)), -sum(_15,_16,additive_identity), -equalish(add(_1,c),_16), -product(add(_1,c),_15,_16), -product(add(_1,c),c,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(_3,_19,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,_19), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_19), -product(additive_identity,_3,add(_1,c)), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_19), -product(additive_identity,_3,add(_1,c)), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(_3,_3,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),c,_3), -product(add(_1,c),_3,_19)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_19,c), -sum(_1,c,add(_1,c)), -sum(c,c,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),c,c), -product(add(_1,c),c,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(additive_identity,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(additive_identity,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_1,_3,_19), -product(_1,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_1,_3,_19), -product(_1,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -equalish(c,c), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -equalish(c,c), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,d,add(_1,c)), -sum(_1,_1,additive_identity), -equalish(_1,c), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,d,add(_1,c)), -sum(_1,_1,additive_identity), -equalish(_1,c), -product(_1,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_1,_1), -product(_1,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(c,_3,additive_identity), -equalish(add(_3,c),c), -product(add(_3,c),_3,_3), -product(_3,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -equalish(d,d), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -equalish(d,d), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,d,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,d,add(c,c)), -sum(c,c,additive_identity), -equalish(c,d), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(add(c,c),d), -product(add(c,c),c,c), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -equalish(add(_3,c),d), -product(add(_3,c),_3,c), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_15,d,c), -product(_15,c,d), -equalish(_1,_15), -sum(c,_15,add(d,c)), -sum(c,_1,additive_identity), -equalish(_15,_1), -product(_15,_15,_1)]]
Ag0 <------  Send Clauses : [[-product(_15,d,c), -product(_15,c,d), -equalish(_1,_15), -sum(c,_15,add(d,c)), -sum(c,_1,additive_identity), -equalish(_15,_1), -product(_15,_15,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_15,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_15,c)), -sum(_1,_1,additive_identity), -equalish(_16,_1), -product(_16,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_15,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_15,c)), -sum(_1,_1,additive_identity), -equalish(_16,_1), -product(_16,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_15,_1,c), -product(_15,c,d), -equalish(_16,_15), -sum(c,_15,add(_1,c)), -sum(_15,_16,additive_identity), -equalish(add(_1,c),_16), -product(add(_1,c),_15,_16), -product(add(_1,c),d,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(_3,_19,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,_19), -product(add(_1,c),d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,d,add(_1,c)), -sum(_3,_3,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),d,_3), -product(add(_1,c),_3,_19)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,_1,c), -product(d,c,d), -equalish(_19,d), -sum(c,d,add(_1,c)), -sum(d,d,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),d,d), -product(add(_1,c),d,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(additive_identity,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_19,_3), -product(additive_identity,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(c,_3,_19), -product(c,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(c,_3,_19), -product(c,d,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,add(d,d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,add(d,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(c,_1,additive_identity), -equalish(_1,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(c,_1,additive_identity), -equalish(_1,c), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_1,c), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_1,c), -product(_1,c,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,d,add(_1,c)), -sum(c,_1,additive_identity), -equalish(c,d), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,d,add(_1,c)), -sum(c,_1,additive_identity), -equalish(c,d), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,d,add(_1,c)), -sum(d,c,additive_identity), -equalish(c,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,d,add(_1,c)), -sum(d,c,additive_identity), -equalish(c,d), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,d,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(c,d), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,d,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(c,d), -product(c,d,add(_1,c)), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_1,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_1,additive_identity), -equalish(_3,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,c), -product(_3,_3,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -equalish(_3,_16), -product(_3,_3,_16), -product(_3,_16,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_19,additive_identity), -equalish(_3,_19), -product(_3,_3,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,_1), -product(_3,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(d,c,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(d,c,additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,c), -product(_3,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_19,add(_1,c),additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_19,add(_1,c),additive_identity), -equalish(add(_1,c),_19), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_3,_19,_19), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_19), -product(_19,_3,additive_identity), -product(_3,_19,_19), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,c), -product(additive_identity,_3,add(_1,c)), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,c), -product(additive_identity,_3,add(_1,c)), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,c), -product(additive_identity,_3,add(_1,c)), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,c), -product(additive_identity,_3,add(_1,c)), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,c), -product(_3,_3,add(_1,c)), -product(_1,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_1,c), -product(_1,_1,add(_1,c)), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),c,_3), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),c,_3), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,c), -product(c,_3,additive_identity), -product(_1,c,c), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,c), -product(c,_3,additive_identity), -product(_1,c,_19), -product(_3,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_inverse(additive_identity),d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_inverse(additive_identity),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,d), -product(additive_identity,_3,add(_1,c)), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,d), -product(additive_identity,_3,add(_1,c)), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,d), -product(additive_identity,_3,add(_1,c)), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,d), -product(additive_identity,_3,add(_1,c)), -product(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,d), -product(_3,_3,add(_1,c)), -product(c,d,_3)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(d,c), -sum(d,c,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(c,d), -product(c,c,add(_1,c)), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),d), -product(add(_1,c),d,_3), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),d), -product(add(_1,c),d,_3), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(d,d), -product(d,_3,additive_identity), -product(c,d,d), -product(_3,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(d,d), -product(d,_3,additive_identity), -product(c,d,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_16,additive_identity), -equalish(_3,_16), -product(_3,add(_1,c),_16), -product(add(_1,c),_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_16,additive_identity), -equalish(_3,_16), -product(_3,add(_1,c),_16), -product(add(_1,c),_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_16,additive_identity), -equalish(_3,_16), -product(_3,add(_1,c),_16), -product(add(_1,c),_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_16,additive_identity), -equalish(_3,_16), -product(_3,add(_1,c),_16), -product(add(_1,c),_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_16,_16,additive_identity), -equalish(additive_identity,_16), -product(additive_identity,add(_1,c),_16), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_16,_16,additive_identity), -equalish(additive_identity,_16), -product(additive_identity,add(_1,c),_16), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_16,additive_identity), -equalish(_16,_16), -product(_16,add(_1,c),_16), -product(add(_1,c),_3,_3), -product(_16,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),_19), -product(add(_1,c),_3,_3), -product(_19,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_21,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),_21,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_1,c),c,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_21,_3), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_15,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_15,_3), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,_21,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,_21), -product(_3,_21,add(_1,c)), -product(_3,_3,_21)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,_21,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,_21), -product(_3,_21,add(_1,c)), -product(_3,_3,_21)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_21,additive_identity), -equalish(_3,_21), -product(_3,add(_1,c),_21), -product(_3,_3,_21), -product(_3,_21,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -product(_3,_3,_19), -product(_3,_19,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,_1), -product(_3,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,_1), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,c), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,c), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,_3), -product(add(_1,c),_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,_3), -product(add(_1,c),_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,_3), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,_3), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -product(add(_1,c),_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_3,add(_1,c),_19), -product(add(_1,c),_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,additive_identity), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,additive_identity), -product(d,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_inverse(additive_identity),c), -product(d,additive_inverse(additive_identity),d), -product(d,additive_inverse(additive_identity),additive_identity), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_inverse(additive_identity),c), -product(d,additive_inverse(additive_identity),d), -product(d,additive_inverse(additive_identity),additive_identity), -product(d,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_15,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,_15,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_15,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_15,_15,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_15,additive_identity), -product(_15,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_15,_15,additive_identity), -product(_15,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(multiply(_15,_3),add(_1,c),additive_identity), -product(_15,_15,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(multiply(_15,_3),add(_1,c),additive_identity), -product(_15,_15,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_15,_15,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_15,_15,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_18,_18,_3), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_18,_18,_3), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_18,_18,_3), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_18,_18,_3), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_18,additive_identity), -equalish(_18,_18), -product(_18,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,_1,d), -product(d,add(d,_1),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_18,_18,additive_identity), -equalish(_18,_18), -product(_18,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,additive_identity,d), -product(d,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,additive_inverse(d),d), -product(d,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,c,d), -product(d,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,additive_inverse(d),c), -product(d,additive_inverse(d),d), -product(c,additive_inverse(d),additive_identity), -product(d,d,d), -product(d,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,c,d), -product(d,add(d,c),c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,additive_identity,d), -product(d,d,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(d,additive_inverse(d),d), -product(d,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,c,d), -product(d,c,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_inverse(d),c), -product(d,additive_inverse(d),d), -product(c,additive_inverse(d),additive_identity), -product(d,d,d), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,_19,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,_19,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(_19,_19,_3)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(_19,_19,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -equalish(_19,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -equalish(_19,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -equalish(_19,_3), -product(_19,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -equalish(_19,_3), -product(_19,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(_3,_19,additive_identity), -product(_19,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(_3,_19,additive_identity), -product(_19,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -equalish(add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(_17,_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(_3,add(_1,c),_17), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(add(_1,c),_1,c), -product(add(_1,c),c,d), -equalish(add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_17,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_17), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_1,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(_17,_3,additive_identity), -product(_1,_1,_3), -sum(add(_1,c),add(_1,c),_17), -product(_1,add(_3,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_1,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(_17,_3,additive_identity), -product(_1,_1,_3), -sum(add(_1,c),add(_1,c),_17), -product(_1,add(_3,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_3,_17), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_3,_17), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(_17,_17,_17), -sum(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(_17,_17,_17), -sum(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,_17,_3), -sum(_3,add(_1,c),_17), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,_17,_3), -sum(_3,add(_1,c),_17), -product(_17,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_3), -sum(add(_1,c),add(_1,c),_3), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_3), -sum(add(_1,c),add(_1,c),_3), -product(_17,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,add(_1,c),_17), -product(_17,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,add(_1,c),_17), -product(_17,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,add(additive_identity,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,add(additive_identity,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(_16,_16,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -product(_17,_17,_16), -sum(_17,_17,_16)]]
Ag0 <------  Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(_16,_16,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -product(_17,_17,_16), -sum(_17,_17,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(_16,_16,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -product(_17,_17,_16), -sum(add(_1,c),_17,_16), -product(_17,add(_1,c),_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -sum(add(_1,c),_17,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,add(additive_identity,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_17,_3), -product(_17,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,add(additive_identity,additive_identity),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_17,_3), -product(_17,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_16,additive_identity), -product(_16,_16,_16), -sum(_16,_16,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_16,additive_identity), -product(_16,_16,_16), -sum(_16,_16,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_16,additive_identity), -product(_16,_16,_16), -sum(add(_1,c),_16,_3), -product(_16,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_17,_17), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -sum(additive_identity,_17,_3), -product(_17,_17,_17), -product(_17,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(additive_identity,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(_3,additive_identity,add(_1,c)), -product(_17,_17,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(_3,additive_identity,add(_1,c)), -product(_17,_17,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(additive_identity,_3,add(_1,c)), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(additive_identity,_3,add(_1,c)), -product(_17,_17,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,_1,additive_identity), -product(c,add(additive_identity,_1),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_inverse(additive_identity),additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_inverse(additive_identity),c), -product(additive_identity,additive_inverse(additive_identity),d), -product(c,additive_inverse(additive_identity),additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(_3,_3,add(_1,c)), -product(_17,_17,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,_16,additive_identity), -product(c,add(additive_identity,_16),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_17,_3), -sum(_3,_3,add(_1,c)), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_3,_3), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,_17,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -sum(_17,_3,_3), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,_17,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_inverse(additive_identity),additive_identity), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_inverse(additive_identity),c), -product(additive_identity,additive_inverse(additive_identity),d), -product(c,additive_inverse(additive_identity),additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),add(c,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),add(c,c),c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(add(c,c),add(c,c),_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -product(add(d,c),add(d,c),d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),_3,additive_identity), -product(add(d,c),add(d,c),_3), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,c,additive_identity), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,c,additive_identity), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,d,additive_identity), -product(c,d,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,d,additive_identity), -product(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,c), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(add(_1,c),add(_1,c),c), -product(_1,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(add(_1,c),add(_1,c),c), -product(_1,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,c), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,c,additive_identity), -product(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(add(_1,c),add(_1,c),d), -product(c,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,c,additive_identity), -product(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(add(_1,c),add(_1,c),d), -product(c,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),add(c,c),_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),add(c,c),_1), -sum(d,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -product(_1,_1,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(add(_1,c),c,add(_1,c)), -product(_1,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),add(c,c),_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(add(c,c),add(c,c),_1), -sum(c,d,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,additive_identity), -product(c,additive_identity,c), -product(_16,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(d,d,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,c,additive_identity), -product(c,additive_identity,c), -product(_16,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(add(_1,c),d,add(_1,c)), -product(c,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(add(_1,c),d,add(_1,c)), -product(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_1,add(_1,c),additive_identity), -product(add(c,c),add(c,c),add(_1,c)), -sum(c,c,_1), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(d,_3,_1), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -product(add(_3,c),add(_3,c),add(_1,c)), -sum(d,_3,_1), -product(c,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,additive_inverse(additive_identity),_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,additive_inverse(additive_identity),_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,d,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,d,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(c,c,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(c,c,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(c,c,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(c,c,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(add(c,c),_1,additive_identity), -product(c,c,_1), -sum(c,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,c,add(c,c)), -sum(add(c,c),_1,additive_identity), -product(_3,_3,_1), -sum(c,c,_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,c,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(c,c)), -sum(add(c,c),d,additive_identity), -product(d,d,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,c,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(c,c)), -sum(add(c,c),d,additive_identity), -product(d,d,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,d,add(d,c)), -sum(add(d,c),c,additive_identity), -product(c,c,c), -sum(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,d,add(d,c)), -sum(add(d,c),c,additive_identity), -product(c,c,c), -sum(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(add(d,c),_1,additive_identity), -product(d,d,_1), -sum(d,d,d), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,d,add(d,c)), -sum(add(d,c),_1,additive_identity), -product(_3,_3,_1), -sum(d,d,_3), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,c,c), -product(_16,c,d), -equalish(c,_16), -sum(c,_16,add(c,c)), -sum(add(c,c),_16,additive_identity), -product(c,c,_16), -sum(_16,c,c)]]
Ag0 <------  Send Clauses : [[-product(_16,c,c), -product(_16,c,d), -equalish(c,_16), -sum(c,_16,add(c,c)), -sum(add(c,c),_16,additive_identity), -product(c,c,_16), -sum(_16,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_22,_16), -sum(_22,_16,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -product(_22,_22,_16), -sum(_16,_22,_22), -product(_16,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_3), -sum(_3,_22,_22), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(add(c,c),_22,additive_identity), -product(_1,_1,_22), -sum(_3,_3,_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(add(c,c),_22,additive_identity), -product(_1,_1,_22), -sum(_3,_3,_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(add(_1,c),_22,additive_identity), -product(_22,_22,_22), -sum(_22,_3,_22), -product(_3,_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(add(_1,c),_22,additive_identity), -product(_22,_22,_22), -sum(_22,_3,_22), -product(_3,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_3), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_3), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -product(_22,_3,_3), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -product(_22,_3,_3), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(_22,_22,c), -sum(_3,_3,_22), -product(_3,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -product(_22,_22,c), -sum(_3,_3,_22), -product(_3,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(_22,_22,d), -sum(_3,_3,_22), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -product(_22,_22,d), -sum(_3,_3,_22), -product(_3,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,_22,_3), -sum(add(_1,c),_22,_22), -product(add(_1,c),_22,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,_22,_3), -sum(add(_1,c),_22,_22), -product(add(_1,c),_22,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_22,_22,additive_identity), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -product(_22,_22,additive_identity), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,d,c), -product(c,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(c,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,_1,additive_identity), -product(c,c,_1), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,_1,additive_identity), -product(c,c,_1), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,c,add(c,c)), -sum(c,_1,additive_identity), -product(c,c,_1), -sum(c,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -product(_3,_3,_1), -sum(c,c,_3), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(c,additive_identity,d), -product(_9,additive_identity,additive_identity), -product(_9,_1,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_inverse(additive_identity),c), -product(c,additive_inverse(additive_identity),d), -product(_9,additive_inverse(additive_identity),additive_identity), -product(_9,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(d,_1,additive_identity), -product(d,d,_1), -sum(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(d,_1,additive_identity), -product(d,d,_1), -sum(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_inverse(additive_identity),c), -product(c,additive_inverse(additive_identity),d), -product(_9,additive_inverse(additive_identity),additive_identity), -product(_9,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,d,add(d,c)), -sum(d,_1,additive_identity), -product(d,d,_1), -sum(d,d,d), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,d,add(d,c)), -sum(_3,_1,additive_identity), -product(_3,_3,_1), -sum(d,d,_3), -product(d,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(c,_9,d), -product(_9,_9,additive_identity), -product(_9,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(c,_9,d), -product(_9,_9,additive_identity), -product(_9,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,_22,additive_identity), -product(_1,_1,_22), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,_22,additive_identity), -product(_1,_1,_22), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_3,c)), -sum(_1,_22,additive_identity), -product(_1,_1,_22), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_3,c)), -sum(_1,_22,additive_identity), -product(_1,_1,_22), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,additive_identity,_22), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,additive_identity,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -product(_22,_3,_22), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(_22,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -product(_22,_3,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,_3,_22), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,_3,_22), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_3,_3,_1), -sum(d,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_3,_3,_1), -sum(d,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_1,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_1,_3,_1), -sum(_3,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_1,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_1,_3,_1), -sum(_3,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_3,_22), -sum(_22,c,_3), -product(additive_identity,_1,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_3,_22), -sum(_22,c,_3), -product(additive_identity,_1,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_3,_3,_1), -sum(c,d,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_3,_3,_1), -sum(c,d,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,_3,_22), -sum(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,_3,_22), -sum(d,d,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,c,_9), -product(_9,add(c,_1),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(c,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(_9,c,_9), -product(_9,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_inverse(_1),c), -product(c,additive_inverse(_1),d), -product(c,additive_inverse(_1),additive_identity), -product(_9,_1,_9), -product(_9,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,additive_identity,_9), -product(_9,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,additive_inverse(_1),_9), -product(_9,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(c,c,_3), -sum(c,_3,c), -sum(_3,d,_22)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(_9,c,_9), -product(_9,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(c,c,_3), -sum(c,_3,c), -sum(_3,d,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_3,_22), -sum(_22,d,_3), -product(additive_identity,c,_22)]]
Ag1 <------  Send Clauses : [[-product(c,additive_identity,c), -product(c,additive_identity,d), -product(d,additive_identity,additive_identity), -product(c,c,c), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_3,_22), -sum(_22,d,_3), -product(additive_identity,c,_22)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_inverse(_9),c), -product(c,additive_inverse(_9),d), -product(c,additive_inverse(_9),additive_identity), -product(_9,_9,_9), -product(_9,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_13,c), -product(c,_13,d), -product(c,_13,additive_identity), -product(_13,additive_identity,_13), -product(_13,_13,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_1,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_3,_1,_1), -sum(c,_3,_22)]]
Ag1 <------  Send Clauses : [[-product(_9,_18,c), -product(c,_18,d), -product(c,_18,additive_identity), -product(_9,additive_inverse(_18),_9), -product(_9,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_1,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(_1,_1,_3), -sum(_3,_1,_1), -sum(c,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(c,c,_3), -sum(_3,c,c), -sum(d,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(_22,_3,additive_identity), -product(c,c,_3), -sum(_3,c,c), -sum(d,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -sum(_22,add(_1,c),_3), -product(additive_identity,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(additive_identity,_22,_22), -sum(_22,add(_1,c),_3), -product(additive_identity,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,additive_identity,_22), -sum(c,_22,_3), -product(additive_identity,_1,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,additive_identity,_22), -sum(c,_22,_3), -product(additive_identity,_1,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,additive_identity,_22), -sum(d,_22,_3), -product(additive_identity,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_3,additive_identity,_22), -sum(d,_22,_3), -product(additive_identity,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_22,additive_identity,_22), -sum(add(_1,c),_22,_3), -product(additive_identity,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_22,_22,add(_1,c)), -sum(_22,additive_identity,_22), -sum(add(_1,c),_22,_3), -product(additive_identity,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_22,_22,additive_identity), -sum(_22,_22,_22), -sum(_3,_3,add(_1,c)), -product(_22,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_22,_22,additive_identity), -sum(_22,_22,_22), -sum(_3,_3,add(_1,c)), -product(_22,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_22,_22,additive_identity), -sum(_22,_3,_22), -sum(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3), -product(_22,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_22,_22,additive_identity), -sum(_22,_3,_22), -sum(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3), -product(_22,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,c,c), -product(c,c,d), -product(_13,c,additive_identity), -product(_13,_13,_13), -product(_13,additive_identity,_13)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(_9,c,additive_identity), -product(_9,_9,_9), -product(_9,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_17,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(c,c)), -sum(c,_3,additive_identity), -product(_17,_17,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(d,_17,additive_identity), -product(_1,_1,_17), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(c,c)), -sum(d,_17,additive_identity), -product(_17,_17,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(_1,_1,_17), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(c,_3,add(_3,c)), -sum(_17,_17,additive_identity), -product(_3,_3,_17), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(_3,c)), -sum(_1,_17,additive_identity), -product(_1,_1,_17), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(_3,c)), -sum(_1,_17,additive_identity), -product(_1,_1,_17), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(_17,_3,additive_identity), -product(additive_identity,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(_17,_3,additive_identity), -product(additive_identity,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_3,add(c,c)), -sum(c,_17,additive_identity), -product(_1,_1,_17), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_3,add(c,c)), -sum(c,_17,additive_identity), -product(_1,_1,_17), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,_17,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,_17,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(d,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(c,c,_17), -product(c,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(d,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(c,c,_17), -product(c,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_3,c)), -sum(_1,_17,additive_identity), -product(_1,_1,_17), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_3,c)), -sum(_1,_17,additive_identity), -product(_1,_1,_17), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(_17,_3,additive_identity), -product(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(_17,_3,additive_identity), -product(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_17,_3,add(_1,c)), -sum(c,_17,additive_identity), -product(_1,_1,_17), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(_1,c)), -sum(c,c,additive_identity), -product(_1,_1,c), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_17,_3,add(_1,c)), -sum(d,_17,additive_identity), -product(c,c,_17), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_17,_3,add(_1,c)), -sum(d,_17,additive_identity), -product(c,c,_17), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -product(_17,_17,additive_identity), -product(additive_identity,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_3), -product(_17,_17,additive_identity), -product(additive_identity,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_17,_3), -product(_17,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_17,_3), -product(_17,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,_17,_3), -product(_17,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,_17,_3), -product(_17,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(_17,_17,_17), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_17,_17,additive_identity), -product(_17,_17,_17), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_17,additive_identity), -product(_17,_17,_17), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -product(_17,_17,_3), -product(additive_identity,_17,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(d,_1,additive_identity), -product(d,additive_identity,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -product(_17,_17,_3), -product(additive_identity,_17,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_inverse(additive_identity),_9)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,additive_inverse(additive_identity),d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,d,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_20,additive_identity), -product(_1,_1,_20), -product(_1,_1,_3)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,d,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_20,additive_identity), -product(_1,_1,_20), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,_20,additive_identity), -product(c,c,_20), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,_20,additive_identity), -product(c,c,_20), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_20,_20,additive_identity), -product(_20,_20,_3), -product(_3,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,_1,_3), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,_1,_3), -product(_17,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,c,_3), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,c,_3), -product(_17,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,_17,_3), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,_17,_3), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_17,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,additive_identity,_3), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_17,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,additive_identity,_3), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_17,_17,add(_1,c)), -product(additive_identity,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -product(_17,_3,_3), -product(_17,_17,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_17,additive_identity), -product(_17,_3,_3), -product(_17,_17,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(d,additive_identity,d), -product(_9,additive_identity,additive_identity), -product(d,_1,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_inverse(additive_identity),c), -product(d,additive_inverse(additive_identity),d), -product(_9,additive_inverse(additive_identity),additive_identity), -product(d,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,additive_inverse(additive_identity),c), -product(d,additive_inverse(additive_identity),d), -product(d,additive_inverse(additive_identity),additive_identity), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,_1,additive_identity), -product(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,_1,additive_identity), -product(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(_1,c,additive_identity), -product(c,c,c), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(_3,c,additive_identity), -product(c,c,c), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -product(d,d,d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -product(d,d,d), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(c,_19,additive_identity), -product(_1,_1,_19), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(c,c)), -sum(c,_19,additive_identity), -product(_1,_1,_19), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_19,_19,_3), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_19,_19,_3), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,_3,add(_1,c)), -sum(_19,_19,additive_identity), -product(c,c,_19), -product(c,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,_3,add(_1,c)), -sum(_19,_19,additive_identity), -product(c,c,_19), -product(c,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,_19,additive_identity), -product(_1,_1,_19), -product(_3,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,c,add(_3,c)), -sum(_1,_19,additive_identity), -product(_1,_1,_19), -product(_3,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_19), -product(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_19), -product(additive_identity,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(d,d,_9), -product(d,add(d,_1),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(d,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(d,c,_9), -product(d,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_inverse(_1),c), -product(d,additive_inverse(_1),d), -product(c,additive_inverse(_1),additive_identity), -product(d,_1,_9), -product(d,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(d,additive_identity,_9), -product(d,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(d,additive_inverse(_1),_9), -product(d,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(d,c,d), -product(c,c,additive_identity), -product(d,d,_9), -product(d,add(d,c),c)]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(d,additive_identity,d), -product(d,additive_identity,additive_identity), -product(d,c,d), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,d,add(d,c)), -sum(c,_1,additive_identity), -product(c,c,_1)]]
Ag1 <------  Send Clauses : [[-product(d,additive_inverse(d),c), -product(d,additive_inverse(d),d), -product(c,additive_inverse(d),additive_identity), -product(d,d,d), -product(d,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,d,add(d,c)), -sum(c,_1,additive_identity), -product(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(_1,c,additive_identity), -product(c,c,c), -product(_1,d,_1)]]
Ag1 <------  Send Clauses : [[-product(d,_13,c), -product(d,_13,d), -product(c,_13,additive_identity), -product(d,additive_identity,d), -product(d,_13,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(_3,c,additive_identity), -product(c,c,c), -product(_3,d,_3)]]
Ag1 <------  Send Clauses : [[-product(_9,_18,c), -product(d,_18,d), -product(c,_18,additive_identity), -product(d,additive_inverse(_18),_9), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -product(d,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -product(d,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,d,additive_identity), -product(d,d,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(_3,d,additive_identity), -product(d,d,d), -product(c,d,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,_9), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(d,d,_9), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(d,c)), -sum(c,_19,additive_identity), -product(_1,_1,_19), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_3,add(d,c)), -sum(c,_19,additive_identity), -product(_1,_1,_19), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(c,_3,add(_1,c)), -sum(_19,_19,additive_identity), -product(d,d,_19), -product(d,_3,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(c,_3,add(_1,c)), -sum(_19,_19,additive_identity), -product(d,d,_19), -product(d,_3,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_3,c)), -sum(_1,_19,additive_identity), -product(_1,_1,_19), -product(_3,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_3,c)), -sum(_1,_19,additive_identity), -product(_1,_1,_19), -product(_3,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_19), -product(additive_identity,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_19), -product(additive_identity,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(c,c)), -sum(c,c,additive_identity), -product(c,c,c), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(c,c)), -sum(c,c,additive_identity), -product(c,c,c), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(c,_1,additive_identity), -product(_19,_19,_1), -product(_3,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(c,_1,additive_identity), -product(_19,_19,_1), -product(_3,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(d,c,additive_identity), -product(_19,_19,c), -product(_3,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(d,c,additive_identity), -product(_19,_19,c), -product(_3,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_19,_19), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_19,_19), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(c,c,_3), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(c,c,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(c,c,_3), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(c,c,_3), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,_3,add(_3,c)), -sum(_1,c,additive_identity), -product(c,c,c), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,_3,add(_3,c)), -sum(_1,c,additive_identity), -product(c,c,c), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(c,c,add(_1,c)), -product(_1,c,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(c,c,add(_1,c)), -product(_1,c,additive_identity), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(d,d,_3), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(d,d,_3), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(d,d,_3), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(d,d,_3), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,c,add(_3,c)), -sum(_1,d,additive_identity), -product(d,d,d), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,c,add(_3,c)), -sum(_1,d,additive_identity), -product(d,d,d), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(d,d,add(_1,c)), -product(c,d,additive_identity), -product(_3,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(d,d,add(_1,c)), -product(c,d,additive_identity), -product(_3,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -product(_16,_16,_16), -product(_16,_3,additive_identity), -product(_16,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_19,additive_identity), -product(_19,_19,_19), -product(_19,_3,additive_identity), -product(_19,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(additive_identity),_9)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(additive_identity,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,additive_identity,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(additive_identity),_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,d,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_21,additive_identity), -product(_1,_1,_21), -product(_3,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,d,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_3,add(_1,c)), -sum(c,_21,additive_identity), -product(_1,_1,_21), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,_21,additive_identity), -product(c,c,_21), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_1,c)), -sum(d,_21,additive_identity), -product(c,c,_21), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_21,_21,additive_identity), -product(_3,_3,_21), -product(_3,_21,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -product(_3,_3,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_1), -product(_3,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_1), -product(_3,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,c), -product(_3,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,c), -product(_3,additive_identity,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_19), -product(_19,additive_identity,_19)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,d,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_19), -product(_19,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_19,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,additive_identity), -product(_19,additive_identity,_19)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_19,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,additive_identity), -product(_19,additive_identity,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_20,c), -product(additive_identity,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,d,_9), -product(c,_20,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_3), -product(additive_identity,additive_identity,_19)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,d), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -product(_19,_19,add(_1,c)), -product(additive_identity,_3,_3), -product(additive_identity,additive_identity,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(additive_identity,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -product(_19,_3,_3), -product(add(_1,c),_19,_19), -product(add(_1,c),_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(additive_identity,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -product(_19,_19,additive_identity), -product(_19,_3,_3), -product(add(_1,c),_19,_19), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_20,c), -product(additive_identity,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,_9,_9), -product(c,_9,_20)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,_9,_9), -product(c,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,add(additive_identity,_1),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(_1,c,_9), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_inverse(_1),c), -product(additive_identity,additive_inverse(_1),d), -product(c,additive_inverse(_1),additive_identity), -product(c,_1,_9), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(c,additive_inverse(_1),_9), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,additive_identity,_9), -product(c,add(additive_identity,c),c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(_18,additive_identity,additive_identity), -product(_18,c,additive_identity), -product(_18,c,_18)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_inverse(c),c), -product(additive_identity,additive_inverse(c),d), -product(c,additive_inverse(c),additive_identity), -product(c,c,additive_identity), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,_9), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(additive_identity,_9,d), -product(c,_9,additive_identity), -product(c,additive_inverse(_9),_9), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_3,add(_1,c)), -product(_15,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_3,add(_1,c)), -product(_15,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -equalish(_3,add(_1,c)), -product(_15,_3,_15), -product(_15,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -equalish(_3,add(_1,c)), -product(_15,_3,_15), -product(_15,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,_9,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_15,_3),additive_identity,additive_identity), -equalish(_15,add(_1,c)), -product(_15,_15,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,_9,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_15,_3),additive_identity,additive_identity), -equalish(_15,add(_1,c)), -product(_15,_15,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(additive_identity,_9,d), -product(_9,_9,additive_identity), -product(_9,additive_identity,_9), -product(_9,additive_identity,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_15,additive_identity,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(additive_identity,_9,d), -product(_9,_9,additive_identity), -product(_9,additive_identity,_9), -product(_9,additive_identity,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_15,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_13,c), -product(additive_identity,_13,d), -product(_13,_13,additive_identity), -product(_13,additive_identity,_9), -product(_13,additive_identity,_13)]]
Ag1 <------  Send Clauses : [[-product(_9,_18,c), -product(additive_identity,_18,d), -product(_18,_18,additive_identity), -product(_18,additive_identity,_9), -product(_18,additive_identity,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_1,_14,add(_1,c)), -sum(c,_3,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_1,_14,add(_1,c)), -sum(c,_3,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,_14,add(_1,c)), -sum(d,_3,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,_14,add(_1,c)), -sum(d,_3,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,_14,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_14,_14), -product(_14,_14,additive_identity), -product(_14,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,_18,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_18,_18), -product(_18,_18,additive_identity), -product(_18,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_18,additive_identity,add(_1,c)), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_18,additive_identity,add(_1,c)), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_18,additive_identity,add(_1,c)), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_18,additive_identity,add(_1,c)), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_3,add(_1,c)), -product(_18,_3,_18), -equalish(add(_1,c),_18), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_3,add(_1,c)), -product(_18,_3,_18), -equalish(add(_1,c),_18), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,c,_9), -product(d,c,d)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,c,_9), -product(d,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,d,_9), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(c,d,_9), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,d,_9), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,d,_9), -product(d,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_19,_3), -product(_19,_19,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,d,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_19,_3), -product(_19,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(_19,_19,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,d,d), -product(d,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(_19,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_13,c), -product(additive_identity,_13,d), -product(_13,_13,additive_identity), -product(_13,d,_9), -product(_13,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_9,_18,c), -product(additive_identity,_18,d), -product(_18,_18,additive_identity), -product(_18,d,_9), -product(_18,_18,_18)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_18,c), -product(additive_identity,_18,d), -product(c,_18,additive_identity), -product(c,d,_9), -product(c,_18,c), -product(additive_identity,_18,_18)]]
Ag1 <------  Send Clauses : [[-product(_9,_18,c), -product(additive_identity,_18,d), -product(c,_18,additive_identity), -product(c,d,_9), -product(c,_18,c), -product(additive_identity,_18,_18)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,additive_identity,_9), -product(d,additive_identity,d)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,additive_identity,_9), -product(d,additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(_19,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(_19,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -equalish(_19,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -equalish(_19,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -equalish(add(_1,c),_3), -product(_19,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -equalish(add(_1,c),_3), -product(_19,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,c,_9), -product(d,c,d), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,c,_9), -product(d,c,d), -product(additive_identity,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,add(_1,_1),c), -product(_9,add(_1,_1),d), -product(c,add(_1,_1),additive_identity), -product(_9,_1,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(c,add(d,d),c), -product(c,add(d,d),d), -product(c,add(d,d),additive_identity), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -equalish(_19,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -equalish(_19,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -equalish(add(_1,c),additive_identity), -product(_19,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -equalish(add(_1,c),additive_identity), -product(_19,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,_3,_17)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,add(_1,_1),c), -product(_9,add(_1,_1),d), -product(d,add(_1,_1),additive_identity), -product(_9,_1,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,add(_1,c)), -sum(_17,_17,_3), -product(_17,add(_1,c),_17)]]
Ag1 <------  Send Clauses : [[-product(_9,add(_20,_20),c), -product(_9,add(_20,_20),d), -product(d,add(_20,_20),additive_identity), -product(_9,_20,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,add(_1,c)), -sum(_17,_17,_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,additive_identity), -sum(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,additive_identity), -sum(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,add(_1,_1),c), -product(_9,add(_1,_1),d), -product(additive_identity,add(_1,_1),additive_identity), -product(additive_identity,_1,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,add(_20,_20),c), -product(_9,add(_20,_20),d), -product(additive_identity,add(_20,_20),additive_identity), -product(additive_identity,_20,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,add(_1,c)), -sum(_17,additive_identity,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,add(_1,c)), -sum(_17,additive_identity,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -sum(additive_identity,_17,_3), -product(_17,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -sum(additive_identity,_17,_3), -product(_17,_17,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -sum(_17,_17,_3), -product(_17,_17,_3)]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -sum(_17,_17,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,_17,_3), -product(_17,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,_17,_3), -product(_17,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(_17,_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(_17,_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(_9,_1,d), -product(c,_1,additive_identity), -product(_9,d,_9), -product(_9,add(d,d),c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(_9,_1,d), -product(c,_1,additive_identity), -product(_9,d,_9), -product(_9,add(d,d),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(_17,additive_identity,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(_17,additive_identity,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,_17,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -sum(additive_identity,_17,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -sum(_3,_3,_3), -product(_17,_3,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(_3,_3,_3), -sum(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(_3,_3,_3), -sum(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(add(_1,c),_3,_3), -sum(additive_identity,_17,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(add(_1,c),_3,_3), -sum(additive_identity,_17,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(_3,add(_1,c),_3), -sum(_17,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(_3,add(_1,c),_3), -sum(_17,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(add(_1,c),additive_identity,_3), -sum(_17,add(_1,c),additive_identity), -product(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -sum(add(_1,c),additive_identity,_3), -sum(_17,add(_1,c),additive_identity), -product(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,c), -product(add(c,c),c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,c), -product(add(c,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(add(c,c),c), -product(add(c,c),add(c,c),c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_3,c),c), -product(add(c,c),add(_3,c),_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -equalish(add(d,c),d), -product(add(d,c),add(d,c),d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),_3,additive_identity), -equalish(add(_3,c),d), -product(add(d,c),add(_3,c),_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -equalish(add(_1,c),_3), -product(add(c,c),add(_1,c),_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -equalish(add(_1,c),_3), -product(add(c,c),add(_1,c),_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,add(_1,c),c), -product(c,add(_1,c),d), -product(c,add(_1,c),additive_identity), -product(_9,_1,_9), -product(_9,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,_1,_9), -product(_9,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,c,_9), -product(_9,additive_inverse(c),_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,additive_identity,_9), -product(_9,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(_1,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,additive_inverse(c),_9), -product(_9,c,_1)]]
Ag1 <------  Send Clauses : [[-product(c,add(additive_identity,c),c), -product(c,add(additive_identity,c),d), -product(c,add(additive_identity,c),additive_identity), -product(c,additive_identity,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(_11,_20,c), -product(c,_20,d), -product(c,_20,additive_identity), -product(_11,_20,_11), -product(_11,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(_20,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,c,_9), -product(_9,additive_inverse(c),_20)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(c,_20,d), -product(c,_20,additive_identity), -product(_9,additive_identity,_9), -product(_9,_20,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),c), -product(_1,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(_20,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_9,additive_inverse(c),_9), -product(_9,c,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),c), -product(_1,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),d), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),d), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(add(_1,c),additive_identity,add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,_3), -product(add(_3,c),_3,add(_1,c)), -sum(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,_3), -product(add(_3,c),_3,add(_1,c)), -sum(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),c), -product(add(c,c),add(_1,c),_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),c), -product(add(c,c),add(_1,c),_1), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),_3), -sum(additive_identity,c,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),_3), -sum(additive_identity,c,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),c), -product(add(c,c),add(_1,c),_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),c), -product(add(c,c),add(_1,c),_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,c), -product(add(_3,c),_3,add(_1,c)), -sum(d,d,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,c), -product(add(_3,c),_3,add(_1,c)), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),_3), -sum(additive_identity,d,add(_1,c)), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),_3), -sum(additive_identity,d,add(_1,c)), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(add(_3,c),_3,add(_1,c)), -sum(c,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_3,c)), -product(add(_3,c),_3,add(_1,c)), -sum(c,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(_3,c)), -product(add(_3,c),c,add(_1,c)), -sum(d,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(c,add(_3,c)), -product(add(_3,c),c,add(_1,c)), -sum(d,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_3,c),add(_1,c),_3), -sum(c,additive_identity,add(_1,c)), -product(_1,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_1,add(c,c)), -sum(add(_1,c),c,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),add(_1,c),c), -sum(c,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_3,c),add(_1,c),_3), -sum(d,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_1), -product(add(_3,c),add(_1,c),_3), -sum(d,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,c), -product(_1,_3,_22), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,c), -product(_1,_3,_22), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_1,additive_identity), -equalish(_1,c), -product(_22,_1,_1), -sum(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_1,additive_identity), -equalish(_1,c), -product(_22,_1,_1), -sum(_22,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),c), -product(_22,add(_1,c),_3), -sum(additive_identity,_3,_22), -product(additive_identity,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),c), -product(_22,add(_1,c),_3), -sum(additive_identity,_3,_22), -product(additive_identity,_1,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,add(_1,c),c), -product(c,add(_1,c),d), -product(d,add(_1,c),additive_identity), -product(c,_1,_9), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(_1,additive_identity,d), -product(d,additive_identity,additive_identity), -product(_1,c,_9), -product(_1,additive_inverse(c),_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(d,_1,additive_identity), -product(c,additive_identity,_9), -product(c,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(_1,additive_identity,d), -product(d,additive_identity,additive_identity), -product(_1,additive_inverse(c),_9), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,d), -product(_1,_3,_22), -sum(_3,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(d,add(additive_identity,c),c), -product(c,add(additive_identity,c),d), -product(d,add(additive_identity,c),additive_identity), -product(c,additive_identity,d), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,d), -product(_1,_3,_22), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(c,d), -product(_22,c,c), -sum(_22,_3,_22)]]
Ag1 <------  Send Clauses : [[-product(_11,_20,c), -product(c,_20,d), -product(d,_20,additive_identity), -product(c,_20,_11), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),c,additive_identity), -equalish(c,d), -product(_22,c,c), -sum(_22,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),d), -product(_22,add(_1,c),_3), -sum(additive_identity,_3,_22), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(_11,additive_identity,c), -product(_20,additive_identity,d), -product(d,additive_identity,additive_identity), -product(_20,c,_11), -product(_20,additive_inverse(c),_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),d), -product(_22,add(_1,c),_3), -sum(additive_identity,_3,_22), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(_11,_20,c), -product(c,_20,d), -product(d,_20,additive_identity), -product(c,additive_identity,_11), -product(c,_20,c)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(_20,additive_identity,d), -product(d,additive_identity,additive_identity), -product(_20,additive_inverse(c),_9), -product(_20,c,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(c,_22), -product(_1,c,_22), -sum(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(c,_22), -product(_1,c,_22), -sum(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,add(_1,c)), -sum(additive_identity,_22,_22), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,add(_1,c)), -sum(additive_identity,_22,_22), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(_1,add(_1,c),_3), -sum(_3,additive_identity,_1), -product(additive_identity,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_1,c),_22), -product(_1,add(_1,c),_3), -sum(_3,additive_identity,_1), -product(additive_identity,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(_22,additive_identity,_22), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(_22,additive_identity,_22), -product(additive_identity,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_22,additive_identity,add(_1,c)), -sum(_22,_22,_22), -product(_22,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_22,additive_identity,add(_1,c)), -sum(_22,_22,_22), -product(_22,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),_3), -product(_22,add(_1,c),c), -sum(additive_identity,_3,_22), -product(additive_identity,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),_3), -product(_22,add(_1,c),c), -sum(additive_identity,_3,_22), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),_3), -product(_22,add(_1,c),d), -sum(additive_identity,_3,_22), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),_3), -product(_22,add(_1,c),d), -sum(additive_identity,_3,_22), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,additive_identity,additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,additive_identity,additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),_1), -product(c,add(c,c),c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),_1), -product(c,add(c,c),c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),_1), -product(c,add(c,c),c), -sum(additive_identity,c,c), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(_3,c,additive_identity), -equalish(add(_3,c),_1), -product(_3,add(_3,c),c), -sum(additive_identity,c,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),_1), -product(d,add(d,c),d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),_1), -product(d,add(d,c),d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),_1), -product(d,add(d,c),d), -sum(additive_identity,d,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(_3,d,additive_identity), -equalish(add(_3,c),_1), -product(_3,add(_3,c),d), -sum(additive_identity,d,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_22), -product(_1,add(_1,c),_3), -sum(c,additive_identity,_1), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,_22,add(d,c)), -sum(_1,d,additive_identity), -equalish(add(_1,c),_22), -product(_1,add(_1,c),d), -sum(c,additive_identity,_1), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_22), -product(_1,add(_1,c),_3), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_22), -product(_1,add(_1,c),_3), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,_22,_22), -product(_22,_3,_22), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,additive_identity), -sum(_3,_22,_22), -product(_22,_3,_22), -product(_3,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,add(_1,c),c), -product(c,add(_1,c),d), -product(additive_identity,add(_1,c),additive_identity), -product(additive_identity,_1,_9), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,_1,_9), -product(additive_identity,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(_1,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,additive_inverse(c),_1)]]
Ag1 <------  Send Clauses : [[-product(_9,add(_14,c),c), -product(c,add(_14,c),d), -product(additive_identity,add(_14,c),additive_identity), -product(additive_identity,_14,_9), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(_1,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(c),_9), -product(additive_identity,c,_1)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(c,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,_20,_9), -product(additive_identity,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(_20,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_inverse(c),_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(c,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,_20,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(_1,additive_identity,add(_1,c)), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(_20,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(c),_9), -product(additive_identity,c,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_13,c),additive_identity), -equalish(additive_identity,_22), -product(_13,additive_identity,add(_13,c)), -sum(_3,_3,_13), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_1,_3), -product(_22,_1,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_1,_3), -product(_22,_1,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_1,_3,_22), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_1,_3,_22), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(_1,additive_identity,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,_22), -product(_1,additive_identity,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,_3), -product(_22,c,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,_3), -product(_22,c,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,d,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,_9,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(c,_3,_22), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,_9,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(c,_3,_22), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_1,_3), -product(_22,_1,additive_identity), -sum(_3,_22,_22), -sum(c,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_1,_3), -product(_22,_1,additive_identity), -sum(_3,_22,_22), -sum(c,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,_3), -product(_22,c,additive_identity), -sum(_3,_22,_22), -sum(d,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,_3), -product(_22,c,additive_identity), -sum(_3,_22,_22), -sum(d,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(_22,_22,_22), -sum(_22,_22,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(_22,_22,_22), -sum(_22,_22,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(_3,_22,_22), -sum(add(_1,c),_22,additive_identity), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(_3,_22,_22), -sum(add(_1,c),_22,additive_identity), -product(_3,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(c,add(_1,c),add(_1,c)), -product(_3,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(c,add(_1,c),add(_1,c)), -product(_3,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(d,add(_1,c),add(_1,c)), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,_3), -product(_22,_22,additive_identity), -sum(_3,_3,_22), -sum(d,add(_1,c),add(_1,c)), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(_22,_3,_22), -sum(_22,add(_1,c),additive_identity), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(_22,_3,_22), -sum(_22,add(_1,c),additive_identity), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(add(_1,c),add(_1,c),_22), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(add(_1,c),add(_1,c),_22), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(add(_1,c),additive_identity,_22), -sum(_22,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_22), -sum(add(_1,c),additive_identity,_22), -sum(_22,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_22)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,_9,c)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,_9,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_17,_13), -sum(c,_13,add(_1,c)), -sum(c,_13,additive_identity), -equalish(_13,_13), -product(_17,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,_9,d)]]
Ag0 <------  Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_17,_13), -sum(c,_13,add(_1,c)), -sum(c,_13,additive_identity), -equalish(_13,_13), -product(_17,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,c,c), -product(_13,c,d), -equalish(_1,_13), -sum(c,_17,add(c,c)), -sum(d,_13,additive_identity), -equalish(_13,_17), -product(_1,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_13,c,c), -product(_13,c,d), -equalish(_1,_13), -sum(c,_17,add(c,c)), -sum(d,_13,additive_identity), -equalish(_13,_17), -product(_1,_13,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_13,c), -product(_13,c,d), -equalish(_1,_13), -sum(c,_17,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(_13,_17), -product(_1,_13,_1)]]
Ag0 <------  Send Clauses : [[-product(_13,_13,c), -product(_13,c,d), -equalish(_1,_13), -sum(c,_17,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(_13,_17), -product(_1,_13,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_17,_13), -sum(c,_13,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_13,_13), -product(_17,_13,additive_identity), -product(additive_identity,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_3,_3), -product(_17,_3,additive_identity), -product(additive_identity,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(c,c)), -sum(c,add(c,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(c,c)), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_13,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -equalish(add(_13,c),_17), -product(_13,add(_13,c),_3), -product(_13,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_11,c), -product(_11,_11,d), -product(additive_identity,_11,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_11)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_1,_3), -product(_17,_1,add(_1,c)), -product(_17,_3,_17)]]
Ag1 <------  Send Clauses : [[-product(_11,_11,c), -product(_11,_11,d), -product(additive_identity,_11,additive_identity), -product(additive_identity,_11,_11), -product(additive_identity,_11,_11)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_3,c)), -sum(add(_3,c),add(_3,c),additive_identity), -equalish(_3,_3), -product(_17,_3,add(_3,c)), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(_20,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_18,c), -product(c,_18,d), -product(additive_identity,_18,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_18,c), -product(c,_9,_18)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -product(_17,_3,c), -product(c,_1,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,c,c), -product(c,_9,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -product(_17,_3,c), -product(c,_1,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(_9,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(_9,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_11,c), -product(_11,_11,d), -product(additive_identity,_11,additive_identity), -product(additive_identity,_11,_9), -product(additive_identity,_11,_11)]]
Ag1 <------  Send Clauses : [[-product(_9,_9,c), -product(_9,_9,d), -product(additive_identity,_9,additive_identity), -product(additive_identity,_9,_9), -product(additive_identity,_9,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_18,c), -product(c,_18,d), -product(additive_identity,_18,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,_18,c), -product(c,_18,_18)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(_20,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,_20,_9), -product(additive_identity,_20,_20)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(c,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,c,_9), -product(additive_identity,_20,c), -product(c,_20,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,c,c), -product(_13,c,d), -equalish(_1,_13), -sum(d,_17,add(c,c)), -sum(c,_13,additive_identity), -equalish(_13,_17), -product(_1,_13,_13)]]
Ag0 <------  Send Clauses : [[-product(_13,c,c), -product(_13,c,d), -equalish(_1,_13), -sum(d,_17,add(c,c)), -sum(c,_13,additive_identity), -equalish(_13,_17), -product(_1,_13,_13)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_16,c), -product(c,_16,d), -product(additive_identity,_16,additive_identity), -product(additive_identity,_16,_9), -product(additive_identity,_9,c), -product(c,_16,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_17,_13), -sum(d,_13,add(_1,c)), -sum(d,_13,additive_identity), -equalish(_13,_13), -product(_17,_13,_13)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(c,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,_20,_9), -product(additive_identity,_9,c), -product(c,_20,_20)]]
Ag0 <------  Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_17,_13), -sum(d,_13,add(_1,c)), -sum(d,_13,additive_identity), -equalish(_13,_13), -product(_17,_13,_13)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_16,c), -product(c,_16,d), -product(additive_identity,_16,additive_identity), -product(additive_identity,_16,_9), -product(additive_identity,c,c), -product(c,c,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_13,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(c,_17), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(_9,_20,c), -product(c,_20,d), -product(additive_identity,_20,additive_identity), -product(additive_identity,_20,_9), -product(additive_identity,c,c), -product(c,c,_20)]]
Ag0 <------  Send Clauses : [[-product(c,_13,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(c,_17), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_17,_13), -sum(d,_13,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_13,_13), -product(_17,_13,additive_identity), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_3,_3), -product(_17,_3,additive_identity), -product(additive_identity,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(c,d,_9), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(c,additive_identity,_9), -product(c,additive_inverse(additive_identity),c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(c,d,_9), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_11,_1,c), -product(c,_1,d), -product(_11,_1,additive_identity), -product(c,additive_identity,_11), -product(c,additive_inverse(additive_identity),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_17,additive_identity,add(_1,c)), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(c,_3), -product(_17,c,add(_1,c)), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_17,c), -sum(d,c,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(c,c), -product(_17,c,add(_1,c)), -product(_17,c,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_17), -product(_1,add(_1,c),_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -product(_17,_3,d), -product(d,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,_3), -product(_17,_17,additive_identity), -product(_17,_3,d), -product(d,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(c,_1,d), -product(_7,_1,additive_identity), -product(_7,additive_identity,_7), -product(_7,_7,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(_9,additive_identity,_9), -product(_9,_9,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(_9,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,c,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_13,add(_1,c)), -sum(c,_3,additive_identity), -equalish(_1,_13), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_13,add(_1,c)), -sum(c,_3,additive_identity), -equalish(_1,_13), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_13,add(_1,c)), -sum(d,_3,additive_identity), -equalish(c,_13), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_13,add(_1,c)), -sum(d,_3,additive_identity), -equalish(c,_13), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_13,add(_1,c)), -product(_13,_13,_3), -product(_3,_13,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -equalish(_1,add(_1,c)), -product(_17,_1,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -equalish(_1,add(_1,c)), -product(_17,_1,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -equalish(c,add(_1,c)), -product(_17,c,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -equalish(c,add(_1,c)), -product(_17,c,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,_3), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,_3), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -product(additive_identity,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -product(additive_identity,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -product(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_3), -product(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_17,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_17), -product(additive_identity,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_17,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,_17), -product(additive_identity,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -product(additive_identity,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,additive_identity,additive_identity), -product(additive_identity,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -product(_3,add(_1,c),_3), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -product(_3,add(_1,c),_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_20), -product(_1,add(_1,c),_3), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_20), -product(_1,add(_1,c),_3), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_20), -product(c,add(_1,c),_3), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_20), -product(c,add(_1,c),_3), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_20,additive_identity), -equalish(_3,add(_1,c)), -product(_20,_3,_20), -product(_20,_20,_3), -product(_3,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_inverse(additive_identity),_9), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,_1,_3), -product(_17,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(_11,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_inverse(additive_identity),_11), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,_1,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,c,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,c,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,_17,_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,_17,_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,_3,_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,_3,_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,add(_1,c)), -product(_17,_17,additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),_17), -product(_17,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,d,_9), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_17), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),_17), -product(_17,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,c,_9), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,c,_9), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,_1), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,_1), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),_1), -product(c,add(_1,c),_1), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(c,_3,additive_identity), -equalish(add(_3,c),_3), -product(c,add(_3,c),_3), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,c), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,c), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(add(c,c),c), -product(d,add(c,c),c), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -equalish(add(_3,c),_3), -product(d,add(_3,c),c), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_13,c), -product(c,c,d), -equalish(_1,c), -sum(_13,_16,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(c,_16), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_13,c), -product(c,c,d), -equalish(_1,c), -sum(_13,_16,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(c,_16), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_16,_13), -sum(_1,_13,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -equalish(_13,_13), -product(_16,_13,_16), -product(_16,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_19,additive_identity), -equalish(_3,_3), -product(_19,_3,_19), -product(_19,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c)), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(_19,additive_identity,add(_1,c)), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(c,_3), -product(_19,c,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(c,_3), -product(_19,c,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(additive_identity,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(additive_identity,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(_1,_3,_19), -product(_1,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(_1,_3,_19), -product(_1,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -equalish(c,_1), -product(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -equalish(c,_1), -product(c,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,add(_11,additive_identity),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(d,additive_inverse(_11),c), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),_1), -product(c,add(_1,c),_1), -product(_1,d,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,add(_11,additive_identity),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,additive_identity,_9), -product(d,_11,c), -product(d,_11,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(c,_3,additive_identity), -equalish(add(_3,c),_3), -product(c,add(_3,c),_3), -product(_3,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,additive_inverse(_11),_9), -product(d,_11,c), -product(d,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(d,additive_identity,c), -product(d,_11,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(d,additive_inverse(_11),c), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,d,c)]]
Ag1 <------  Send Clauses : [[-product(_11,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,additive_identity,_11), -product(d,_11,c), -product(d,_11,c)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(add(c,c),c), -product(d,add(c,c),c), -product(c,d,d)]]
Ag1 <------  Send Clauses : [[-product(_7,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,additive_inverse(_11),_7), -product(d,_11,c), -product(d,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -equalish(add(_3,c),_3), -product(d,add(_3,c),c), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_13,c), -product(d,c,d), -equalish(_1,d), -sum(c,_16,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(d,_16), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_13,c), -product(d,c,d), -equalish(_1,d), -sum(c,_16,add(_13,c)), -sum(_1,_1,additive_identity), -equalish(d,_16), -product(_1,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_13,_1,c), -product(_13,c,d), -equalish(_16,_13), -sum(c,_13,add(_1,c)), -sum(add(_1,c),_16,additive_identity), -equalish(_13,_13), -product(_16,_13,_16), -product(_16,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_19,additive_identity), -equalish(_3,_3), -product(_19,_3,_19), -product(_19,d,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,d,_9), -product(c,c,c), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(_3,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,d,_9), -product(c,c,c), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(d,_3), -product(_19,d,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(d,_3), -product(_19,d,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(additive_identity,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_19), -product(_1,add(_1,c),_3), -product(additive_identity,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(c,_3,_19), -product(c,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,_3), -product(_19,_19,additive_identity), -product(c,_3,_19), -product(c,d,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,_9,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,_9,c), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,c,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,additive_identity,_9), -product(c,c,c), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(c,c), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(_3,add(c,c),additive_identity), -equalish(c,c), -product(c,c,add(c,c)), -product(_3,add(c,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(_3,add(c,c),additive_identity), -equalish(c,c), -product(c,c,add(c,c)), -product(_3,add(c,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,c,_9), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_1,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_1), -product(_3,_19,_19)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,c,_9), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_1,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_1), -product(_3,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,c), -product(_3,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,c,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,c), -product(_3,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -product(_3,_19,_19), -product(_3,_19,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -product(_3,_19,_19), -product(_3,_19,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,_1,c), -product(c,_1,d), -product(_13,_1,additive_identity), -product(_13,_13,_13), -product(_13,c,c), -product(_13,additive_identity,_13)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(_9,_9,_9), -product(_9,c,c), -product(_9,additive_identity,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,c,_9), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,c,_9), -product(c,additive_identity,c), -product(c,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(c,additive_identity,add(_1,c)), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(c,additive_identity,add(_1,c)), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(c,additive_identity,add(_1,c)), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(c,additive_identity,add(_1,c)), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),c), -product(c,add(_1,c),_3), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),c), -product(c,add(_1,c),_3), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,_3), -product(c,c,additive_identity), -product(_1,c,c), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,_3), -product(c,c,additive_identity), -product(_1,c,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(d,additive_identity,add(_1,c)), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(d,additive_identity,add(_1,c)), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(d,additive_identity,add(_1,c)), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,_3), -product(d,additive_identity,add(_1,c)), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),d), -product(d,add(_1,c),_3), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),d), -product(d,add(_1,c),_3), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(d,_3), -product(d,d,additive_identity), -product(c,d,d), -product(_3,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(d,_3), -product(d,d,additive_identity), -product(c,d,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_16,_16,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_16,additive_identity,_16), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_16,_16,additive_identity), -equalish(additive_identity,add(_1,c)), -product(_16,additive_identity,_16), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_16,additive_identity), -equalish(_16,add(_1,c)), -product(_16,_16,_16), -product(_16,_3,_3), -product(_16,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,_19), -product(_19,_3,_3), -product(_19,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_21,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_21), -product(_1,add(_1,c),_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_21,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_21), -product(_1,add(_1,c),_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_21), -product(c,add(_1,c),_3), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_21), -product(c,add(_1,c),_3), -product(_3,_3,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_9), -product(c,_9,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_21,additive_identity), -equalish(_3,add(_1,c)), -product(_21,_3,_21), -product(_3,_3,_21), -product(_3,_21,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_9), -product(c,_9,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -product(_3,_3,_19), -product(_3,_19,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_1), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_1), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,c), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,c), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_19), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_19), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_3), -product(add(_1,c),_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_3), -product(add(_1,c),_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_3), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,add(_1,c)), -product(_19,_19,additive_identity), -product(_3,_3,_3), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -product(add(_1,c),_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,add(_1,c)), -product(_19,_3,_19), -product(add(_1,c),_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_9), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_1,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,_1), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(_15,_3,additive_identity), -product(_15,_3,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(_15,_3,additive_identity), -product(_15,_3,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_15,add(_1,c),_15), -product(_15,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_15,add(_1,c),_15), -product(_15,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_15,_3),_3,additive_identity), -product(_15,add(_1,c),_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_15,_3),_3,additive_identity), -product(_15,add(_1,c),_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_15,_3,_15)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_15,_3,_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_18,_3,_18), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_18,_3,_18), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_18,_3,_18), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_18,_3,_18), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_18,add(_1,c),_18), -equalish(_18,_18), -product(_18,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_18,add(_1,c),_18), -equalish(_18,_18), -product(_18,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(add(c,c),c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(add(c,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_19,add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_19,add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(_19,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(_19,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -equalish(add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -equalish(_19,_3), -product(_19,_19,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -equalish(_19,_3), -product(_19,_19,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(d,c,d), -product(c,c,additive_identity), -product(add(c,d),c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(d,c,d), -product(c,c,additive_identity), -product(add(c,d),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(add(c,c),c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(c,c,additive_identity), -product(add(c,c),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(additive_inverse(c),c,additive_identity), -product(additive_identity,c,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -equalish(_19,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(additive_inverse(c),c,additive_identity), -product(additive_identity,c,additive_inverse(c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -equalish(_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -equalish(_19,additive_identity), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -equalish(_19,additive_identity), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(d,c,additive_identity), -product(c,c,d)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(d,c,additive_identity), -product(c,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_17,add(_1,c)), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_17,add(_1,c)), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_17,add(_1,c)), -product(_17,_3,_17), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_17,add(_1,c)), -product(_17,_3,_17), -product(_17,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(add(c,c),c,d), -product(d,c,additive_identity), -product(c,c,add(c,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(d,c,additive_identity), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(d,c,additive_identity), -product(additive_inverse(c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(add(c,c),c,d), -product(d,c,additive_identity), -product(c,c,add(c,c))]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(d,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(d,c,additive_identity), -product(additive_inverse(c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(additive_identity,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_17,_16,_17), -sum(_17,_17,_16)]]
Ag0 <------  Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(additive_identity,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_17,_16,_17), -sum(_17,_17,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(additive_identity,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_17,_16,_17), -sum(add(_1,c),_17,_16), -product(_17,_16,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),_17,_3), -product(_17,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -sum(_17,add(_1,c),_3), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -sum(_17,add(_1,c),_3), -product(_17,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_17,add(_1,c)), -product(_17,_3,_17), -product(_17,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_inverse(c),c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_17,add(_1,c)), -product(_17,_3,_17), -product(_17,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(additive_identity,c,additive_identity), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_17,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_17), -sum(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_17,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_17), -sum(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(_3,add(_1,c),_17), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(_3,add(_1,c),_17), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),add(_1,c),_3), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,_17,_3), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,_17,_3), -product(_17,_17,add(_1,c)), -product(_17,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(_1,c,c), -product(add(c,_1),c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_inverse(c),c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(_1,c,c), -product(add(c,_1),c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_inverse(c),c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,_17,_3), -product(_17,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,_17,_3), -product(_17,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -sum(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -sum(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -sum(add(_1,c),_17,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -sum(_17,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,additive_identity,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,additive_identity,_3), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,_17,_3), -product(_17,_17,_17), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(additive_identity,_17,_3), -product(_17,_17,_17), -product(_17,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(additive_identity,c,c), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -product(c,c,additive_identity), -product(c,c,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(add(_1,c),add(_1,c),_3), -sum(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(add(_1,c),add(_1,c),_3), -sum(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,add(_1,c),_3), -sum(_3,_17,additive_identity), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,add(_1,c),_3), -sum(_3,_17,additive_identity), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(add(_1,c),_17,_3), -sum(_17,_3,additive_identity), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(add(_1,c),_17,_3), -sum(_17,_3,additive_identity), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,_17,_3), -sum(_3,_3,additive_identity), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,_17,_3), -sum(_3,_3,additive_identity), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,_3,_3), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_3,additive_identity), -product(_17,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -sum(_17,_3,_3), -sum(add(_1,c),additive_identity,additive_identity), -product(_17,_3,additive_identity), -product(_17,_17,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(c,d,d), -product(d,d,additive_identity), -product(add(c,d),d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(c,d,d), -product(d,d,additive_identity), -product(add(c,d),d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),c,add(c,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),c,add(c,c)), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -product(add(d,c),d,add(d,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -product(add(d,c),d,add(d,c)), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),_3,add(c,c)), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),c,additive_identity), -product(add(c,c),_3,add(c,c)), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(add(d,d),d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(additive_identity,c,additive_identity), -product(add(c,c),c,add(c,c)), -product(c,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(add(d,d),d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(additive_identity,c,additive_identity), -product(add(c,c),c,add(c,c)), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(additive_identity,d,additive_identity), -product(add(d,c),d,add(d,c)), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(additive_identity,d,additive_identity), -product(add(d,c),d,add(d,c)), -product(c,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,_3,additive_identity), -product(add(_3,c),_3,add(_3,c)), -sum(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(add(c,c),c,add(c,c)), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -product(add(c,c),c,add(c,c)), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -product(add(c,c),c,add(c,c)), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(add(additive_identity,d),d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_inverse(additive_identity),d,additive_identity), -product(additive_identity,d,additive_inverse(additive_identity))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -product(add(c,c),c,add(c,c)), -sum(c,d,_3)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(add(additive_identity,d),d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,c,additive_identity), -product(add(c,c),c,add(c,c)), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,c,additive_identity), -product(add(_3,c),c,add(_3,c)), -sum(d,d,_1)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_inverse(additive_identity),d,additive_identity), -product(additive_identity,d,additive_inverse(additive_identity))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,c,additive_identity), -product(add(_3,c),c,add(_3,c)), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_3,c),_1,add(_3,c)), -sum(c,_3,add(_1,c)), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_3,c),_1,add(_3,c)), -sum(c,_3,add(_1,c)), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),c,additive_identity), -product(add(_3,c),_1,add(_3,c)), -sum(d,_3,add(_1,c)), -product(_1,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),c,additive_identity), -product(add(_3,c),_1,add(_3,c)), -sum(d,_3,add(_1,c)), -product(_1,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,c,_1), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,c,_1), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(c,c,c), -sum(c,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(c,c,c), -sum(c,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,c,_22), -sum(_3,_3,_22), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,c,_22), -sum(_3,_3,_22), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,d,_1), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,d,_1), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,d,_22), -sum(_3,_3,_22), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,d,_22), -sum(_3,_3,_22), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(c,c,c), -sum(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(c,c,c), -sum(_3,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_22,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_22), -sum(_3,_22,_22), -product(_3,_22,_22)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_22,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_22), -sum(_3,_22,_22), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,_22,_1), -sum(_3,_3,_1), -product(_3,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -product(_1,_22,_1), -sum(_3,_3,_1), -product(_3,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_22,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_22), -sum(_22,_3,_22), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_22,_22,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_22,_22), -sum(_22,_3,_22), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,_22,_22), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,_22,_22), -product(_22,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(additive_identity,c,additive_identity), -product(c,_1,c), -sum(c,c,c), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(additive_identity,c,additive_identity), -product(_3,_1,_3), -sum(c,c,_3), -product(c,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(d),d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_inverse(d),d,d), -product(additive_identity,d,additive_identity), -product(d,d,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(additive_identity,d,additive_identity), -product(d,_1,d), -sum(d,d,d), -product(d,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_inverse(d),d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(additive_identity,d,additive_identity), -product(_3,_1,_3), -sum(d,d,_3), -product(d,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_inverse(d),d,d), -product(additive_identity,d,additive_identity), -product(d,d,additive_inverse(d))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(additive_identity,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,_22,_22), -product(_22,_3,_3), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,_22,_22), -product(_22,_3,_3), -product(additive_identity,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_inverse(additive_identity),d,d), -product(additive_inverse(additive_identity),d,additive_identity), -product(additive_identity,d,additive_inverse(additive_identity))]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_inverse(additive_identity),d,d), -product(additive_inverse(additive_identity),d,additive_identity), -product(additive_identity,d,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -product(c,_1,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -product(c,_1,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -product(c,_1,c), -sum(c,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(_3,c,additive_identity), -product(_3,_1,_3), -sum(c,c,_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -product(d,_1,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -product(d,_1,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -product(d,_1,d), -sum(d,d,d), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(_3,d,additive_identity), -product(_3,_1,_3), -sum(d,d,_3), -product(d,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(d,d,additive_identity), -product(additive_identity,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_22,add(_3,c)), -sum(_1,c,additive_identity), -product(_1,_22,_1), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_22,add(_3,c)), -sum(_1,c,additive_identity), -product(_1,_22,_1), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,d,additive_identity), -product(_1,_22,_1), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,d,additive_identity), -product(_1,_22,_1), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(_1,d,d), -product(add(d,_1),d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d), -product(d,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_inverse(d),d,d), -product(additive_identity,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(c,d,additive_identity), -product(c,d,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_inverse(d),d,d), -product(c,d,additive_identity), -product(d,d,additive_inverse(d)), -product(additive_identity,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,additive_identity,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(_1,d,d), -product(add(d,_1),d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,additive_identity,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,_22,_22), -product(_22,_3,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d), -product(d,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(additive_identity,_22,_22), -product(_22,_3,_22), -product(additive_identity,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_inverse(d),d,d), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -product(c,d,additive_identity), -product(c,d,d)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_inverse(d),d,d), -product(c,d,additive_identity), -product(d,d,additive_inverse(d)), -product(additive_identity,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,_3,additive_identity), -product(_1,_22,_1), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,_3,additive_identity), -product(_1,_22,_1), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,_1,_22), -sum(_22,_3,_22), -sum(_22,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,_1,_22), -sum(_22,_3,_22), -sum(_22,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(additive_identity,_3,_22), -sum(_22,c,add(_1,c)), -product(additive_identity,_1,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(additive_identity,_3,_22), -sum(_22,c,add(_1,c)), -product(additive_identity,_1,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,_3,additive_identity), -product(_1,_22,_1), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,_3,additive_identity), -product(_1,_22,_1), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,c,_22), -sum(_22,_3,_22), -sum(_22,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,c,_22), -sum(_22,_3,_22), -sum(_22,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(additive_identity,_3,_22), -sum(_22,d,add(_1,c)), -product(additive_identity,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(additive_identity,_3,_22), -sum(_22,d,add(_1,c)), -product(additive_identity,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,_1,_22), -sum(_3,_22,_22), -sum(c,_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,_1,_22), -sum(_3,_22,_22), -sum(c,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,c,_22), -sum(_3,_22,_22), -sum(d,_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,_3,additive_identity), -product(_22,c,_22), -sum(_3,_22,_22), -sum(d,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_22,_22,_22), -sum(_22,_22,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_22,_22,_22), -sum(_22,_22,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(additive_identity,_22,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(additive_identity,_22,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,additive_identity,_22), -sum(c,_22,add(_1,c)), -product(additive_identity,_1,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,additive_identity,_22), -sum(c,_22,add(_1,c)), -product(additive_identity,_1,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,additive_identity,_22), -sum(d,_22,add(_1,c)), -product(additive_identity,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_3,additive_identity,_22), -sum(d,_22,add(_1,c)), -product(additive_identity,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_22,additive_identity,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_22,_3,_22), -sum(_22,additive_identity,_22), -sum(_22,_22,add(_1,c)), -product(additive_identity,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(_22,_22,_22), -sum(_3,_3,additive_identity), -product(_22,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(_22,_22,_22), -sum(_3,_3,additive_identity), -product(_22,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(_22,_3,_22), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,_3,additive_identity), -product(_22,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_22,add(_1,c),_22), -sum(_22,_3,_22), -sum(add(_1,c),additive_identity,additive_identity), -product(_3,_3,additive_identity), -product(_22,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d), -product(additive_identity,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d), -product(c,d,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(additive_identity,d,d), -product(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(c,d,d), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(d,d,d), -product(c,d,additive_identity), -product(c,d,d), -product(additive_identity,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_16,c), -product(_16,c,d), -equalish(_1,_16), -sum(c,_16,add(_16,c)), -sum(_1,_16,additive_identity), -product(_1,_16,_1)]]
Ag0 <------  Send Clauses : [[-product(_16,_16,c), -product(_16,c,d), -equalish(_1,_16), -sum(c,_16,add(_16,c)), -sum(_1,_16,additive_identity), -product(_1,_16,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(c,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_17,_16,_17), -product(_17,_1,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -product(_17,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -product(_1,_17,_1), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_16,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -product(_16,_17,_16), -product(_16,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,_1,_17), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_3,c)), -sum(_17,_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_17,_1), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -product(_1,_17,_1), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,additive_identity), -product(additive_identity,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,additive_identity), -product(additive_identity,_1,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_inverse(additive_identity),additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(additive_identity))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_16,c)), -sum(_1,c,additive_identity), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_inverse(additive_identity),additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(additive_identity))]]
Ag0 <------  Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_16,c)), -sum(_1,c,additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(d,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_17,_16,_17), -product(_17,c,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_3,_17), -product(_17,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_17,_1), -product(_1,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_17,_1), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,c,_17), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_17,c), -sum(d,c,add(_1,c)), -sum(_17,c,additive_identity), -product(_17,c,_17), -product(_17,c,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,c,additive_identity), -product(_1,_17,_1), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,c,additive_identity), -product(_1,_17,_1), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,additive_identity), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -product(_17,_3,additive_identity), -product(additive_identity,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(d,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(add(additive_identity,d),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(d,additive_identity,d), -product(additive_inverse(d),additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(d))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(d,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(add(additive_identity,d),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(d,additive_identity,d), -product(additive_inverse(d),additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(d))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(d,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(d,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_1,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_1,_17), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_1,add(_1,c)), -sum(c,_3,additive_identity), -product(_17,_1,_17), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,c,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,c,_17), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,c,add(_1,c)), -sum(d,_3,additive_identity), -product(_17,c,_17), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -product(_17,_17,additive_identity), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_17,_3,_17), -product(_17,_17,additive_identity), -product(additive_identity,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,add(_1,c),_17), -product(add(_1,c),add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_16,_3,additive_identity), -product(_16,add(_1,c),_16), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -product(_17,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,_17,_17), -product(_17,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -product(add(_1,c),_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -product(add(_1,c),_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_20,_1), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_20,_1), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_20,c), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_20,c), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_20,add(_1,c),_20), -product(_20,_20,_3), -product(_3,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,_1,_3), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,_1,_3), -product(_17,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,c,_3), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,c,_3), -product(_17,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,add(_1,c),_3), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,add(_1,c),_3), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,additive_identity,_3), -product(_17,additive_identity,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,additive_identity,_3), -product(_17,additive_identity,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_17,add(_1,c),_17), -product(additive_identity,_17,_3), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -product(_17,_3,_3), -product(_17,_17,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),_17), -product(_17,_3,_3), -product(_17,_17,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_inverse(c),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_inverse(c),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,_1,additive_identity), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,_1,additive_identity), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(c,_1,additive_identity), -product(c,_1,c), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(c,_3,additive_identity), -product(c,_3,c), -product(_3,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(d,additive_identity),additive_identity,d), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,add(d,additive_identity))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(d,additive_identity,additive_identity), -product(additive_inverse(d),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(d,additive_identity),additive_identity,d), -product(d,additive_identity,additive_identity), -product(additive_identity,additive_identity,add(d,additive_identity))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(d,additive_identity,additive_identity), -product(additive_inverse(d),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,c,d), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -product(d,_3,d), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(_16,c,add(_16,c)), -sum(_1,c,additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(_16,c,add(_16,c)), -sum(_1,c,additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_19,_16), -sum(_1,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_19,_16,_19), -product(_19,c,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,_3,_19), -product(_19,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_19,_1), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -product(_1,_19,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_19,_3,_19), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(_19,_3,_19), -product(_3,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,c,_19), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,c,_19), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,c,additive_identity), -product(_1,_19,_1), -product(_3,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,c,additive_identity), -product(_1,_19,_1), -product(_3,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(additive_identity,_3,_19), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(additive_identity,_3,_19), -product(additive_identity,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,additive_identity), -product(add(c,_1),additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_inverse(c),additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(c),additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(_1,additive_identity,additive_identity), -product(add(c,_1),additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_inverse(c),additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,d,additive_identity), -product(c,_1,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,d,additive_identity), -product(c,_1,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(c),additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(c,_1,additive_identity), -product(c,_1,c), -product(_1,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(c,_3,additive_identity), -product(c,_3,c), -product(_3,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -product(d,c,d), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -product(d,_3,d), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_16,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_16,c)), -sum(_1,d,additive_identity), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_16,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_16,c)), -sum(_1,d,additive_identity), -product(_1,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_19,_16), -sum(c,_16,add(_1,c)), -sum(_16,_16,additive_identity), -product(_19,_16,_19), -product(_19,d,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,_3,_19), -product(_19,d,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -product(_1,_19,_1), -product(_3,_3,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(d,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -product(_1,_19,_1), -product(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,d,add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,d,_19), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(d,_1,c), -product(d,c,d), -equalish(_19,d), -sum(c,d,add(_1,c)), -sum(_19,d,additive_identity), -product(_19,d,_19), -product(_19,d,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,d,additive_identity), -product(_1,_19,_1), -product(_3,d,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,d,additive_identity), -product(_1,_19,_1), -product(_3,d,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(_1,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(additive_identity,_3,_19), -product(additive_identity,d,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c), -product(_1,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(additive_identity,_3,_19), -product(additive_identity,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,_3,additive_identity), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,_3,additive_identity), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,_3,additive_identity), -product(c,c,c), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,_3,additive_identity), -product(c,c,c), -product(_3,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_identity,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_19,_19,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_19,_1), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,c,_1), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_19,_19,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_19,c), -product(_3,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_19,_19,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_19,c), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(additive_identity,_19,_19), -product(additive_identity,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(_19,_3,_19), -product(additive_identity,_19,_19), -product(additive_identity,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(c,_3,c), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(_20,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(c,_3,c), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_3,c), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_3,c), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -product(c,c,c), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -product(c,c,c), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(c,_3,c), -product(_1,c,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(c,_3,c), -product(_1,c,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(d,_3,d), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,_3,additive_identity), -product(d,_3,d), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(d,_3,d), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,_3,additive_identity), -product(d,_3,d), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,c,additive_identity), -product(d,d,d), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,c,additive_identity), -product(d,d,d), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(d,_3,d), -product(c,d,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -product(d,_3,d), -product(c,d,additive_identity), -product(_3,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -product(add(_1,c),_3,_19), -product(_19,_19,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -product(add(_1,c),_3,_19), -product(_19,_19,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_21,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_21,_1), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_21,add(_1,c)), -sum(c,_3,additive_identity), -product(_1,_21,_1), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_21,c), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -product(c,_21,c), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_21,add(_1,c),_21), -product(_3,_3,_21), -product(_3,_21,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_19), -product(_3,_19,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,_1), -product(_3,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,_1), -product(_3,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,c), -product(_3,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,c), -product(_3,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,add(_1,c)), -product(_19,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,add(_1,c)), -product(_19,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,additive_identity), -product(_19,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,additive_identity), -product(_19,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,_3), -product(additive_identity,additive_identity,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -product(_19,add(_1,c),_19), -product(additive_identity,_3,_3), -product(additive_identity,additive_identity,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_3), -product(add(_1,c),_19,_19), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_3), -product(add(_1,c),_19,_19), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_9),_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(_9,_1,additive_inverse(_9))]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(_9),_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(_9,_1,additive_inverse(_9))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(_9),_1,_9)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(_18),_1,_18)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,_1,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_15,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,_1,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_15,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -equalish(_3,_15), -product(_15,add(_1,c),_3), -product(_15,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_15,additive_identity), -equalish(_3,_15), -product(_15,add(_1,c),_3), -product(_15,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_9,c), -product(c,_9,d), -product(additive_inverse(additive_identity),_9,additive_identity), -product(additive_identity,_9,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_15,_3),additive_identity,additive_identity), -equalish(_15,additive_identity), -product(_15,add(_1,c),_15)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_18,c), -product(c,_18,d), -product(additive_inverse(additive_identity),_18,additive_identity), -product(additive_identity,_18,additive_inverse(additive_identity))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_15,_3),additive_identity,additive_identity), -equalish(_15,additive_identity), -product(_15,add(_1,c),_15)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_15,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(additive_identity,_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_15,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_1,_3,add(_1,c)), -sum(c,_14,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_1,_3,add(_1,c)), -sum(c,_14,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,_3,add(_1,c)), -sum(d,_14,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(c,_3,add(_1,c)), -sum(d,_14,additive_identity), -equalish(_3,_14), -product(_14,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_14,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_14,additive_identity), -equalish(_14,_14), -product(_14,add(_1,c),_14), -product(_14,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_18,_18), -product(_18,add(_1,c),_18), -product(_18,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(_18,_1,additive_identity), -product(additive_identity,_1,_18)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(_18,_1,additive_identity), -product(additive_identity,_1,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_18,_3,additive_identity), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_1,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_18,_3,additive_identity), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_18,_3,additive_identity), -equalish(_3,_18)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_18,_3,additive_identity), -equalish(_3,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_3,_18), -product(_18,add(_1,c),_3), -equalish(add(_1,c),_18), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_18,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_18,additive_identity), -equalish(_3,_18), -product(_18,add(_1,c),_3), -equalish(add(_1,c),_18), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(add(c,_9),_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_9,c), -product(c,_9,d), -product(_1,_9,additive_identity), -product(c,_9,additive_identity), -product(c,_9,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_9),_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,_1,additive_inverse(_9)), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(_9,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(_9),_1,_9), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_18), -product(add(c,_18),_1,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(_1,additive_identity,additive_identity), -product(c,additive_identity,additive_identity), -product(c,additive_identity,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(_13),_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_13,_1,additive_inverse(_13)), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_18), -product(_18,_1,c)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(d),_1,d), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_19,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_19,_19,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_19,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_19,_19,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(_19,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(_19,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_19,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_19,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_19,_3), -product(_19,add(_1,c),_19), -product(_19,_19,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -equalish(_19,_3), -product(_19,add(_1,c),_19), -product(_19,_19,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(additive_identity,_19), -product(_19,add(_1,c),additive_identity), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(additive_identity,_19), -product(_19,add(_1,c),additive_identity), -equalish(add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_19,add(_1,c),_3), -equalish(add(_1,c),_3), -product(_19,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_19,add(_1,c),_3), -equalish(add(_1,c),_3), -product(_19,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_19,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_19,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_18), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_18), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_18), -product(additive_identity,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_18), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -equalish(_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -equalish(_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_19,add(_1,c),_3), -equalish(add(_1,c),additive_identity), -product(_19,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_19,add(_1,c),_3), -equalish(add(_1,c),additive_identity), -product(_19,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_18), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_18), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_9,d),_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(_9,_1,add(_9,d))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_9,c), -product(d,_9,d), -product(c,_9,additive_identity), -product(additive_inverse(d),_9,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(_20,d),_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(_20,_1,add(_20,d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(d,_20,d), -product(c,_20,additive_identity), -product(additive_inverse(d),_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),_17,add(_1,c)), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),_17,add(_1,c)), -product(_17,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,add(_1,c),additive_identity), -sum(_17,_17,_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,add(_1,c),additive_identity), -sum(_17,_17,_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -sum(add(_1,c),_3,add(_1,c)), -product(_17,_3,_3), -product(_17,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(d,_1,additive_identity), -product(additive_identity,_1,_9)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(d,_1,d), -product(d,_1,additive_identity), -product(additive_identity,_1,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -equalish(add(_1,c),_3), -product(_17,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,_3,additive_identity), -equalish(add(_1,c),_3), -product(_17,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(additive_identity,_3), -product(_17,_3,additive_identity), -sum(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(additive_identity,_3), -product(_17,_3,additive_identity), -sum(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -sum(additive_identity,_17,_3), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -sum(additive_identity,_17,_3), -product(_17,add(_1,c),_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(d),_1,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_3,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(d),_1,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(additive_identity,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -sum(additive_identity,_3,add(_1,c)), -product(_17,additive_identity,_3), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_3), -sum(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_3,_3), -sum(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(_17,add(_1,c),_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(_17,add(_1,c),_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -sum(add(_1,c),_17,_3), -product(_17,_17,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -sum(add(_1,c),_17,_3), -product(_17,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -sum(_17,_17,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -sum(_17,_17,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,add(_1,c),_3), -product(_17,add(_1,c),add(_1,c)), -product(_17,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(d,_1,_9), -product(add(d,d),_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(d,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(d,_1,_9), -product(add(d,d),_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(d),_1,_9), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,c), -product(d,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(d),_1,_9), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity), -sum(add(_1,c),_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity), -sum(add(_1,c),_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity), -sum(_17,_17,_3), -product(_17,_17,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity), -sum(_17,_17,_3), -product(_17,_17,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,additive_identity,_3), -product(_17,additive_identity,additive_identity), -product(_17,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(d,_1,additive_identity), -product(d,_1,_9), -product(additive_identity,_1,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(_17,add(_1,c),_3), -product(_17,_17,_17)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(d,_1,d), -product(d,_1,additive_identity), -product(d,_1,_9), -product(additive_identity,_1,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(_17,add(_1,c),_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(add(_1,c),_17,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -sum(add(_1,c),_17,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,_3,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,_3,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,_3,_3), -product(_17,_3,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -sum(_3,_3,_3), -product(_17,_3,_3), -product(_17,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_9,c),_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(_9,_1,add(_9,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(_3,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(_20,c),_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(_20,_1,add(_20,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,_3,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(_3,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(_3,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,additive_identity,additive_identity), -product(_17,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),additive_identity,_3), -sum(_17,add(_1,c),additive_identity), -product(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -sum(add(_1,c),additive_identity,_3), -sum(_17,add(_1,c),additive_identity), -product(_17,additive_identity,add(_1,c)), -product(_17,add(_1,c),_17)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(additive_inverse(d),_1,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,c), -product(add(c,c),c,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(additive_inverse(d),_1,_9)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(c,c), -product(add(c,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),c,additive_identity), -equalish(add(c,c),c), -product(add(c,c),c,add(c,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_3,c),_3), -product(add(c,c),c,add(_3,c)), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),d,additive_identity), -equalish(add(d,c),d), -product(add(d,c),d,add(d,c)), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(add(d,c),d), -sum(c,d,add(d,c)), -sum(add(d,c),_3,additive_identity), -equalish(add(_3,c),_3), -product(add(d,c),d,add(_3,c)), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(additive_identity,_1,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(additive_identity,_1,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),_3,add(_1,c)), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_3,add(c,c)), -sum(add(c,c),_1,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),_3,add(_1,c)), -product(_3,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(additive_identity),_1,_9)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(additive_identity),_1,_9)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(d,_1,_9)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(d,_1,_9)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(add(additive_identity,c),_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(c,_1,_9), -product(c,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_inverse(c),_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_3,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(add(additive_identity,c),_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),c), -product(add(_1,c),_3,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(c),_1,_9), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(c,_1,additive_identity), -product(c,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_inverse(c),_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,additive_inverse(c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),d), -product(add(_1,c),_3,add(_1,c)), -product(c,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,additive_identity), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),d), -product(add(_1,c),_3,add(_1,c)), -product(c,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(c),_1,_9), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),_3,additive_identity), -product(_3,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_3,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(add(_3,c),_3,_3), -sum(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(c,add(c,c),additive_identity), -equalish(c,add(c,c)), -product(add(c,c),c,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),c,add(_1,c)), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),c,add(_1,c)), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,c,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,c,add(_1,c)), -product(_1,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(c,_1,d)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(c,_1,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),c,add(_1,c)), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,c,add(c,c)), -sum(_3,_1,additive_identity), -equalish(add(_1,c),_1), -product(add(c,c),c,add(_1,c)), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(add(_3,c),c,_3), -sum(d,d,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,c,add(_3,c)), -sum(_1,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(add(_3,c),c,_3), -sum(d,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,d,add(_1,c)), -product(c,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,d,add(_1,c)), -product(c,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(d,_1,_9), -product(c,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(d,_1,_9), -product(c,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_3,c),_1,add(_1,c)), -sum(c,additive_identity,add(_1,c)), -product(_1,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,_1,add(c,c)), -sum(add(_1,c),c,additive_identity), -equalish(add(_1,c),c), -product(add(c,c),_1,add(_1,c)), -sum(c,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(_9,_1,_9), -product(c,_1,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_3,c),_1,add(_1,c)), -sum(d,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(_9,_1,_9), -product(c,_1,d)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,_1,add(_3,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(add(_3,c),_1,add(_1,c)), -sum(d,additive_identity,add(_1,c)), -product(_1,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(_9,_1,_9), -product(_9,_1,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(_9,_1,_9), -product(c,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(_9,_1,_9), -product(_9,_1,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -product(_9,_1,_9), -product(c,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(add(_1,c),_3,add(_1,c)), -sum(add(_1,c),_3,add(_1,c)), -product(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(c,_1,d), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(c,_1,d), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_22), -product(_1,c,_3), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_22), -product(c,c,_3), -sum(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(c,_22), -product(_1,c,c), -sum(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(c,_22), -product(_1,c,c), -sum(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_22,c,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,_1,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_9,_9),_1,c), -product(add(_9,_9),_1,d), -product(c,_1,additive_identity), -product(_9,_1,add(_9,_9))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,c,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_22,c,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,_1,_1)]]
Ag1 <------  Send Clauses : [[-product(add(_20,_20),_1,c), -product(add(_20,_20),_1,d), -product(c,_1,additive_identity), -product(_20,_1,add(_20,_20))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_22), -product(_1,d,_3), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,d,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(_3,_22), -product(_1,d,_3), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_22,d,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,d,add(_1,c)), -sum(add(_1,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_22,d,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(c,_22), -product(_1,c,c), -sum(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,c,add(c,c)), -sum(add(c,c),_22,additive_identity), -equalish(c,_22), -product(_1,c,c), -sum(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(_22,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(_22,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(additive_identity,_22,_22), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(additive_identity,_22,_22), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_22,add(_1,c)), -sum(_3,additive_identity,_1), -product(additive_identity,c,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(add(c,c),_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_22,add(_1,c)), -sum(_3,additive_identity,_1), -product(additive_identity,c,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(_22,additive_identity,_22), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_22,_3,_3), -sum(_22,additive_identity,_22), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,_3,additive_identity), -sum(_22,_22,_22), -product(_22,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,_3,additive_identity), -sum(_22,_22,_22), -product(_22,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,add(_1,c),_22), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_9,_9),_1,c), -product(add(_9,_9),_1,d), -product(d,_1,additive_identity), -product(_9,_1,add(_9,_9))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),c), -product(_22,_3,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(d,d),_1,c), -product(add(d,d),_1,d), -product(d,_1,additive_identity), -product(d,_1,add(d,d))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(additive_identity,c,additive_identity), -equalish(add(_1,c),c), -product(_22,_3,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),d), -product(_22,_3,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(additive_identity,d,additive_identity), -equalish(add(_1,c),d), -product(_22,_3,add(_1,c)), -sum(additive_identity,_3,_22), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity), -product(_22,add(_1,c),additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity), -product(_22,add(_1,c),additive_identity), -sum(_22,_22,_22), -product(_22,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,additive_identity,_22), -product(additive_identity,_3,additive_identity), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),c), -product(c,_1,add(c,c)), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),c), -product(c,_1,add(c,c)), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,_1,add(c,c)), -sum(c,c,additive_identity), -equalish(add(c,c),c), -product(c,_1,add(c,c)), -sum(additive_identity,c,c), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,_1,add(c,c)), -sum(_3,c,additive_identity), -equalish(add(_3,c),c), -product(_3,_1,add(_3,c)), -sum(additive_identity,c,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),d), -product(d,_1,add(d,c)), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),d), -product(d,_1,add(d,c)), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,_1,add(d,c)), -sum(d,d,additive_identity), -equalish(add(d,c),d), -product(d,_1,add(d,c)), -sum(additive_identity,d,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,_1,add(d,c)), -sum(_3,d,additive_identity), -equalish(add(_3,c),d), -product(_3,_1,add(_3,c)), -sum(additive_identity,d,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_22,add(_1,c)), -sum(c,additive_identity,_1), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(_1,c), -sum(d,_22,add(d,c)), -sum(_1,d,additive_identity), -equalish(add(_1,c),d), -product(_1,_22,add(_1,c)), -sum(c,additive_identity,_1), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_22,add(_1,c)), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_22,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_22,add(_1,c)), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,_3,_22), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,_3,_22), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,_22,_22), -product(_22,_3,_22), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,add(_1,c),_22), -sum(_3,_22,_22), -product(_22,_3,_22), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(c,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_1,_22,additive_identity), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_1,_22,additive_identity), -sum(_3,_3,_1), -sum(d,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,_1,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,_1,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_1,_3,_22), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_1,_3,_22), -sum(_3,c,add(_1,c)), -product(_1,_1,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(_9,_1,d), -product(c,_1,additive_identity), -product(_9,d,_9), -product(add(_9,_9),d,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_1,c), -product(_13,_1,d), -product(c,_1,additive_identity), -product(_13,d,_13), -product(add(_13,_13),d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_1,_22,additive_identity), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_22,add(c,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_1,_22,additive_identity), -sum(_3,_3,_1), -sum(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(d,d,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,c,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,c,additive_identity), -sum(_22,_3,_22), -sum(additive_identity,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(c,_3,_22), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(c,_3,_22), -sum(_3,d,add(_1,c)), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,_1,additive_identity), -sum(_3,_22,_22), -sum(c,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,_1,additive_identity), -sum(_3,_22,_22), -sum(c,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,c,additive_identity), -sum(_3,_22,_22), -sum(d,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_22,c,additive_identity), -sum(_3,_22,_22), -sum(d,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_22,_22,_22), -sum(_22,_22,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_22,_22,_22), -sum(_22,_22,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_22,_22), -sum(add(_1,c),_22,add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_22,_22), -sum(add(_1,c),_22,add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(c,add(_1,c),add(_1,c)), -product(_3,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(c,add(_1,c),add(_1,c)), -product(_3,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(d,add(_1,c),add(_1,c)), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_3,_3,_22), -sum(d,add(_1,c),add(_1,c)), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_22,_3,_22), -sum(_22,add(_1,c),add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_22,additive_identity), -product(_22,_3,_22), -sum(_22,_3,_22), -sum(_22,add(_1,c),add(_1,c)), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_22,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_22), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_22,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_22), -sum(additive_identity,additive_identity,additive_identity), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_22,add(_1,c),_3), -sum(add(_1,c),additive_identity,_22), -sum(_22,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_22,additive_identity), -equalish(_3,_22), -product(_22,add(_1,c),_3), -sum(add(_1,c),additive_identity,_22), -sum(_22,add(_1,c),additive_identity), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_22)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_13,_1,c), -product(_13,_1,d), -product(_13,_1,additive_identity), -product(_13,_1,_13), -product(additive_identity,_1,_13)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(c,_16,add(_1,c)), -sum(c,_16,additive_identity), -equalish(_16,_16), -product(_17,_16,_16)]]
Ag1 <------  Send Clauses : [[-product(_13,_1,c), -product(_13,_1,d), -product(_13,_1,additive_identity), -product(_13,_1,_13), -product(additive_identity,_1,_13)]]
Ag0 <------  Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(c,_16,add(_1,c)), -sum(c,_16,additive_identity), -equalish(_16,_16), -product(_17,_16,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,c,c), -product(_16,c,d), -equalish(_1,_16), -sum(c,_16,add(c,c)), -sum(d,_17,additive_identity), -equalish(_16,_17), -product(_1,_16,_16)]]
Ag0 <------  Send Clauses : [[-product(_16,c,c), -product(_16,c,d), -equalish(_1,_16), -sum(c,_16,add(c,c)), -sum(d,_17,additive_identity), -equalish(_16,_17), -product(_1,_16,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_16,c), -product(_16,c,d), -equalish(_1,_16), -sum(c,_16,add(_16,c)), -sum(_1,_17,additive_identity), -equalish(_1,_17), -product(_1,_16,_1)]]
Ag0 <------  Send Clauses : [[-product(_16,_16,c), -product(_16,c,d), -equalish(_1,_16), -sum(c,_16,add(_16,c)), -sum(_1,_17,additive_identity), -equalish(_1,_17), -product(_1,_16,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(c,_16,add(_1,c)), -sum(_16,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_16,additive_identity), -product(additive_identity,_1,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -product(additive_identity,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(c,c)), -sum(c,add(c,c),additive_identity), -equalish(additive_identity,add(c,c)), -product(_17,_3,additive_identity), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(c,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_1,_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_1,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_1,_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -product(_17,_3,c), -product(c,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -product(_17,_3,c), -product(c,_1,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(_9,_1),c,c), -product(c,c,d), -product(c,c,additive_identity), -product(_9,c,add(_9,_1)), -product(_1,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(_9,_1,_9), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_9,c), -product(_1,_9,d), -product(c,_9,additive_identity), -product(c,_9,additive_identity), -product(additive_inverse(c),_9,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(_9,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_9,c), -product(_1,_9,d), -product(c,_9,additive_identity), -product(additive_inverse(c),_9,additive_identity), -product(c,_9,_1)]]
Ag1 <------  Send Clauses : [[-product(add(_20,_1),c,c), -product(c,c,d), -product(c,c,additive_identity), -product(_20,c,add(_20,_1)), -product(_1,c,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,c), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(_1,_20,d), -product(c,_20,additive_identity), -product(c,_20,additive_identity), -product(additive_inverse(c),_20,_1)]]
Ag1 <------  Send Clauses : [[-product(_20,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_20), -product(_20,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,c,c), -product(_16,c,d), -equalish(_1,_16), -sum(d,_16,add(c,c)), -sum(c,_17,additive_identity), -equalish(_16,_17), -product(_1,_16,_16)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_20,c), -product(_1,_20,d), -product(c,_20,additive_identity), -product(additive_inverse(c),_20,additive_identity), -product(c,_20,_1)]]
Ag0 <------  Send Clauses : [[-product(_16,c,c), -product(_16,c,d), -equalish(_1,_16), -sum(d,_16,add(c,c)), -sum(c,_17,additive_identity), -equalish(_16,_17), -product(_1,_16,_16)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(d,_16,add(_1,c)), -sum(d,_16,additive_identity), -equalish(_16,_16), -product(_17,_16,_16)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_17,c), -sum(d,c,add(_1,c)), -sum(d,c,additive_identity), -equalish(c,c), -product(_17,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_16,c)), -sum(_1,_17,additive_identity), -equalish(_1,_17), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(d,c,add(_16,c)), -sum(_1,_17,additive_identity), -equalish(_1,_17), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_17,_16), -sum(d,_16,add(_1,c)), -sum(_16,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_16,additive_identity), -product(additive_identity,c,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -product(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,_17,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_17,_3,additive_identity), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,c,_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,c,_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,_17,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_17,add(_1,c)), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -product(_17,_3,d), -product(d,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,_3,_17), -product(_17,_3,d), -product(d,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,_16,additive_identity), -equalish(_3,_16), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_1,add(_1,c)), -sum(c,c,additive_identity), -equalish(_3,c), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,_16,additive_identity), -equalish(_3,_16), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,c,add(_1,c)), -sum(d,_16,additive_identity), -equalish(_3,_16), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_16,_3), -sum(_3,_16,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_16,_16,_3), -product(_3,_16,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,_17,_3), -product(_3,_17,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_1,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_1,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_1,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,c,_3), -product(_17,_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,c,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,c,_3), -product(_17,_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_17,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,_17,add(_1,c)), -sum(_17,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_17,_17,_3), -product(_17,_17,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(_17,_17,_3), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(_17,_17,_3), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -product(add(_1,c),_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -product(add(_1,c),_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_3,additive_identity), -product(_17,add(_1,c),_3), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -product(add(_1,c),_17,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(add(_1,c),additive_identity), -product(_17,add(_1,c),add(_1,c)), -product(add(_1,c),_17,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_20,add(_1,c)), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_20,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_20,add(_1,c)), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_3), -product(c,_20,add(_1,c)), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_20,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_3), -product(c,_20,add(_1,c)), -product(c,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(add(c,c),_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(c,_1,add(c,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(c,_1,_9), -product(additive_inverse(c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(d,_1,additive_identity), -product(additive_identity,_1,_9), -product(c,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(additive_inverse(c),_1,_9), -product(c,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(add(c,c),_1,d), -product(d,_1,additive_identity), -product(c,_1,c), -product(c,_1,add(c,c))]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(c,_1,d), -product(d,_1,additive_identity), -product(c,_1,d), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_20,additive_identity), -equalish(_3,_20), -product(_20,add(_1,c),_3), -product(_20,_20,_3), -product(_3,_20,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_20,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(c,_1,_20), -product(additive_inverse(c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(_17,_17,_3), -product(_3,_17,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(d,_1,additive_identity), -product(additive_identity,_1,_9), -product(c,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(d,_1,additive_identity), -product(additive_inverse(c),_1,_9), -product(c,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,_1,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,_1,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,c,_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,c,_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(additive_identity,_17), -product(_17,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(additive_identity,_17), -product(_17,add(_1,c),additive_identity), -product(_3,add(_1,c),_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,_3,_3), -product(_17,_3,_17)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,_3,_3), -product(_17,_3,_17)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,add(_1,c),_3), -product(_17,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_17,additive_identity), -product(_17,add(_1,c),_17), -product(_3,add(_1,c),_3), -product(_17,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),_17), -product(_17,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_17,additive_identity), -equalish(_3,_17), -product(_17,add(_1,c),_3), -product(add(_1,c),additive_identity,_3), -product(_17,add(_1,c),_17), -product(_17,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(d,c,additive_identity), -equalish(_1,c), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,_1,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),_1), -product(c,_1,add(_1,c)), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_3,add(_3,c)), -sum(c,_3,additive_identity), -equalish(add(_3,c),_3), -product(c,_3,add(_3,c)), -product(_3,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,d), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,d,additive_identity), -equalish(c,d), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(add(c,c),c), -product(d,c,add(c,c)), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -equalish(add(_3,c),c), -product(d,_3,add(_3,c)), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(_16,c,add(_16,c)), -sum(_1,_13,additive_identity), -equalish(_1,_13), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_16,c), -product(c,c,d), -equalish(_1,c), -sum(_16,c,add(_16,c)), -sum(_1,_13,additive_identity), -equalish(_1,_13), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_13,_16), -sum(_1,_16,add(_1,c)), -sum(_16,add(_1,c),additive_identity), -equalish(_13,add(_1,c)), -product(_13,_16,_13), -product(_13,c,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_19,add(_1,c)), -product(_19,_3,_19), -product(_19,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(_19,_3,additive_identity), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,c,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_19,c,_3), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(c,_1,c), -product(c,c,d), -equalish(_19,c), -sum(_1,c,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(c,add(_1,c)), -product(_19,c,c), -product(_19,c,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(additive_identity,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(additive_identity,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(_1,_3,_19), -product(_1,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(_1,_3,_19), -product(_1,c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(c,_1,_9), -product(additive_inverse(c),_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(c,_1,_9), -product(additive_inverse(c),_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(c),_1,_9), -product(c,_1,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_inverse(c),_1,c), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -equalish(c,_1), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,_1,add(d,c)), -sum(c,_1,additive_identity), -equalish(c,_1), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,_1,add(_1,c)), -sum(c,_1,additive_identity), -equalish(add(_1,c),_1), -product(c,_1,add(_1,c)), -product(_1,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_3,c)), -sum(c,_3,additive_identity), -equalish(add(_3,c),_3), -product(c,_3,add(_3,c)), -product(_3,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(d,c)), -sum(c,c,additive_identity), -equalish(d,c), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(add(c,c),c), -product(d,c,add(c,c)), -product(c,d,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,_3,add(c,c)), -sum(d,c,additive_identity), -equalish(add(_3,c),c), -product(d,_3,add(_3,c)), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_16,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_16,c)), -sum(_1,_13,additive_identity), -equalish(_1,_13), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_16,c), -product(d,c,d), -equalish(_1,d), -sum(c,d,add(_16,c)), -sum(_1,_13,additive_identity), -equalish(_1,_13), -product(_1,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_16,_1,c), -product(_16,c,d), -equalish(_13,_16), -sum(c,_16,add(_1,c)), -sum(_16,add(_1,c),additive_identity), -equalish(_13,add(_1,c)), -product(_13,_16,_13), -product(_13,d,_16)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_19,add(_1,c)), -product(_19,_3,_19), -product(_19,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,_19,add(d,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,d,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_19,d,_3), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,d,add(_1,c)), -sum(_3,add(_1,c),additive_identity), -equalish(_3,add(_1,c)), -product(_19,d,_3), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(additive_identity,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,_19,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_19,add(_1,c)), -product(additive_identity,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(c,_3,_19), -product(c,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(c,_3,_19), -product(c,d,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,_1,_9), -product(_9,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(additive_identity,_1,_9), -product(_9,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(d,c,additive_identity), -equalish(c,c), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(c,c),_3), -product(c,c,add(c,c)), -product(_3,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,c,add(c,c)), -sum(c,_3,additive_identity), -equalish(add(c,c),_3), -product(c,c,add(c,c)), -product(_3,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(_1,add(_1,c)), -product(_19,_3,_1), -product(_3,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(_1,add(_1,c)), -product(_19,_3,_1), -product(_3,_19,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(c,add(_1,c)), -product(_19,_3,c), -product(_3,_19,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(c,add(_1,c)), -product(_19,_3,c), -product(_3,_19,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(c,d,_9), -product(additive_identity,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(additive_identity,c,_9), -product(additive_inverse(additive_identity),c,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -product(c,d,_9), -product(additive_identity,d,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,c,c), -product(additive_inverse(additive_identity),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(_3,_19,_19), -product(_3,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,_3,_19), -product(_3,_19,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(c,_3,additive_identity), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(c,_3,additive_identity), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(c,_3,additive_identity), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(c,_3,additive_identity), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(c,c,add(_1,c)), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,c,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(c,c,add(_1,c)), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,additive_identity), -product(c,_3,c), -product(_1,c,c), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(c,additive_identity), -product(c,_3,c), -product(_1,c,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(d,_3,additive_identity), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(c,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(d,_3,additive_identity), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(d,_3,additive_identity), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(d,add(_1,c),additive_identity), -equalish(additive_identity,add(_1,c)), -product(d,_3,additive_identity), -product(c,d,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(d,d,add(_1,c)), -product(c,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,d,add(_3,c)), -sum(_1,_3,additive_identity), -equalish(add(_1,c),_3), -product(d,d,add(_1,c)), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(d,additive_identity), -product(d,_3,d), -product(c,d,d), -product(_3,d,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,_3,add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -equalish(d,additive_identity), -product(d,_3,d), -product(c,d,_19), -product(_3,_19,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(_9,_8,additive_identity), -product(additive_identity,_8,_9), -product(_9,_8,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_13,additive_identity,additive_identity), -equalish(_13,additive_identity), -product(_13,add(_1,c),_13), -product(add(_1,c),_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(_9,_8,additive_identity), -product(additive_identity,_8,_9), -product(_9,_8,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_13,additive_identity,additive_identity), -equalish(_13,additive_identity), -product(_13,add(_1,c),_13), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_13,additive_identity), -equalish(_13,_13), -product(_13,add(_1,c),_13), -product(add(_1,c),_3,_3), -product(_13,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_19,_19), -product(_19,add(_1,c),_19), -product(add(_1,c),_3,_3), -product(_19,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,_21,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,_21,add(_1,c)), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,c,add(_1,c)), -sum(c,_3,additive_identity), -equalish(add(_1,c),_3), -product(_1,c,add(_1,c)), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_3), -product(c,_21,add(_1,c)), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,_21,add(_1,c)), -sum(d,_3,additive_identity), -equalish(add(_1,c),_3), -product(c,_21,add(_1,c)), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_21,additive_identity), -equalish(_3,_21), -product(_21,add(_1,c),_3), -product(_3,_3,_21), -product(_3,_21,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_21,additive_identity), -equalish(_3,_21), -product(_21,add(_1,c),_3), -product(_3,_3,_21), -product(_3,_21,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,c,_9), -product(d,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(additive_identity),c,_9), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_1), -product(_3,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,c,_9), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_1), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,c), -product(_3,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(_11,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(additive_identity),c,_11), -product(additive_identity,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,c), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,add(_1,c)), -product(_19,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_3,_3,add(_1,c)), -product(_19,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_3), -product(add(_1,c),_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_3), -product(add(_1,c),_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_3), -product(_3,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,additive_identity,additive_identity), -equalish(_19,additive_identity), -product(_19,add(_1,c),_19), -product(_3,_3,_3), -product(_3,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_19,add(_1,c),_3), -product(add(_1,c),_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -equalish(_3,_19), -product(_19,add(_1,c),_3), -product(add(_1,c),_3,additive_identity), -product(_19,add(_1,c),_19), -product(_19,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_13,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_13,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_13,add(_1,c),additive_identity), -product(_13,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_13,add(_1,c),additive_identity), -product(_13,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(multiply(_13,add(_1,c)),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_13,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(multiply(_13,add(_1,c)),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_13,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_21,add(_1,c),additive_identity), -equalish(_21,_21), -product(_21,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_21,add(_1,c),additive_identity), -equalish(_21,_21), -product(_21,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(add(add(add(_1,c),c),c),add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),additive_identity), -sum(add(add(_1,c),c),add(add(_1,c),c),add(add(_1,c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),add(add(_1,c),c)), -product(add(_1,c),add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -sum(add(add(_3,c),c),add(add(_3,c),c),add(add(_3,c),c)), -sum(_1,add(_3,c),additive_identity), -sum(add(_3,c),add(_3,c),add(_3,c)), -product(_3,add(add(_3,c),c),add(_3,c)), -product(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(add(d,additive_identity),_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(d,_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(additive_inverse(d),_11,c), -product(additive_identity,_11,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,d,_9), -product(_11,d,c), -product(_11,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(d),_11,_9), -product(d,_11,c), -product(additive_identity,_11,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_9), -product(additive_identity,_11,c), -product(add(d,additive_identity),_11,c)]]
Ag1 <------  Send Clauses : [[-product(_11,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,_11), -product(additive_identity,_11,c), -product(d,_11,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(d,_11,c), -product(additive_inverse(d),_11,c), -product(additive_identity,_11,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,d,_13), -product(_13,d,c), -product(_13,d,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_inverse(d),_11,_13), -product(d,_11,c), -product(additive_identity,_11,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,add(_1,c)), -product(_22,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(_22,_22,_3), -product(_22,add(_1,c),_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(_22,_22,_3), -product(_22,add(_1,c),_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(_22,add(_1,c),_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(_22,add(_1,c),_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,_3), -product(_22,add(_1,c),_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,_3), -product(_22,add(_1,c),_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,additive_identity,_3), -product(_20,add(_1,c),_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,additive_identity,_3), -product(_20,add(_1,c),_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3), -product(_20,add(_1,c),_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3), -product(_20,add(_1,c),_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,add(_1,c),_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,add(_1,c),_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(c,_8,additive_identity), -product(additive_identity,_8,_9), -product(_9,_8,c), -product(additive_identity,_8,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(c,_8,additive_identity), -product(additive_identity,_8,_9), -product(_9,_8,c), -product(c,_8,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(c,_8,additive_identity), -product(additive_identity,_8,_9), -product(_9,_8,c), -product(additive_identity,_8,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(c,_8,additive_identity), -product(additive_identity,_8,_9), -product(c,_8,c), -product(additive_identity,_8,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_8,c), -product(c,_8,d), -product(c,_8,additive_identity), -product(additive_identity,_8,_9), -product(_9,_8,c), -product(c,_8,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(additive_identity,_1,_9), -product(c,_1,c), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_20,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c), -product(c,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c), -product(c,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(c,_1,c), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(c,_1,c), -product(additive_identity,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,_20,add(_1,c)), -product(_20,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c), -product(additive_identity,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,_20,add(_1,c)), -product(_20,additive_identity,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(_9,_1,c), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(additive_identity,_1,c), -product(additive_identity,_1,c)]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -product(c,_1,_9), -product(_9,_1,c), -product(additive_identity,_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(c,_1,d), -product(add(c,_8),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_8,_1,c), -product(c,_1,d), -product(add(c,_8),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,_20,_20), -product(_20,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,_20,_20), -product(_20,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(c,_1,d), -product(add(c,c),_1,additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(additive_inverse(c),_1,d), -product(additive_identity,_1,additive_identity), -equalish(c,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,_8)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -equalish(additive_inverse(c),_8)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_1,c), -product(c,_1,d), -product(add(c,c),_1,additive_identity), -equalish(c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -equalish(c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_8,_1,c), -product(additive_inverse(c),_1,d), -product(additive_identity,_1,additive_identity), -equalish(c,_8)]]
Ag1 <------  Send Clauses : [[-product(_8,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,_8)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -equalish(additive_inverse(c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_20,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,_3), -product(_20,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_20,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(_20,_20,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_8,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -equalish(d,_8)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(_20,_20,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_8,_1,c), -product(additive_identity,_1,d), -product(additive_identity,_1,additive_identity), -equalish(d,_8)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,add(_1,c)), -sum(add(_1,c),add(_1,c),_3), -product(_20,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_20,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(add(_9,c),_1,additive_identity), -equalish(c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(_9,_1,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -equalish(additive_inverse(_9),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_9,c), -product(_1,_9,d), -product(c,_9,additive_identity), -equalish(c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_9),_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -equalish(_9,c)]]
Ag1 <------  Send Clauses : [[-product(_13,_1,c), -product(c,_1,d), -product(add(_13,c),_1,additive_identity), -equalish(c,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -equalish(additive_inverse(d),c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(_1,d,d), -product(c,d,additive_identity), -equalish(c,_1)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_1,c), -product(c,_1,d), -product(additive_identity,_1,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -equalish(c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -equalish(c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -equalish(add(_9,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(_3,_3,_19), -product(_19,add(_1,c),_3), -product(_3,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_9,_1,c), -product(c,_1,d), -product(c,_1,additive_identity), -equalish(add(_9,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -equalish(_9,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(_3,_3,_19), -product(_19,add(_1,c),_3), -product(_3,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_9,_1,c), -product(additive_inverse(_9),_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_9,c), -product(_1,_9,d), -product(c,_9,additive_identity), -equalish(_1,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_9),_1,c), -product(_9,_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -equalish(c,c)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(additive_inverse(d),_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,c)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(_1,d,d), -product(c,d,additive_identity), -equalish(_1,c)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity), -equalish(additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -equalish(additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(d,d,additive_identity), -equalish(additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -sum(additive_identity,_19,_3), -product(add(_1,c),add(_1,c),_19), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_identity,additive_identity,additive_identity), -equalish(additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -sum(additive_identity,_19,_3), -product(add(_1,c),add(_1,c),_19), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(c,add(c,add(_13,_16))),_1,d), -product(add(add(_7,c),add(c,add(_13,_16))),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(additive_identity,c),_1,d), -product(add(_7,c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(additive_inverse(_7),c),_1,d), -product(add(additive_identity,c),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_7,_1,c), -product(add(c,add(c,add(_13,_16))),_1,d), -product(add(add(_7,c),add(c,add(_13,_16))),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_7),_1,c), -product(add(_7,c),_1,d), -product(add(additive_identity,c),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(add(additive_identity,c),_1,d), -product(add(d,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_25), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(add(additive_inverse(d),c),_1,d), -product(add(additive_identity,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_25), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_1,c), -product(add(additive_identity,c),_1,d), -product(add(additive_identity,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(c,additive_identity),additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(c,additive_identity),additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(c,additive_identity),_1,d), -product(add(_7,c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(additive_identity,additive_identity),_1,d), -product(_7,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(add(_1,additive_identity),_7,d), -product(_1,_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_25), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(add(c,additive_identity),_1,d), -product(add(c,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,additive_identity,_25), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,add(_1,c),_25), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(add(additive_identity,additive_identity),_1,d), -product(d,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,add(_1,c),_25), -product(additive_identity,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(_1,additive_identity),additive_identity,d), -product(_1,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -sum(add(_1,c),additive_identity,_3), -product(_25,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -sum(add(_1,c),additive_identity,_3), -product(_25,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -sum(additive_identity,add(_1,c),_3), -product(_25,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -sum(additive_identity,add(_1,c),_3), -product(_25,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -sum(add(_1,c),add(_1,c),_3), -product(_25,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,add(_1,c),_25), -sum(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(_25,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,add(_1,c),_25), -sum(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(_25,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(c,additive_inverse(add(_7,c))),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(additive_identity,additive_inverse(_7)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(additive_inverse(_7),additive_inverse(additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(add(_1,additive_inverse(_1)),_7,d), -product(additive_identity,_7,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_7),_1,c), -product(add(_7,additive_inverse(additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(add(c,additive_inverse(add(c,c))),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(add(additive_identity,additive_inverse(d)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_1,c), -product(add(additive_inverse(additive_identity),additive_inverse(additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_18,c), -product(add(_1,additive_inverse(_1)),_18,d), -product(additive_identity,_18,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_1,c), -product(add(additive_identity,additive_inverse(additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_20,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_20,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(c,additive_inverse(additive_identity)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(additive_identity,additive_inverse(c)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(c,additive_inverse(additive_identity)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(additive_identity,additive_inverse(c)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(_3,_3,_3), -product(_20,add(_1,c),_3), -product(add(_1,c),_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(_3,_3,_3), -product(_20,add(_1,c),_3), -product(add(_1,c),_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(_3,_3,_3), -product(_20,add(_1,c),_3), -product(add(_1,c),c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(_3,_3,_3), -product(_20,add(_1,c),_3), -product(add(_1,c),c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(add(additive_inverse(_7),c),_1,d), -product(c,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_7),_1,c), -product(add(_7,c),_1,d), -product(c,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(add(additive_inverse(_18),c),_1,d), -product(c,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(add(_1,c),_20,add(_1,c)), -product(additive_identity,_20,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(c),_1,c), -product(add(c,c),_1,d), -product(c,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(add(_1,c),_20,add(_1,c)), -product(additive_identity,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(c,_1,additive_identity), -sum(_23,_23,_1), -product(_3,add(_3,c),_23), -product(_3,_3,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(c,_1,additive_identity), -sum(_23,_23,_1), -product(_3,add(_3,c),_23), -product(_3,_3,add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(d,_1,additive_identity), -sum(_23,_23,_1), -product(c,add(_3,c),_23), -product(c,c,add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(d,_1,additive_identity), -sum(_23,_23,_1), -product(c,add(_3,c),_23), -product(c,c,add(_3,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(c,additive_identity),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_23,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_23,add(_1,c),additive_identity), -product(_23,_23,add(_1,c)), -product(add(_1,c),_23,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(add(c,additive_identity),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_20,add(_1,c)), -product(add(_1,c),_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,_1,add(_1,c)), -product(_20,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,_1,add(_1,c)), -product(_20,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,c,add(_1,c)), -product(_20,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,c,add(_1,c)), -product(_20,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_7),_1,c), -product(add(additive_identity,_7),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(add(additive_inverse(_1),_1),_7,d), -product(additive_identity,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(c),_1,c), -product(add(additive_identity,c),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_20,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,additive_identity,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_18,c), -product(add(additive_inverse(_1),_1),_18,d), -product(additive_identity,_18,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_20,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,additive_identity,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,_20,add(_1,c)), -product(_20,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(additive_identity,_20,add(_1,c)), -product(_20,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -product(_20,_20,_3), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -product(_20,_20,_3), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,c,c), -product(c,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,c,c), -product(c,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(_3,_3,c), -product(c,add(c,c),_3), -product(_3,_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(_3,_3,c), -product(c,add(c,c),_3), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(_1,_1,_3), -product(_22,add(_1,c),_1), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(_1,_1,_3), -product(_22,add(_1,c),_1), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(c,c,_3), -product(_22,add(_1,c),c), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(c,c,_3), -product(_22,add(_1,c),c), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_22,_22), -product(_22,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_22,_22), -product(_22,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,c,additive_identity), -sum(_3,_3,c), -product(c,add(_1,c),_3), -product(_1,add(_1,c),_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,c,additive_identity), -sum(_3,_3,c), -product(c,add(_1,c),_3), -product(_1,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,c,additive_identity), -sum(_3,_3,c), -product(c,add(_1,c),_3), -product(_1,add(_1,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,c,additive_identity), -sum(_3,_3,c), -product(c,add(_1,c),_3), -product(_1,add(_1,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(add(_3,c),_1,additive_identity), -sum(c,c,_1), -product(c,add(_3,c),c), -product(_3,add(_3,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(add(_3,c),_1,additive_identity), -sum(c,c,_1), -product(c,add(_3,c),c), -product(_3,add(_3,c),add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(c,add(_1,c),add(_1,c)), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(c,add(_1,c),add(_1,c)), -product(_1,add(_1,c),additive_identity), -product(_3,additive_identity,c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(c,_1,d), -product(add(add(_7,c),additive_identity),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_inverse(_7),_1,d), -product(add(additive_identity,additive_identity),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(_7),_1,c), -product(_7,_1,d), -product(add(additive_identity,additive_identity),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(add(add(c,c),additive_identity),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,d,additive_identity), -sum(_3,_3,d), -product(d,add(_1,c),_3), -product(c,add(_1,c),_1)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(additive_inverse(d),_1,d), -product(add(additive_identity,additive_identity),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,d,additive_identity), -sum(_3,_3,d), -product(d,add(_1,c),_3), -product(c,add(_1,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,d,additive_identity), -sum(_3,_3,d), -product(d,add(_1,c),_3), -product(c,add(_1,c),c)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(d),_1,c), -product(d,_1,d), -product(add(additive_identity,additive_identity),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,d,additive_identity), -sum(_3,_3,d), -product(d,add(_1,c),_3), -product(c,add(_1,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(add(_3,c),_1,additive_identity), -sum(d,d,_1), -product(d,add(_3,c),d), -product(c,add(_3,c),add(_3,c))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(add(_3,c),_1,additive_identity), -sum(d,d,_1), -product(d,add(_3,c),d), -product(c,add(_3,c),add(_3,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(d,add(_1,c),add(_1,c)), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(d,add(_1,c),add(_1,c)), -product(c,add(_1,c),additive_identity), -product(_3,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(_17,_17,add(_1,c)), -product(_17,add(_1,c),_17), -product(add(_1,c),add(_1,c),additive_identity), -product(_17,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(_22,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(add(_1,c),add(_1,c),additive_identity), -product(_22,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(_3,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(c,_1,additive_identity), -sum(_24,_24,_1), -product(_3,add(_3,c),_24), -product(add(_3,c),add(_3,c),_3)]]
Ag0 <------  Send Clauses : [[-product(add(add(_1,c),c),add(_1,c),c), -product(add(add(_1,c),c),c,d), -equalish(add(_1,c),add(add(_1,c),c)), -sum(add(add(_1,c),c),add(add(_1,c),c),add(add(_1,c),c)), -sum(c,_1,additive_identity), -sum(c,c,_1), -product(add(_1,c),add(add(_1,c),c),c), -product(add(add(_1,c),c),add(add(_1,c),c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(d,_1,additive_identity), -sum(_24,_24,_1), -product(c,add(_3,c),_24), -product(add(_3,c),add(_3,c),c)]]
Ag0 <------  Send Clauses : [[-product(add(_3,c),_3,c), -product(add(_3,c),c,d), -equalish(c,add(_3,c)), -sum(add(_3,c),add(_3,c),add(_3,c)), -sum(d,_1,additive_identity), -sum(_24,_24,_1), -product(c,add(_3,c),_24), -product(add(_3,c),add(_3,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_24,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_24,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_24), -product(add(_1,c),_24,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_22), -product(add(_1,c),_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),_1), -product(_3,additive_identity,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),_1), -product(_3,additive_identity,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),c), -product(_3,additive_identity,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),c), -product(_3,additive_identity,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),additive_identity), -product(_22,additive_identity,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),additive_identity), -product(_22,additive_identity,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c)), -product(additive_identity,additive_identity,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c)), -product(additive_identity,additive_identity,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_3,_22,_22), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_3,_22,_22), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),_13,additive_identity), -product(_13,add(_1,c),_13), -product(_13,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),_13,additive_identity), -product(_13,add(_1,c),_13), -product(_13,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_13,add(_1,c),_3), -product(_13,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_13,add(_1,c),_3), -product(_13,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_13,_3,additive_identity), -product(_13,add(_1,c),_3), -product(_13,_3,_13), -product(_13,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_13,_3,additive_identity), -product(_13,add(_1,c),_3), -product(_13,_3,_13), -product(_13,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(add(_7,c),additive_inverse(c)),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(_7,additive_inverse(additive_identity)),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(additive_identity,additive_inverse(additive_inverse(_7))),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(additive_identity,_7,d), -product(add(_1,additive_inverse(_1)),_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_13,_3),add(_1,c),additive_identity), -sum(additive_identity,_13,add(_1,c)), -product(_13,add(_1,c),_13), -product(_13,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(additive_identity,_1,d), -product(add(add(c,c),additive_inverse(c)),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(multiply(_13,_3),add(_1,c),additive_identity), -sum(additive_identity,_13,add(_1,c)), -product(_13,add(_1,c),_13), -product(_13,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_13,add(_1,c),additive_identity), -product(_13,additive_identity,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(additive_identity,_1,d), -product(add(d,additive_inverse(additive_identity)),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_13,add(_1,c),additive_identity), -product(_13,additive_identity,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_1,c), -product(additive_identity,_1,d), -product(add(additive_identity,additive_inverse(additive_inverse(additive_identity))),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,_18,c), -product(additive_identity,_18,d), -product(add(_1,additive_inverse(_1)),_18,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_21,add(_1,c),additive_identity), -product(_21,_1,add(_1,c)), -equalish(_3,_21)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_21,add(_1,c),additive_identity), -product(_21,_1,add(_1,c)), -equalish(_3,_21)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(add(c,additive_inverse(d)),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_21,add(_1,c),additive_identity), -product(_21,c,add(_1,c)), -equalish(_3,_21)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(add(c,additive_inverse(d)),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_21,add(_1,c),additive_identity), -product(_21,c,add(_1,c)), -equalish(_3,_21)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(c,additive_inverse(c)),d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(c,additive_inverse(c)),d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(d,additive_inverse(d)),d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(d,additive_inverse(d)),d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_identity,additive_inverse(additive_identity)),d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(d,additive_inverse(d)),d,additive_identity), -product(c,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_21,_3,additive_identity), -product(_21,add(_1,c),_3), -product(_21,_3,_21), -equalish(add(_1,c),_21), -product(add(_1,c),_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_identity,additive_inverse(additive_identity)),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_21,_3,additive_identity), -product(_21,add(_1,c),_3), -product(_21,_3,_21), -equalish(add(_1,c),_21), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,additive_inverse(c)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_identity,additive_inverse(additive_identity)),d,additive_identity), -product(c,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,additive_inverse(d)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,additive_inverse(c)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,additive_inverse(d)),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(additive_identity,_1,d), -product(add(_18,additive_inverse(d)),_1,additive_identity), -product(c,_1,_18)]]
Ag1 <------  Send Clauses : [[-product(_18,_1,c), -product(additive_identity,_1,d), -product(add(_18,additive_inverse(d)),_1,additive_identity), -product(c,_1,_18)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -sum(add(_1,c),_22,_3), -product(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,_3,additive_identity), -sum(add(_1,c),_22,_3), -product(add(_1,c),add(_1,c),_22), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_22,_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_22,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_22,_3,_22), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_22,_3,_22), -equalish(add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -equalish(add(_1,c),_3), -product(_22,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -equalish(add(_1,c),_3), -product(_22,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(additive_inverse(additive_inverse(_7)),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_17,_1,c), -product(additive_identity,_1,d), -product(additive_inverse(additive_inverse(_17)),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(_22,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(_22,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),_22,_3), -product(_22,add(_1,c),_22), -product(_22,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),_22,_3), -product(_22,add(_1,c),_22), -product(_22,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_inverse(additive_identity),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_22,_3,_22)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_inverse(additive_identity),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_22,_3,_22)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(c),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(d),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(c),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(d),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -equalish(_22,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -equalish(_22,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_inverse(additive_identity)),_7,c), -product(additive_identity,_7,d), -product(additive_identity,_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,add(_1,c),additive_identity), -equalish(_22,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_inverse(additive_identity)),d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,add(_1,c),additive_identity), -equalish(_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -equalish(add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -equalish(add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)),c), -product(additive_identity,additive_inverse(additive_inverse(d)),d), -product(additive_identity,additive_inverse(additive_inverse(d)),additive_identity), -product(additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)))]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)),c), -product(additive_identity,additive_inverse(additive_inverse(d)),d), -product(additive_identity,additive_inverse(additive_inverse(d)),additive_identity), -product(_17,additive_inverse(additive_inverse(d)),additive_inverse(additive_inverse(d)))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(_20,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(_20,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_inverse(d),d,additive_identity), -product(d,d,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,_3)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(additive_inverse(d),d,additive_identity), -product(additive_identity,d,additive_inverse(d))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,_3), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_3,_3), -product(_20,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_3,_3), -product(_20,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(c,_1,d), -product(add(add(_7,additive_identity),c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_7,c), -product(_1,_7,d), -product(add(additive_identity,_1),_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(add(add(c,additive_identity),c),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),additive_identity,c), -product(_1,additive_identity,d), -product(add(additive_identity,_1),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_inverse(add(_7,additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(_7,_1,c), -product(additive_inverse(add(_7,additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_7,c), -product(additive_inverse(additive_identity),_7,d), -product(additive_identity,_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,_3), -product(_20,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),d,c), -product(additive_inverse(additive_identity),d,d), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,_3), -product(_20,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_inverse(additive_identity),d,d), -product(additive_identity,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_inverse(additive_identity),d,d), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(c),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(c),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,add(_1,c)), -product(_20,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,add(_1,c)), -product(_20,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -product(_20,_3,additive_identity), -product(_20,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -product(_20,_3,additive_identity), -product(_20,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_7,c), -product(_1,_7,d), -product(_1,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),c,c), -product(_1,c,d), -product(_1,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,_3), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,_3), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -sum(_20,additive_identity,_3), -product(_20,_3,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -sum(_20,additive_identity,_3), -product(_20,_3,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,_3,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,_3,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -sum(_20,_20,_3), -product(_20,_3,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,additive_identity,add(_1,c)), -sum(_20,_20,_3), -product(_20,_3,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,additive_identity,additive_identity), -sum(additive_identity,_3,_3), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,additive_identity,additive_identity), -sum(additive_identity,_3,_3), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(add(_7,additive_inverse(c)),c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(additive_identity,_7,d), -product(add(additive_inverse(_1),_1),_7,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_inverse(_7)),_1,c), -product(additive_identity,_1,d), -product(add(additive_identity,_7),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(additive_identity,_1,d), -product(add(add(d,additive_inverse(c)),c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_inverse(_15),c), -product(additive_identity,additive_inverse(_15),d), -product(add(additive_inverse(_1),_1),additive_inverse(_15),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_inverse(_18)),_1,c), -product(additive_identity,_1,d), -product(add(additive_identity,_18),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_inverse(d),d),d,additive_identity), -product(c,d,additive_inverse(d))]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_inverse(d),d),d,additive_identity), -product(c,d,additive_inverse(d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(additive_identity,_7,d), -product(additive_inverse(additive_identity),_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,add(_1,c)), -product(_20,add(_1,c),_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(additive_inverse(additive_identity),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,add(_1,c)), -product(_20,add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_inverse(additive_inverse(additive_identity))),_7,c), -product(additive_identity,_7,d), -product(additive_identity,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_inverse(additive_inverse(additive_identity))),additive_inverse(additive_inverse(d)),c), -product(additive_identity,additive_inverse(additive_inverse(d)),d), -product(additive_identity,additive_inverse(additive_inverse(d)),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,_3), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,_3), -product(_20,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_inverse(_7)),_1,c), -product(additive_identity,_1,d), -product(_7,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_inverse(c)),_1,c), -product(additive_identity,_1,d), -product(c,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,additive_identity), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,additive_identity), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3), -sum(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3), -sum(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,add(_1,c)), -sum(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(additive_identity,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(additive_identity,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(_20,add(_1,c),add(_1,c)), -product(_20,additive_identity,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -sum(_3,_20,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(_3,additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -sum(_3,_20,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(additive_identity,additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_20,_20,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(additive_identity,additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_20,_20,add(_1,c)), -product(_20,additive_identity,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,_20,add(_1,c)), -product(_20,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,_20,add(_1,c)), -product(_20,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3), -sum(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3), -sum(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(_20,add(_1,c),_3), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(_20,add(_1,c),_3), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -sum(_3,_20,_3), -product(_20,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -sum(_3,_20,_3), -product(_20,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_inverse(d)),_7,c), -product(additive_identity,_7,d), -product(additive_identity,_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -sum(_20,_20,add(_1,c)), -product(_20,_20,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_inverse(d)),additive_inverse(d),c), -product(additive_identity,additive_inverse(d),d), -product(additive_identity,additive_inverse(d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -sum(_20,_20,add(_1,c)), -product(_20,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(_7,additive_inverse(d)),_1,additive_identity), -product(c,_1,add(_7,additive_inverse(d)))]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(additive_identity,_1,d), -product(add(c,additive_inverse(d)),_1,additive_identity), -product(c,_1,add(c,additive_inverse(d)))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -sum(_20,_3,_3), -product(_20,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,add(_1,c)), -sum(_20,_3,_3), -product(_20,_20,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,additive_identity,_3), -product(_20,additive_identity,add(_1,c)), -product(_20,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,additive_identity,_3), -product(_20,additive_identity,add(_1,c)), -product(_20,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_20,_3,_3), -product(_20,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_20,_3,_3), -product(_20,_20,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(add(_7,d),additive_identity),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(add(_7,d),additive_identity),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(additive_identity,_7,d), -product(add(d,additive_identity),_7,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(d),_7,c), -product(additive_identity,_7,d), -product(add(additive_identity,additive_identity),_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,d,c), -product(additive_identity,d,d), -product(add(d,additive_identity),d,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(d),additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,_3,_3), -product(_20,_3,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,_3,_3), -product(_20,_3,_20)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_identity,additive_identity),d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,d,c), -product(additive_identity,d,d), -product(add(additive_identity,additive_identity),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_20,_20,_3), -product(_20,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,additive_identity), -sum(_20,_20,_3), -product(_20,_20,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(_7,d),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,_7,c), -product(additive_identity,_7,d), -product(d,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(additive_identity,_1,d), -product(add(d,d),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(_20,add(_1,c),_3), -product(_20,_20,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(_20,add(_1,c),_3), -product(_20,_20,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,_3,_3), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,_3,_3), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,_3,_3), -product(_20,_3,_3), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -sum(_3,_3,_3), -product(_20,_3,_3), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(_3,_3,_3), -sum(_20,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(_3,_3,_3), -sum(_20,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),_3,_3), -sum(_3,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),_3,_3), -sum(_3,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),_3,_3), -sum(add(_1,c),_20,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),_3,_3), -sum(add(_1,c),_20,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(_3,add(_1,c),_3), -sum(_20,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(_3,add(_1,c),_3), -sum(_20,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(add(_1,c),_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(_3,add(_1,c),_3), -sum(_20,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(_3,add(_1,c),_3), -sum(_20,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(add(_7,additive_identity),d),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_7,_1,c), -product(additive_identity,_1,d), -product(add(add(_7,additive_identity),d),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_7,c), -product(additive_identity,_7,d), -product(add(additive_identity,d),_7,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),d,c), -product(additive_identity,d,d), -product(add(additive_identity,d),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -sum(add(_1,c),add(_1,c),_3), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(additive_identity),_7,c), -product(additive_identity,_7,d), -product(d,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(additive_identity),_23,c), -product(additive_identity,_23,d), -product(d,_23,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(_3,add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(d),_7,c), -product(additive_identity,_7,d), -product(additive_identity,_7,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(d),d,c), -product(additive_identity,d,d), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(additive_identity,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(add(_3,c),add(_3,c),c), -product(add(_3,c),_3,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(add(_3,c),add(_3,c),c), -product(add(_3,c),_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,d,_1), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),c,d)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,d,_1), -product(add(_3,c),add(_3,c),d), -product(add(_3,c),c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(c,add(_1,c),_1), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),_3,c), -product(add(_3,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,add(c,c),add(c,c)), -sum(_1,_1,additive_identity), -sum(c,add(_1,c),_1), -product(add(c,c),add(c,c),add(_1,c)), -product(add(c,c),c,c), -product(add(c,c),c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,add(_1,c),_1), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),c,d), -product(add(_3,c),c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,add(_1,c),_1), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),c,d), -product(add(_3,c),c,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_15,_16),_1),c),c,c), -product(_14,c,d), -product(add(add(add(_15,_16),_1),add(c,_14)),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,add(add(_15,_16),_1)),c,c), -product(c,c,d), -product(add(add(add(_15,_16),_1),c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_inverse(add(add(add(_15,_16),_1),c)),add(add(_15,_16),_1)),c,c), -product(c,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(add(add(d,_16),_1),c),c,c), -product(_14,c,d), -product(add(add(add(d,_16),_1),add(c,_14)),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,add(add(additive_identity,_16),_1)),c,c), -product(c,c,d), -product(add(add(add(additive_identity,_16),_1),c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_inverse(add(add(add(_19,_16),_1),c)),add(add(_19,_16),_1)),c,c), -product(c,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),_3,_3), -sum(c,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,add(c,c),add(c,c)), -sum(_1,add(_1,c),additive_identity), -sum(c,add(_1,c),add(_1,c)), -product(add(c,c),add(c,c),add(_1,c)), -product(add(c,c),c,c), -sum(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),c,_3), -sum(d,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),c,_3), -sum(d,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_15,_1,c), -product(c,_1,d), -product(add(_15,add(additive_identity,c)),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(add(additive_identity,_15)),_1,c), -product(_15,_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(c,_1,d), -product(add(c,add(additive_identity,c)),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(add(additive_identity,_18)),_1,c), -product(_18,_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(c,add(additive_inverse(c),additive_identity)),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(additive_identity),additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(c,add(additive_inverse(c),additive_identity)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(additive_identity),additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),_3,_3), -sum(c,additive_identity,_1), -product(add(_3,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,add(c,c),add(c,c)), -sum(_1,add(_1,c),additive_identity), -sum(c,add(_1,c),add(_1,c)), -product(add(c,c),add(c,c),add(_1,c)), -product(add(c,c),c,c), -sum(c,additive_identity,_1), -product(add(c,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),c,_3), -sum(d,additive_identity,_1), -product(add(_3,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(c),additive_identity),additive_identity,additive_identity), -product(c,additive_identity,add(additive_inverse(c),additive_identity))]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,add(_3,c),add(_3,c)), -sum(_1,add(_1,c),additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(add(_3,c),add(_3,c),add(_1,c)), -product(add(_3,c),c,_3), -sum(d,additive_identity,_1), -product(add(_3,c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(c),additive_identity),additive_identity,additive_identity), -product(c,additive_identity,add(additive_inverse(c),additive_identity))]]
Ag0 -> Ag1 : Send Clauses : [[-product(_15,_1,c), -product(c,_1,d), -product(add(additive_identity,add(_15,c)),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(_15,_1,c), -product(c,_1,d), -product(add(additive_identity,add(_15,c)),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),_3,_3), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(c),add(c,additive_identity)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(c),add(c,additive_identity)),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(add(c,c),_1,additive_identity), -sum(_3,_19,_1), -product(_1,add(c,c),_19), -product(_1,c,_3), -product(_19,c,add(c,c))]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(add(c,c),_1,additive_identity), -sum(_3,_19,_1), -product(_1,add(c,c),_19), -product(_1,c,_3), -product(_19,c,add(c,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(_19,_3,_19), -product(_19,add(_1,c),_3), -product(_19,_19,_19), -product(_3,_19,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_19,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(_19,_3,_19), -product(_19,add(_1,c),_3), -product(_19,_19,_19), -product(_3,_19,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,add(_1,c)), -product(add(_1,c),_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -sum(c,_3,c), -product(c,add(_1,c),_3), -product(c,_1,c), -product(c,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -sum(c,_3,c), -product(c,add(_1,c),_3), -product(c,_1,c), -product(c,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(c,add(additive_identity,additive_identity)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(c,add(additive_identity,additive_identity)),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(c,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -sum(d,_3,d), -product(d,add(_1,c),_3), -product(d,c,d), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(c,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -sum(d,_3,d), -product(d,add(_1,c),_3), -product(d,c,d), -product(d,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,add(c,additive_identity)),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,add(c,additive_identity)),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,_19), -product(add(_1,c),_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,_19,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,_19), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(c,c,c), -product(c,add(c,c),c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(c,c,c), -product(c,add(c,c),c), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(_1,c,c), -product(c,add(c,c),c), -product(c,c,_1), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,add(c,c),add(c,c)), -sum(_3,_3,additive_identity), -sum(_1,c,_3), -product(_3,add(c,c),c), -product(_3,c,_1), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,_15),_1),additive_inverse(add(add(_14,_15),_1))),c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,add(add(_14,_15),_1)),c,c), -product(additive_identity,c,d), -product(add(add(_14,_15),_1),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_inverse(add(add(_14,_15),_1)),add(add(_14,_15),_1)),c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,add(d,c),add(d,c)), -sum(d,d,additive_identity), -sum(d,d,d), -product(d,add(d,c),d), -product(d,c,d)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(c,c),_1),additive_inverse(add(add(c,c),_1))),c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,add(d,c),add(d,c)), -sum(d,d,additive_identity), -sum(d,d,d), -product(d,add(d,c),d), -product(d,c,d)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,add(add(d,d),_1)),c,c), -product(additive_identity,c,d), -product(add(add(d,d),_1),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,add(d,c),add(d,c)), -sum(d,d,additive_identity), -sum(_1,d,d), -product(d,add(d,c),d), -product(d,c,_1), -product(_1,c,_1)]]
Ag1 <------  Send Clauses : [[-product(add(additive_inverse(add(add(additive_identity,d),_1)),add(add(additive_identity,d),_1)),c,c), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,add(d,c),add(d,c)), -sum(_3,_3,additive_identity), -sum(_1,d,_3), -product(_3,add(d,c),d), -product(_3,c,_1), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,d),add(c,d),c), -product(additive_identity,add(c,d),d), -product(c,add(c,d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(c,_19,_1), -product(_1,add(_3,c),_19), -product(_1,_3,c), -product(_19,_3,_19)]]
Ag1 <------  Send Clauses : [[-product(add(c,d),add(c,d),c), -product(additive_identity,add(c,d),d), -product(c,add(c,d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(c,_19,_1), -product(_1,add(_3,c),_19), -product(_1,_3,c), -product(_19,_3,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(d,c),add(d,c),c), -product(additive_identity,add(d,c),d), -product(c,add(d,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,_19,_1), -product(_1,add(_3,c),_19), -product(_1,c,d), -product(_19,c,_19)]]
Ag1 <------  Send Clauses : [[-product(add(d,c),add(d,c),c), -product(additive_identity,add(d,c),d), -product(c,add(d,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,_19,_1), -product(_1,add(_3,c),_19), -product(_1,c,d), -product(_19,c,_19)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(d,d),add(d,d),c), -product(additive_identity,add(d,d),d), -product(d,add(d,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(d,d),add(d,d),c), -product(additive_identity,add(d,d),d), -product(additive_identity,add(d,d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(d,d),add(d,d),c), -product(additive_identity,add(d,d),d), -product(d,add(d,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(d,add(d,add(d,_20))),_1,c), -product(additive_identity,_1,d), -product(add(d,add(d,_20)),_1,additive_identity), -product(c,_1,add(d,add(d,_20)))]]
Ag1 <------  Send Clauses : [[-product(add(d,d),add(d,d),c), -product(additive_identity,add(d,d),d), -product(additive_identity,add(d,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,d),add(additive_identity,d),c), -product(additive_identity,add(additive_identity,d),d), -product(additive_identity,add(additive_identity,d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_19,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -product(_19,_3,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(d,add(d,add(additive_identity,_20))),_1,c), -product(additive_identity,_1,d), -product(add(d,add(additive_identity,_20)),_1,additive_identity), -product(c,_1,add(d,add(additive_identity,_20)))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_19,additive_identity), -sum(add(_1,c),add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -product(_19,_3,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_19,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,d),add(additive_identity,d),c), -product(additive_identity,add(additive_identity,d),d), -product(additive_identity,add(additive_identity,d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_19,_19,additive_identity), -sum(add(_1,c),additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_18,d),d),d),_1,c), -product(additive_identity,_1,d), -product(add(add(_18,d),d),_1,additive_identity), -product(c,_1,add(add(_18,d),d))]]
Ag1 <------  Send Clauses : [[-product(add(add(add(_18,_18),d),d),_1,c), -product(additive_identity,_1,d), -product(add(add(_18,_18),d),_1,additive_identity), -product(c,_1,add(add(_18,_18),d))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,_3,_19), -product(_19,add(_1,c),_3), -product(_19,_1,_3), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,_3,_19), -product(_19,add(_1,c),_3), -product(_19,_1,_3), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_19,_1,additive_identity), -sum(_3,_3,_1), -product(_1,add(c,c),_3), -product(_1,c,_3), -sum(d,c,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_19,_1,additive_identity), -sum(_3,_3,_1), -product(_1,add(c,c),_3), -product(_1,c,_3), -sum(d,c,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_19,_3,_19), -product(_19,add(_1,c),_3), -product(_19,_1,_19), -sum(_19,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_19,_3,_19), -product(_19,add(_1,c),_3), -product(_19,_1,_19), -sum(_19,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),_3,_19), -product(_19,add(_1,c),_3), -product(_19,_1,add(_1,c)), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),_3,_19), -product(_19,add(_1,c),_3), -product(_19,_1,add(_1,c)), -sum(additive_identity,c,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_19,_1,additive_identity), -sum(_3,_3,_1), -product(_1,add(c,c),_3), -product(_1,c,_3), -sum(c,d,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_19,_1,additive_identity), -sum(_3,_3,_1), -product(_1,add(c,c),_3), -product(_1,c,_3), -sum(c,d,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,_3,_19), -product(_19,add(_1,c),_3), -product(_19,c,_3), -sum(d,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,_3,_19), -product(_19,add(_1,c),_3), -product(_19,c,_3), -sum(d,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_19,_3,_19), -product(_19,add(_1,c),_3), -product(_19,c,_19), -sum(_19,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_19,_3,_19), -product(_19,add(_1,c),_3), -product(_19,c,_19), -sum(_19,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),_3,_19), -product(_19,add(_1,c),_3), -product(_19,c,add(_1,c)), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(add(_1,c),_3,_19), -product(_19,add(_1,c),_3), -product(_19,c,add(_1,c)), -sum(additive_identity,d,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -product(_19,_1,_3), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -product(_19,_1,_3), -sum(c,additive_identity,_3), -product(add(_1,c),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -product(_19,c,_3), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_19,additive_identity), -sum(_3,add(_1,c),_19), -product(_19,add(_1,c),add(_1,c)), -product(_19,c,_3), -sum(d,additive_identity,_3), -product(add(_1,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(_19,additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,_19), -sum(_19,_19,add(_1,c)), -product(additive_identity,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(_19,additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,_19), -sum(_19,_19,add(_1,c)), -product(additive_identity,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(additive_identity,additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,additive_identity), -sum(_19,_19,add(_1,c)), -product(additive_identity,_3,_19)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(additive_identity,additive_identity,_19), -product(_19,add(_1,c),additive_identity), -product(_19,_3,additive_identity), -sum(_19,_19,add(_1,c)), -product(additive_identity,_3,_19)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(additive_identity,_19,_19), -product(_19,add(_1,c),_19), -product(_19,_3,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_19,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),_19,additive_identity), -sum(additive_identity,_19,_19), -product(_19,add(_1,c),_19), -product(_19,_3,additive_identity), -sum(_3,add(_1,c),add(_1,c)), -product(_19,_3,add(_1,c)), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(add(c,c),_25,additive_identity), -sum(_3,add(_1,c),_25), -product(_1,add(c,c),add(_1,c)), -product(_1,c,_3), -sum(_3,additive_identity,_1), -product(additive_identity,c,add(c,c))]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(add(c,c),_25,additive_identity), -sum(_3,add(_1,c),_25), -product(_1,add(c,c),add(_1,c)), -product(_1,c,_3), -sum(_3,additive_identity,_1), -product(additive_identity,c,add(c,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,_3), -sum(_25,_25,_25), -product(_25,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,_3), -sum(_25,_25,_25), -product(_25,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_25,add(_1,c),additive_identity), -product(_25,add(_1,c),add(_1,c)), -sum(_25,_25,_25), -product(_25,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_25,add(_1,c),additive_identity), -product(_25,add(_1,c),add(_1,c)), -sum(_25,_25,_25), -product(_25,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,add(_1,c),_25), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,add(_1,c),_25), -product(add(_1,c),_3,add(_1,c)), -product(_3,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(add(d,c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,c,c), -product(additive_identity,c,d), -product(add(d,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -sum(_3,add(_1,c),c), -product(_25,add(_1,c),add(_1,c)), -product(_25,_1,_3), -sum(additive_identity,_3,_25), -product(additive_identity,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(additive_identity,c,additive_identity), -sum(_3,add(_1,c),c), -product(_25,add(_1,c),add(_1,c)), -product(_25,_1,_3), -sum(additive_identity,_3,_25), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -sum(_3,add(_1,c),d), -product(_25,add(_1,c),add(_1,c)), -product(_25,c,_3), -sum(additive_identity,_3,_25), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(additive_identity,d,additive_identity), -sum(_3,add(_1,c),d), -product(_25,add(_1,c),add(_1,c)), -product(_25,c,_3), -sum(additive_identity,_3,_25), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,add(_1,c)), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,add(_1,c)), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_18,_1,c), -product(additive_identity,_1,d), -product(add(d,_18),_1,additive_identity), -product(c,_1,_18)]]
Ag1 <------  Send Clauses : [[-product(d,_1,c), -product(additive_identity,_1,d), -product(add(d,d),_1,additive_identity), -product(c,_1,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,additive_identity,_25), -product(additive_identity,_3,add(_1,c)), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(additive_identity,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,additive_identity,_25), -product(additive_identity,_3,add(_1,c)), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,add(_1,c),c), -product(_25,_1,c), -sum(_3,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(c,c),add(c,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,add(c,c),c), -product(_25,c,c), -sum(_3,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_25,additive_identity), -sum(d,c,_25), -product(_1,add(c,c),c), -product(_1,c,d), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_25,additive_identity), -sum(d,c,_25), -product(_1,add(c,c),c), -product(_1,c,d), -sum(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),c,_3), -product(_25,add(_1,c),c), -product(_25,_1,add(_1,c)), -sum(_25,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),c,_3), -product(_25,add(_1,c),c), -product(_25,_1,add(_1,c)), -sum(_25,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),c,_3), -product(_25,add(_1,c),c), -product(_25,_1,add(_1,c)), -sum(additive_identity,_3,_25), -product(additive_identity,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),c,_3), -product(_25,add(_1,c),c), -product(_25,_1,add(_1,c)), -sum(additive_identity,_3,_25), -product(additive_identity,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_25,additive_identity), -sum(c,d,_25), -product(_1,add(c,c),d), -product(_1,c,c), -sum(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_25,additive_identity), -sum(c,d,_25), -product(_1,add(c,c),d), -product(_1,c,c), -sum(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,add(_1,c),d), -product(_25,c,d), -sum(_3,_3,_25)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,add(_1,c),d), -product(_25,c,d), -sum(_3,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),d,_3), -product(_25,add(_1,c),d), -product(_25,c,add(_1,c)), -sum(_25,_3,_25)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),d,_3), -product(_25,add(_1,c),d), -product(_25,c,add(_1,c)), -sum(_25,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),d,_3), -product(_25,add(_1,c),d), -product(_25,c,add(_1,c)), -sum(additive_identity,_3,_25), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),d,_3), -product(_25,add(_1,c),d), -product(_25,c,add(_1,c)), -sum(additive_identity,_3,_25), -product(additive_identity,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,add(_1,c),c), -product(_25,_1,c), -sum(_3,_25,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,add(_1,c),c), -product(_25,_1,c), -sum(_3,_25,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,add(_1,c),d), -product(_25,c,d), -sum(_3,_25,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,add(_1,c),d), -product(_25,c,d), -sum(_3,_25,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,additive_identity), -sum(_25,_25,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,additive_identity), -sum(_25,_25,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,additive_identity), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,additive_identity), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -product(_25,_1,c), -sum(_3,additive_identity,_25), -product(additive_identity,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -product(_25,_1,c), -sum(_3,additive_identity,_25), -product(additive_identity,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -product(_25,c,d), -sum(_3,additive_identity,_25), -product(additive_identity,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,add(_1,c),_3), -product(_25,add(_1,c),add(_1,c)), -product(_25,c,d), -sum(_3,additive_identity,_25), -product(additive_identity,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_25,_3,_25), -product(_3,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_25,_3,_25), -product(_3,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,additive_identity), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -product(_25,_3,additive_identity), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,add(_1,c),_25), -product(add(_1,c),_3,_25), -product(_3,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,add(_1,c),_25), -product(add(_1,c),_3,_25), -product(_3,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(c,_1,additive_identity), -sum(c,add(c,c),_1), -product(c,add(c,c),add(c,c)), -product(c,c,c), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(c,_1,additive_identity), -sum(c,add(c,c),_1), -product(c,add(c,c),add(c,c)), -product(c,c,c), -sum(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(c,_1,additive_identity), -sum(c,add(c,c),_1), -product(c,add(c,c),add(c,c)), -product(c,c,c), -sum(additive_identity,c,c), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,add(c,c),add(c,c)), -sum(_3,_1,additive_identity), -sum(c,add(_3,c),_1), -product(_3,add(c,c),add(_3,c)), -product(_3,c,c), -sum(additive_identity,c,_3), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,add(d,c),add(d,c)), -sum(d,_1,additive_identity), -sum(d,add(d,c),_1), -product(d,add(d,c),add(d,c)), -product(d,c,d), -sum(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,add(d,c),add(d,c)), -sum(d,_1,additive_identity), -sum(d,add(d,c),_1), -product(d,add(d,c),add(d,c)), -product(d,c,d), -sum(d,d,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,add(d,c),add(d,c)), -sum(d,_1,additive_identity), -sum(d,add(d,c),_1), -product(d,add(d,c),add(d,c)), -product(d,c,d), -sum(additive_identity,d,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,add(d,c),add(d,c)), -sum(_3,_1,additive_identity), -sum(d,add(_3,c),_1), -product(_3,add(d,c),add(_3,c)), -product(_3,c,d), -sum(additive_identity,d,_3), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,_15),_1),c),c,c), -product(additive_inverse(c),c,d), -product(add(add(add(_14,_15),_1),additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,_15),_1),c),c,c), -product(additive_inverse(c),c,d), -product(add(add(_14,_15),_1),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_inverse(additive_identity),add(add(_14,_15),_1)),c,c), -product(additive_inverse(add(add(_14,_15),_1)),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(_18,_15),_1),c),c,c), -product(additive_inverse(c),c,d), -product(add(add(add(_18,_15),_1),additive_identity),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(additive_identity,_15),_1),c),c,c), -product(additive_inverse(c),c,d), -product(add(add(additive_identity,_15),_1),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_inverse(additive_identity),add(add(additive_identity,_15),_1)),c,c), -product(additive_inverse(add(add(additive_identity,_15),_1)),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_25,additive_identity), -sum(_3,add(_1,c),_25), -product(_1,add(_3,c),add(_1,c)), -product(_1,_3,_3), -sum(c,additive_identity,_1), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_25,additive_identity), -sum(_3,add(_1,c),_25), -product(_1,add(_3,c),add(_1,c)), -product(_1,_3,_3), -sum(c,additive_identity,_1), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_25,additive_identity), -sum(_3,add(_1,c),_25), -product(_1,add(_3,c),add(_1,c)), -product(_1,c,_3), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_25,additive_identity), -sum(_3,add(_1,c),_25), -product(_1,add(_3,c),add(_1,c)), -product(_1,c,_3), -sum(d,additive_identity,_1), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_25,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,_3,_25), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_25,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,_3,_25), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_25,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,_25,_25), -product(_25,_3,_25), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_25,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_3,additive_identity), -sum(_3,_25,_25), -product(_25,_3,_25), -product(_3,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_14,_1,c), -product(additive_inverse(additive_identity),_1,d), -product(add(_14,additive_identity),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(_14,_1,c), -product(additive_inverse(additive_identity),_1,d), -product(_14,_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(c,_1,c), -product(additive_inverse(additive_identity),_1,d), -product(add(c,additive_identity),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(_17,_1,c), -product(additive_inverse(additive_identity),_1,d), -product(_17,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_3,_3,_25), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_3,_3,_25), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_1,add(c,c),additive_identity), -product(_1,c,add(_1,c)), -sum(_3,_3,_1), -sum(d,c,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_1,add(c,c),additive_identity), -product(_1,c,add(_1,c)), -sum(_3,_3,_1), -sum(d,c,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_25,_3,_25), -sum(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_25,_3,_25), -sum(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_1,_3,_25), -sum(_3,c,_3), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_1,_3,_25), -sum(_3,c,_3), -product(_1,_1,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(additive_identity)),additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(additive_identity)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(additive_inverse(additive_identity))),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_1,add(c,c),additive_identity), -product(_1,c,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_25)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(additive_identity)),additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(_25,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_1,add(c,c),additive_identity), -product(_1,c,add(_1,c)), -sum(_3,_3,_1), -sum(c,d,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_3,_3,_25), -sum(d,d,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(additive_identity)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_3,_3,_25), -sum(d,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_25,_3,_25), -sum(additive_identity,d,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(additive_inverse(additive_identity))),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_25,_3,_25), -sum(additive_identity,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(c,_3,_25), -sum(_3,d,_3), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(c,_3,_25), -sum(_3,d,_3), -product(c,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(c)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_inverse(c)),additive_identity,d), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_3,_25,_25), -sum(c,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_3,_25,_25), -sum(c,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_3,_25,_25), -sum(d,additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_3,_25,_25), -sum(d,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(_25,_25,_25), -sum(_25,_25,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(_25,_25,_25), -sum(_25,_25,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(add(_1,c),_25,_25), -sum(add(_1,c),_25,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(add(_1,c),_25,_25), -sum(add(_1,c),_25,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,add(_1,c),additive_identity), -sum(add(_1,c),_25,_25), -sum(_3,_25,_3), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,add(_1,c),additive_identity), -sum(add(_1,c),_25,_25), -sum(_3,_25,_3), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_3,_3,_25), -sum(c,add(_1,c),_3), -product(_3,_1,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,_1,additive_identity), -sum(_3,_3,_25), -sum(c,add(_1,c),_3), -product(_3,_1,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_3,_3,_25), -sum(d,add(_1,c),_3), -product(_3,c,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,c,additive_identity), -sum(_3,_3,_25), -sum(d,add(_1,c),_3), -product(_3,c,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(_25,add(_1,c),_25), -sum(_25,add(_1,c),add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(_25,add(_1,c),_25), -sum(_25,add(_1,c),add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,add(_1,c),additive_identity), -sum(_25,_3,_25), -sum(_25,add(_1,c),_3), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_25,add(_1,c)), -product(_25,add(_1,c),_25), -product(_25,add(_1,c),additive_identity), -sum(_25,_3,_25), -sum(_25,add(_1,c),_3), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(add(_1,c),add(_1,c),_25), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(add(_1,c),add(_1,c),_25), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(add(_1,c),add(_1,c),_25), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_25,_3,additive_identity), -product(_25,add(_1,c),_3), -product(_25,_3,_25), -sum(add(_1,c),add(_1,c),_25), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),_3,add(_1,c)), -product(add(_1,c),_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_identity),additive_identity,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_identity),additive_identity,d), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_identity),additive_identity,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(additive_identity),additive_identity,d), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,_1,c), -product(c,add(c,c),_1), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,_1,c), -product(c,add(c,c),_1), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(_1,c,additive_identity), -sum(add(c,c),additive_identity,c), -product(c,add(c,c),additive_identity), -product(c,c,add(c,c)), -product(add(c,c),c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,add(c,c),add(c,c)), -sum(_1,c,additive_identity), -sum(add(_3,c),additive_identity,c), -product(_3,add(c,c),additive_identity), -product(_3,c,add(_3,c)), -product(add(_3,c),c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(c,add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(c,_1,additive_identity), -sum(add(add(_1,c),c),add(add(add(_1,c),c),c),_1), -product(add(_1,c),add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -product(add(_1,c),c,add(add(_1,c),c))]]
Ag0 <------  Send Clauses : [[-product(add(add(add(c,c),c),c),add(add(c,c),c),c), -product(add(add(add(c,c),c),c),c,d), -equalish(add(c,c),add(add(add(c,c),c),c)), -sum(c,add(add(add(c,c),c),c),add(add(add(c,c),c),c)), -sum(c,c,additive_identity), -sum(add(add(c,c),c),add(add(add(c,c),c),c),c), -product(add(c,c),add(add(add(c,c),c),c),add(add(add(c,c),c),c)), -product(add(c,c),c,add(add(c,c),c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(add(add(_1,c),c),add(c,c)), -sum(c,add(c,c),add(c,c)), -sum(d,add(_1,c),additive_identity), -sum(_1,add(c,c),add(_1,c)), -product(add(add(_1,c),c),add(c,c),add(c,c)), -product(add(add(_1,c),c),c,_1)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(add(add(_1,c),c),add(c,c)), -sum(c,add(c,c),add(c,c)), -sum(d,add(_1,c),additive_identity), -sum(_1,add(c,c),add(_1,c)), -product(add(add(_1,c),c),add(c,c),add(c,c)), -product(add(add(_1,c),c),c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(c),additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(c,add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),additive_identity), -sum(add(add(_1,c),c),additive_identity,add(add(_1,c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),additive_identity), -product(add(_1,c),c,add(add(_1,c),c)), -product(additive_identity,add(add(_1,c),c),_1)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_inverse(c),additive_identity,d), -product(add(additive_identity,additive_identity),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -sum(c,add(add(_3,c),c),add(add(_3,c),c)), -sum(_1,add(_3,c),additive_identity), -sum(add(_3,c),additive_identity,add(_3,c)), -product(_3,add(add(_3,c),c),additive_identity), -product(_3,c,add(_3,c)), -product(additive_identity,add(_3,c),_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,c,add(_1,c)), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,c,add(_1,c)), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(d,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(c,c),add(_1,c)), -product(_1,c,_3), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(d,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(c,c),add(_1,c)), -product(_1,c,_3), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(_3,c),add(_1,c)), -product(_1,c,_3), -product(_1,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(_3,c),add(_1,c)), -product(_1,c,_3), -product(_1,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,c,additive_identity), -product(_20,_3,c), -product(c,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,c,additive_identity), -product(_20,_3,c), -product(c,_1,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,additive_identity),additive_identity),additive_identity),_1,c), -product(c,_1,d), -product(add(add(add(_14,additive_identity),additive_identity),c),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(_14,additive_identity),additive_identity),additive_identity),_1,c), -product(c,_1,d), -product(add(add(add(_14,additive_identity),additive_identity),c),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,additive_identity),additive_identity),additive_identity),_1,c), -product(additive_inverse(add(add(_14,additive_identity),additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,additive_identity),add(add(_14,additive_identity),additive_identity),c), -product(_1,add(add(_14,additive_identity),additive_identity),d), -product(_1,add(add(_14,additive_identity),additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_inverse(add(add(_14,additive_identity),additive_identity)),additive_identity),_1,c), -product(add(add(_14,additive_identity),additive_identity),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,c,c), -product(d,c,d), -equalish(d,d), -sum(d,add(c,c),add(c,c)), -sum(c,d,additive_identity), -sum(d,_1,d), -product(d,add(c,c),_1), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(c,additive_identity),additive_identity),additive_identity),_1,c), -product(additive_inverse(add(add(c,additive_identity),additive_identity)),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,c,c), -product(d,c,d), -equalish(d,d), -sum(d,add(c,c),add(c,c)), -sum(c,d,additive_identity), -sum(d,_1,d), -product(d,add(c,c),_1), -product(d,d,d)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,additive_identity),add(add(d,additive_identity),additive_identity),c), -product(_1,add(add(d,additive_identity),additive_identity),d), -product(_1,add(add(d,additive_identity),additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(d,add(d,c),add(d,c)), -sum(_1,d,additive_identity), -sum(add(d,c),additive_identity,d), -product(d,add(d,c),additive_identity), -product(d,d,add(d,c)), -product(add(d,c),c,_1)]]
Ag1 <------  Send Clauses : [[-product(add(additive_inverse(add(add(additive_identity,additive_identity),additive_identity)),additive_identity),_1,c), -product(add(add(additive_identity,additive_identity),additive_identity),_1,d), -product(additive_identity,_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(d,add(d,c),add(d,c)), -sum(_1,d,additive_identity), -sum(add(_3,c),additive_identity,d), -product(_3,add(d,c),additive_identity), -product(_3,d,add(_3,c)), -product(add(_3,c),c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(add(add(_1,c),c),add(c,c)), -sum(d,add(c,c),add(c,c)), -sum(c,add(_1,c),additive_identity), -sum(_1,add(c,c),add(_1,c)), -product(add(add(_1,c),c),add(c,c),add(c,c)), -product(add(add(_1,c),c),d,_1)]]
Ag0 <------  Send Clauses : [[-product(add(c,c),c,c), -product(add(c,c),c,d), -equalish(add(add(_1,c),c),add(c,c)), -sum(d,add(c,c),add(c,c)), -sum(c,add(_1,c),additive_identity), -sum(_1,add(c,c),add(_1,c)), -product(add(add(_1,c),c),add(c,c),add(c,c)), -product(add(add(_1,c),c),d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(d,add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(d,_1,additive_identity), -sum(add(add(_1,c),c),add(add(add(_1,c),c),c),_1), -product(add(_1,c),add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -product(add(_1,c),d,add(add(_1,c),c))]]
Ag0 <------  Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(d,add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(d,_1,additive_identity), -sum(add(add(_1,c),c),add(add(add(_1,c),c),c),_1), -product(add(_1,c),add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -product(add(_1,c),d,add(add(_1,c),c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(d,add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),additive_identity), -sum(add(add(_1,c),c),additive_identity,add(add(_1,c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),additive_identity), -product(add(_1,c),d,add(add(_1,c),c)), -product(additive_identity,c,_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -sum(d,add(add(_3,c),c),add(add(_3,c),c)), -sum(_1,add(_3,c),additive_identity), -sum(add(_3,c),additive_identity,add(_3,c)), -product(_3,add(add(_3,c),c),additive_identity), -product(_3,d,add(_3,c)), -product(additive_identity,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,add(c,c),add(c,c)), -sum(c,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(c,c),add(_1,c)), -product(_1,d,_3), -product(_1,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(d,add(c,c),add(c,c)), -sum(c,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(c,c),add(_1,c)), -product(_1,d,_3), -product(_1,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(d,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,d,add(_1,c)), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(d,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_20,add(_1,c),additive_identity), -product(_20,d,add(_1,c)), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,add(_3,c),add(_3,c)), -sum(_1,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(_3,c),add(_1,c)), -product(_1,d,_3), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(d,add(_3,c),add(_3,c)), -sum(_1,_20,additive_identity), -sum(_3,add(_1,c),_20), -product(_1,add(_3,c),add(_1,c)), -product(_1,d,_3), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(d,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,d,additive_identity), -product(_20,_3,d), -product(d,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(d,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,d,additive_identity), -product(_20,_3,d), -product(d,c,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_inverse(additive_identity),additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(additive_identity))]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(c,additive_identity,d), -product(additive_inverse(additive_identity),additive_identity,additive_identity), -product(additive_identity,additive_identity,additive_inverse(additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(_1,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_1,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(_1,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(c,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(c,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(add(_1,c),additive_identity,add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(_1,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_1,_1), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(_1,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,_1,_1), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(c,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,c,c), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(c,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c)), -product(_20,c,c), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_20,additive_identity), -product(_20,add(_1,c),_20), -product(_20,_3,_3), -product(_20,_20,_3), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_3,_20,additive_identity), -product(_20,add(_1,c),_20), -product(_20,_3,_3), -product(_20,_20,_3), -product(_3,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_17,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,add(_1,c),_17), -product(_17,_17,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_20,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_20,additive_identity), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -product(_20,_20,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -product(_20,_20,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_20,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),_20,_3), -product(add(_1,c),add(_1,c),_20), -product(add(_1,c),_20,add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(_20,add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),_20,_3), -product(add(_1,c),add(_1,c),_20), -product(add(_1,c),_20,add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(_20,_20,_3), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(_20,_20,_3), -product(_3,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),additive_inverse(c)),c,c), -product(c,c,d), -product(add(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),additive_inverse(c)),c,c), -product(c,c,d), -product(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),additive_inverse(c)),c,c), -product(c,c,d), -product(add(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_inverse(additive_identity),additive_inverse(add(add(_14,additive_inverse(_13)),additive_inverse(_1)))),c,c), -product(add(add(_14,additive_inverse(_13)),additive_inverse(_1)),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(d,additive_inverse(additive_identity)),additive_inverse(_1)),additive_inverse(c)),c,c), -product(c,c,d), -product(add(add(d,additive_inverse(additive_identity)),additive_inverse(_1)),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_inverse(additive_identity),additive_inverse(add(add(additive_identity,additive_inverse(_13)),additive_inverse(_1)))),c,c), -product(add(add(additive_identity,additive_inverse(_13)),additive_inverse(_1)),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -product(_3,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -product(_3,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(_3,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -product(_20,_3,_3), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_20), -product(_3,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_20), -product(_3,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(_3,add(_1,c),_3), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -product(add(_1,c),_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -product(add(_1,c),_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -product(add(_1,c),c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(additive_identity,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,_3,additive_identity), -product(add(_1,c),c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -product(add(_1,c),_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,additive_identity), -product(add(_1,c),_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_23,additive_identity), -sum(_3,add(_1,c),_23), -product(_1,add(_1,c),add(_1,c)), -product(_1,_3,_3), -product(_1,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,c,additive_identity), -sum(_3,add(_1,c),c), -product(_1,add(_1,c),add(_1,c)), -product(_1,_3,_3), -product(_1,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_23,additive_identity), -sum(_3,add(_1,c),_23), -product(c,add(_1,c),add(_1,c)), -product(c,_3,_3), -product(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_23,additive_identity), -sum(_3,add(_1,c),_23), -product(c,add(_1,c),add(_1,c)), -product(c,_3,_3), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_23,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_23,_3,additive_identity), -product(_23,add(_1,c),_3), -product(_23,_3,_23), -product(_23,_23,_3), -product(_3,_23,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(_20,_20,_3), -product(_3,_20,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(additive_inverse(additive_identity)),additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(additive_inverse(additive_identity)),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(additive_inverse(additive_identity)),additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,_1,_3), -product(_20,_3,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(additive_inverse(additive_inverse(additive_identity)),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,_1,_3), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,c,_3), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,c,_3), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_20), -product(_3,add(_1,c),_3), -product(_20,_3,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,add(_1,c),additive_identity), -product(_20,add(_1,c),add(_1,c)), -product(_20,_3,_20), -product(_3,add(_1,c),_3), -product(_20,_3,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,_3,_3), -product(_20,_3,_20)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_20,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,_3,_3), -product(_20,_3,_20)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,add(_1,c),_3), -product(_20,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_20,add(_1,c)), -product(_20,add(_1,c),_20), -product(_20,_3,additive_identity), -product(_3,add(_1,c),_3), -product(_20,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_20,_3,additive_identity), -product(_20,add(_1,c),_3), -product(_20,_3,_20), -product(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),additive_identity), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,add(_1,c),add(_1,c)), -sum(d,_1,additive_identity), -sum(c,_1,_1), -product(c,add(_1,c),_1), -product(c,_1,c)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,add(_1,c),add(_1,c)), -sum(d,_1,additive_identity), -sum(c,_1,_1), -product(c,add(_1,c),_1), -product(c,_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,add(_1,c),add(_1,c)), -sum(_1,c,additive_identity), -sum(_1,add(_1,c),c), -product(c,add(_1,c),add(_1,c)), -product(c,_1,_1), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_20,d),d),d),_1,c), -product(additive_identity,_1,d), -product(add(add(add(_20,d),d),additive_identity),_1,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(_1,add(_1,c),add(_1,c)), -sum(_1,c,additive_identity), -sum(_1,add(_1,c),c), -product(c,add(_1,c),add(_1,c)), -product(c,_1,_1), -product(_1,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(add(add(_20,d),d),d),_1,c), -product(additive_identity,_1,d), -product(add(add(_20,d),d),_1,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_inverse(additive_identity),d),add(add(_20,d),d),c), -product(additive_identity,add(add(_20,d),d),d), -product(additive_identity,add(add(_20,d),d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(d,d),d),d),_1,c), -product(additive_identity,_1,d), -product(add(add(add(d,d),d),additive_identity),_1,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(add(add(additive_identity,d),d),d),_1,c), -product(additive_identity,_1,d), -product(add(add(additive_identity,d),d),_1,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(c,d,c), -product(d,add(c,c),d), -product(d,c,c)]]
Ag1 <------  Send Clauses : [[-product(add(additive_inverse(additive_identity),d),add(add(additive_identity,d),d),c), -product(additive_identity,add(add(additive_identity,d),d),d), -product(additive_identity,add(add(additive_identity,d),d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(c,d,c), -product(d,add(c,c),d), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(d,c,c), -product(d,add(c,c),c), -product(d,c,d)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(d,c,c), -product(d,add(c,c),c), -product(d,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(c,d,additive_identity), -sum(c,add(c,c),d), -product(d,add(c,c),add(c,c)), -product(d,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(_3,d,additive_identity), -sum(c,add(_3,c),d), -product(d,add(c,c),add(_3,c)), -product(d,c,c), -product(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(_1,_1), -sum(_1,add(_1,c),add(_1,c)), -sum(_1,_1,additive_identity), -sum(_1,add(_1,c),_1), -product(_1,add(_1,c),add(_1,c)), -product(_1,_1,_1), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(_3,_3), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_3,additive_identity), -sum(_3,add(_3,c),_3), -product(_3,add(_3,c),add(_3,c)), -product(_3,_3,_3), -product(_3,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(add(add(_1,c),c),add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),additive_identity), -sum(add(add(_1,c),c),add(_1,c),add(add(_1,c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),add(_1,c)), -product(add(_1,c),add(add(_1,c),c),add(add(_1,c),c)), -product(add(_1,c),c,_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -sum(add(_3,c),add(add(_3,c),c),add(add(_3,c),c)), -sum(_1,add(_3,c),additive_identity), -sum(add(_3,c),_3,add(_3,c)), -product(_3,add(add(_3,c),c),_3), -product(_3,add(_3,c),add(_3,c)), -product(_3,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(d),additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,additive_identity,c), -product(additive_identity,additive_identity,d), -product(add(additive_inverse(d),additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(c,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(c,c),add(_1,c)), -product(_1,c,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(c,c),add(c,c)), -sum(c,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(c,c),add(_1,c)), -product(_1,c,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_22,add(_1,c),additive_identity), -product(_22,_1,add(_1,c)), -product(_3,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(_22,add(_1,c),additive_identity), -product(_22,_1,add(_1,c)), -product(_3,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(_3,c),add(_1,c)), -product(_1,_3,_3), -product(additive_identity,c,_1)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,add(_3,c),add(_3,c)), -sum(_1,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(_3,c),add(_1,c)), -product(_1,_3,_3), -product(additive_identity,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_1,additive_identity), -product(_1,_3,_22), -product(_1,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_1,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_1,additive_identity), -product(_1,_3,_22), -product(_1,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,add(d,c),add(d,c)), -sum(c,_1,additive_identity), -sum(_1,c,_1), -product(c,add(d,c),c), -product(c,c,_1)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(c,d), -sum(c,add(d,c),add(d,c)), -sum(c,_1,additive_identity), -sum(_1,c,_1), -product(c,add(d,c),c), -product(c,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_1,_1,c), -product(_1,c,d), -equalish(c,_1), -sum(c,add(_1,c),add(_1,c)), -sum(_1,c,additive_identity), -sum(_1,add(_1,c),c), -product(c,add(_1,c),add(_1,c)), -product(c,c,_1), -product(_1,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_3,c),add(_3,c)), -sum(_3,c,additive_identity), -sum(_3,add(_3,c),c), -product(c,add(_3,c),add(_3,c)), -product(c,c,_3), -product(_3,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,add(d,c),add(d,c)), -sum(c,c,additive_identity), -sum(c,d,c), -product(d,add(d,c),d), -product(d,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,d,c), -product(c,c,d), -equalish(d,c), -sum(c,add(d,c),add(d,c)), -sum(c,c,additive_identity), -sum(c,d,c), -product(d,add(d,c),d), -product(d,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(c,d,additive_identity), -sum(c,add(c,c),d), -product(d,add(c,c),add(c,c)), -product(d,c,c), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(d,c), -sum(c,add(c,c),add(c,c)), -sum(_3,d,additive_identity), -sum(c,add(_3,c),d), -product(d,add(c,c),add(_3,c)), -product(d,c,c), -product(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,add(c,c),add(c,c)), -sum(_1,c,additive_identity), -sum(c,add(c,c),c), -product(c,add(c,c),add(c,c)), -product(c,c,c), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,add(c,c),add(c,c)), -sum(_1,c,additive_identity), -sum(_3,add(_3,c),c), -product(_3,add(c,c),add(_3,c)), -product(_3,c,_3), -product(_3,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(add(add(add(_1,c),c),c),add(add(_1,c),c),c), -product(add(add(add(_1,c),c),c),c,d), -equalish(add(_1,c),add(add(add(_1,c),c),c)), -sum(c,add(add(add(_1,c),c),c),add(add(add(_1,c),c),c)), -sum(_1,add(add(_1,c),c),additive_identity), -sum(add(add(_1,c),c),add(_1,c),add(add(_1,c),c)), -product(add(_1,c),add(add(add(_1,c),c),c),add(_1,c)), -product(add(_1,c),c,add(add(_1,c),c)), -product(add(_1,c),d,_1)]]
Ag0 <------  Send Clauses : [[-product(add(add(_3,c),c),add(_3,c),c), -product(add(add(_3,c),c),c,d), -equalish(_3,add(add(_3,c),c)), -sum(c,add(add(_3,c),c),add(add(_3,c),c)), -sum(_1,add(_3,c),additive_identity), -sum(add(_3,c),_3,add(_3,c)), -product(_3,add(add(_3,c),c),_3), -product(_3,c,add(_3,c)), -product(_3,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(d,c),add(d,c)), -sum(c,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(d,c),add(_1,c)), -product(_1,c,_3), -product(_3,_3,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,d,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,add(d,c),add(d,c)), -sum(c,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(d,c),add(_1,c)), -product(_1,c,_3), -product(_3,_3,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(_3,c),add(_1,c)), -product(_1,c,_3), -product(additive_identity,d,_1)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,add(_3,c),add(_3,c)), -sum(_1,_22,additive_identity), -sum(_3,add(_1,c),_22), -product(_1,add(_3,c),add(_1,c)), -product(_1,c,_3), -product(additive_identity,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,c,additive_identity), -product(c,_3,_22), -product(c,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,c,additive_identity), -product(c,_3,_22), -product(c,d,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,_3,c), -product(c,add(c,c),_3), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,_3,c), -product(c,add(c,c),_3), -product(c,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(c,c),add(c,c)), -sum(c,_3,additive_identity), -sum(add(c,c),additive_identity,_3), -product(c,add(c,c),additive_identity), -product(c,c,add(c,c)), -product(_3,add(c,c),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(c,c),add(c,c)), -sum(c,_3,additive_identity), -sum(add(c,c),additive_identity,_3), -product(c,add(c,c),additive_identity), -product(c,c,add(c,c)), -product(_3,add(c,c),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),additive_identity,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity), -product(add(_1,c),additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(_1,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_3,_1), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(_1,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_3,_1), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(c,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_3,c), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(c,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -product(_22,_3,c), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c)), -product(_22,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(add(_1,c),add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_22,_3,add(_1,c)), -product(_22,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -product(add(_1,c),_22,_22), -product(add(_1,c),_22,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -product(add(_1,c),_22,_22), -product(add(_1,c),_22,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(c),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,c,c), -product(c,add(c,c),c), -product(c,add(c,c),c)]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(c),d)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(d,c,additive_identity), -sum(c,c,c), -product(c,add(c,c),c), -product(c,add(c,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(d),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(_3,add(c,c),c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_3), -product(_3,add(c,c),c)]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(d),c)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(c,_3), -sum(add(c,c),add(c,c),add(c,c)), -sum(c,c,additive_identity), -sum(_3,add(c,c),c), -product(c,add(c,c),add(c,c)), -product(c,add(c,c),_3), -product(_3,add(c,c),c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(add(d,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(add(d,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),_1,_3), -product(_22,add(_1,c),_1), -product(_22,add(_1,c),add(_1,c)), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),_1,_3), -product(_22,add(_1,c),_1), -product(_22,add(_1,c),add(_1,c)), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),c,_3), -product(_22,add(_1,c),c), -product(_22,add(_1,c),add(_1,c)), -product(_3,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),c,_3), -product(_22,add(_1,c),c), -product(_22,add(_1,c),add(_1,c)), -product(_3,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,add(_1,c),additive_identity), -product(add(_1,c),_22,_22), -product(add(_1,c),_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(add(_1,c),add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,add(_1,c),additive_identity), -product(add(_1,c),_22,_22), -product(add(_1,c),_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(c,add(_1,c),additive_identity), -product(c,c,add(_1,c)), -product(_1,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(c,add(_1,c),additive_identity), -product(c,c,add(_1,c)), -product(_1,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(c,add(_1,c),additive_identity), -product(c,c,add(_1,c)), -product(_1,c,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(c,add(_1,c),additive_identity), -product(c,c,add(_1,c)), -product(_1,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,add(_3,c),add(_3,c)), -sum(_1,c,additive_identity), -sum(_3,add(_1,c),c), -product(c,add(_3,c),add(_1,c)), -product(c,_1,_3), -product(_3,_1,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(c,_3), -sum(_1,add(_3,c),add(_3,c)), -sum(_1,c,additive_identity), -sum(_3,add(_1,c),c), -product(c,add(_3,c),add(_1,c)), -product(c,_1,_3), -product(_3,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,c,add(_1,c)), -product(c,add(_1,c),c), -product(c,c,additive_identity), -product(_1,c,c), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(c,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,c,add(_1,c)), -product(c,add(_1,c),c), -product(c,c,additive_identity), -product(_1,c,_22), -product(_3,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(d,add(_1,c),additive_identity), -product(d,d,add(_1,c)), -product(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,add(_1,c),add(_1,c)), -sum(c,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(d,add(_1,c),additive_identity), -product(d,d,add(_1,c)), -product(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(d,add(_1,c),additive_identity), -product(d,d,add(_1,c)), -product(c,d,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,add(_1,c),add(_1,c)), -sum(d,_3,additive_identity), -sum(add(_1,c),additive_identity,_3), -product(d,add(_1,c),additive_identity), -product(d,d,add(_1,c)), -product(c,d,c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(d,c), -product(d,c,d), -product(d,add(c,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,add(_3,c),add(_3,c)), -sum(_1,d,additive_identity), -sum(_3,add(_1,c),d), -product(d,add(_3,c),add(_1,c)), -product(d,_1,_3), -product(c,_1,_1)]]
Ag1 <------  Send Clauses : [[-equalish(d,c), -product(d,c,d), -product(d,add(c,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(d,c), -sum(_1,add(_3,c),add(_3,c)), -sum(_1,d,additive_identity), -sum(_3,add(_1,c),d), -product(d,add(_3,c),add(_1,c)), -product(d,_1,_3), -product(c,_1,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,d,add(_1,c)), -product(d,add(_1,c),d), -product(d,d,additive_identity), -product(c,d,d), -product(_3,d,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(d,_3), -sum(d,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,d,add(_1,c)), -product(d,add(_1,c),d), -product(d,d,additive_identity), -product(c,d,_22), -product(_3,_22,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_15,add(_1,c),additive_identity), -product(_15,add(_1,c),add(_1,c)), -product(_15,_3,_15), -product(_3,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_15,add(_1,c),additive_identity), -product(_15,add(_1,c),add(_1,c)), -product(_15,_3,_15), -product(_3,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,d)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(additive_identity),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_15,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_15,_15,additive_identity), -product(_15,add(_1,c),_15), -product(_15,_3,_15), -product(_3,_3,_3), -product(_15,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(additive_identity,additive_identity,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_22,additive_identity), -product(_22,add(_1,c),_22), -product(_22,_3,_22), -product(_3,_3,_3), -product(_22,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_identity,additive_inverse(additive_identity),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,add(_1,c),_17), -product(_17,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_17,add(_1,c),additive_identity), -sum(additive_identity,_17,add(_1,c)), -product(_17,add(_1,c),_17), -product(_17,_3,additive_identity), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(additive_identity,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_17,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_17,_17,additive_identity), -product(_17,add(_1,c),_17), -product(_17,_3,_17), -product(add(_1,c),_3,_3), -product(_17,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(additive_identity,c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_22,additive_identity), -product(_22,add(_1,c),_22), -product(_22,_3,_22), -product(add(_1,c),_3,_3), -product(_22,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_identity,d), -product(c,add(d,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_identity,d), -product(c,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_inverse(d),d), -product(c,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,additive_identity,_6), -product(c,d,d), -product(c,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,additive_inverse(d),_6), -product(c,d,d), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_identity,d), -product(c,add(d,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_identity,d), -product(c,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,_24,additive_identity), -sum(_3,add(_1,c),_24), -product(_1,add(_1,c),add(_1,c)), -product(_1,_3,_3), -product(_3,_3,_1)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_inverse(d),d), -product(c,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_1,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,c,additive_identity), -sum(_3,add(_1,c),c), -product(_1,add(_1,c),add(_1,c)), -product(_1,_3,_3), -product(_3,_3,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_24,additive_identity), -sum(_3,add(_1,c),_24), -product(c,add(_1,c),add(_1,c)), -product(c,_3,_3), -product(_3,_3,c)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,additive_identity,_6), -product(c,d,d), -product(c,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(c,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,_24,additive_identity), -sum(_3,add(_1,c),_24), -product(c,add(_1,c),add(_1,c)), -product(c,_3,_3), -product(_3,_3,c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,additive_identity,_6), -product(c,_6,d), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,additive_inverse(d),_6), -product(c,d,d), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(c,additive_identity,d), -product(c,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,additive_identity,_6), -product(c,_6,d), -product(c,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_24,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_24,_3,additive_identity), -product(_24,add(_1,c),_3), -product(_24,_3,_24), -product(_3,_3,_24), -product(_3,_24,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -product(_3,_3,_22), -product(_3,_22,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,_1), -product(_3,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(c,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,_1), -product(_3,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,c), -product(_3,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(d,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,c), -product(_3,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_22,_3,_22), -product(_3,_3,add(_1,c)), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,add(_1,c),additive_identity), -product(_22,add(_1,c),add(_1,c)), -product(_22,_3,_22), -product(_3,_3,add(_1,c)), -product(_22,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,_3), -product(add(_1,c),_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_22,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,_3), -product(add(_1,c),_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,_3), -product(_3,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(_3,add(_1,c),additive_identity), -sum(additive_identity,_22,add(_1,c)), -product(_22,add(_1,c),_22), -product(_22,_3,additive_identity), -product(_3,_3,_3), -product(_3,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_22), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,add(_1,c),add(_1,c)), -sum(add(_1,c),additive_identity,additive_identity), -sum(_22,_3,additive_identity), -product(_22,add(_1,c),_3), -product(_22,_3,_22), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_22), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(d,c), -product(d,c,d), -product(add(d,d),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(d,c), -product(d,c,d), -product(add(d,d),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(additive_identity,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,d)]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(additive_identity,c,d)]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,additive_identity,additive_identity), -product(additive_inverse(additive_identity),additive_identity,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(_3,_3,_3), -product(_13,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(_3,_3,_3), -product(_13,_3,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_13,add(_1,c),additive_identity), -product(_13,_3,add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -product(additive_identity,c,additive_identity), -product(c,c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_13,add(_1,c),additive_identity), -product(_13,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(additive_identity,d,d), -product(add(c,additive_identity),d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(additive_identity,d,d), -product(c,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(additive_inverse(c),d,d), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(additive_identity,c,_6), -product(d,c,d), -product(d,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(additive_inverse(c),d,_6), -product(c,d,d), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(multiply(_13,_3),multiply(_13,_3),additive_identity), -sum(add(_1,c),add(_1,c),multiply(_13,_3)), -product(_13,multiply(_13,_3),add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(additive_identity,d,d), -product(add(c,additive_identity),d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_13,_3), -sum(_3,additive_identity,add(_1,c)), -sum(multiply(_13,_3),multiply(_13,_3),additive_identity), -sum(add(_1,c),add(_1,c),multiply(_13,_3)), -product(_13,multiply(_13,_3),add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(additive_identity,d,d), -product(c,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(c,d,_6), -product(additive_inverse(c),d,d), -product(additive_identity,d,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(additive_identity,c,_6), -product(d,c,d), -product(d,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(additive_inverse(c),d,_6), -product(c,d,d), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_1,additive_identity,add(_1,c)), -sum(c,c,additive_identity), -sum(_3,_3,c), -product(_21,c,_3), -equalish(_3,_21)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_1,additive_identity,add(_1,c)), -sum(c,c,additive_identity), -sum(_3,_3,c), -product(_21,c,_3), -equalish(_3,_21)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(c,additive_identity,add(_1,c)), -sum(d,d,additive_identity), -sum(_3,_3,d), -product(_21,d,_3), -equalish(_3,_21)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(c,additive_identity,add(_1,c)), -sum(d,d,additive_identity), -sum(_3,_3,d), -product(_21,d,_3), -equalish(_3,_21)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(d,c,_6), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(d,c,_6), -product(additive_identity,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_21,add(_1,c),additive_identity), -equalish(_21,_21), -product(_21,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_21,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_21,add(_1,c),additive_identity), -equalish(_21,_21), -product(_21,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -product(additive_identity,c,_6), -product(_6,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -product(additive_identity,c,_6), -product(_6,c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_22,_22,additive_identity), -sum(_22,_22,_22), -product(_22,_22,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_22,_22,additive_identity), -sum(_22,_22,_22), -product(_22,_22,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,_3,add(_1,c)), -product(_22,_22,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,_3,add(_1,c)), -product(_22,_22,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_5,c), -equalish(additive_inverse(d),_5)]]
Ag1 <------  Send Clauses : [[-equalish(_5,c), -equalish(additive_inverse(d),_5)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_22,add(_1,c),add(_1,c)), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_22,add(_1,c),add(_1,c)), -equalish(add(_1,c),_3)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -equalish(additive_inverse(_6),d)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(_6),c), -equalish(_6,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,_3), -product(_22,_22,add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(_10,c), -equalish(additive_inverse(_10),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,_3), -product(_22,_22,add(_1,c))]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(_10),c), -equalish(_10,d)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_6,c), -equalish(add(_6,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,c), -equalish(d,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_6,c), -equalish(add(_6,d),additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,c), -equalish(d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(_22,_22,_3), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(_22,_22,_3), -product(_22,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,_3,add(_1,c)), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,_3,add(_1,c)), -product(_22,_3,_22)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,_3,add(_1,c)), -equalish(add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_22,_3,add(_1,c)), -equalish(add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,add(_1,c)), -product(_22,_3,_22)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_22,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_22,add(_1,c),additive_identity), -equalish(_22,add(_1,c)), -product(_22,_3,_22)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(add(additive_inverse(add(add(add(_12,_13),c),d)),add(add(_12,_13),c)),c)]]
Ag1 <------  Send Clauses : [[-equalish(add(additive_inverse(add(add(add(_16,_13),c),d)),add(add(_16,_13),c)),c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(add(additive_identity,d)),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(add(additive_identity,d)),c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -product(_20,additive_identity,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -product(_20,additive_identity,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -product(_20,additive_identity,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -sum(_3,add(_1,c),add(_1,c)), -product(_20,additive_identity,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,additive_identity,_20), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,additive_identity,_20), -product(_20,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(add(additive_inverse(d),additive_identity),c)]]
Ag1 <------  Send Clauses : [[-equalish(add(additive_inverse(d),additive_identity),c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(additive_identity,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(add(additive_inverse(additive_identity),additive_inverse(d)),c)]]
Ag1 <------  Send Clauses : [[-equalish(add(additive_inverse(additive_identity),additive_inverse(d)),c)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(add(c,additive_identity),d,d), -product(add(c,additive_identity),add(c,d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(add(c,additive_identity),d,d), -product(add(c,additive_identity),add(c,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(add(c,additive_identity),additive_identity,d), -product(add(c,additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(add(c,additive_identity),additive_inverse(c),d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),additive_identity,add(c,additive_identity)), -product(add(c,additive_identity),c,d), -product(add(c,additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),additive_inverse(c),add(c,additive_identity)), -product(add(c,additive_identity),c,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(add(c,additive_identity),additive_identity,d), -product(add(c,additive_identity),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -product(_20,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(add(c,additive_identity),additive_inverse(c),d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),additive_identity,add(c,additive_identity)), -product(add(c,additive_identity),c,d), -product(add(c,additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),d,add(c,additive_identity)), -product(add(c,additive_identity),additive_identity,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),additive_inverse(c),add(c,additive_identity)), -product(add(c,additive_identity),c,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),d,add(c,additive_identity)), -product(add(c,additive_identity),additive_identity,d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),additive_identity,add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),additive_identity,add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d), -product(add(c,additive_identity),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_20,add(_1,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,add(_1,c),_20), -product(_20,add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(d,c,d), -product(add(add(c,additive_identity),d),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(additive_identity,c,d), -product(add(c,additive_identity),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(additive_inverse(add(c,additive_identity)),c,d), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,add(c,additive_identity),add(c,additive_identity)), -product(c,add(c,additive_identity),d), -product(c,add(c,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(add(c,additive_identity)),c,add(c,additive_identity)), -product(add(c,additive_identity),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(d,c,d), -product(add(add(c,additive_identity),d),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(additive_identity,c,d), -product(add(c,additive_identity),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(c,additive_identity),c,add(c,additive_identity)), -product(additive_inverse(add(c,additive_identity)),c,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(_20,add(_1,c),_3), -sum(add(_1,c),add(_1,c),_3), -product(_20,add(_1,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,add(c,additive_identity),add(c,additive_identity)), -product(c,add(c,additive_identity),d), -product(c,add(c,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,_20,additive_identity), -product(_20,additive_identity,_3)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(add(c,additive_identity)),c,add(c,additive_identity)), -product(add(c,additive_identity),c,d), -product(additive_identity,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_20,add(_1,c),add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,_20,additive_identity), -product(_20,additive_identity,_3)]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,add(c,additive_identity),add(c,additive_identity)), -product(additive_identity,add(c,additive_identity),d), -product(additive_identity,add(c,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,add(c,additive_identity),add(c,additive_identity)), -product(additive_identity,add(c,additive_identity),d), -product(additive_identity,add(c,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,add(c,additive_identity),add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d), -product(additive_identity,add(c,additive_identity),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,add(c,additive_identity),add(c,additive_identity)), -product(add(c,additive_identity),add(c,additive_identity),d), -product(additive_identity,add(c,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -product(_20,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -product(_20,_20,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,_3), -product(_20,_20,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3), -product(_20,_20,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3), -product(_20,_20,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(d),add(c,additive_identity))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_3,_3), -product(_20,_3,additive_identity), -product(_20,_20,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(d),add(c,additive_identity))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_3,_3), -product(_20,_3,additive_identity), -product(_20,_20,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(add(c,additive_identity)),d)]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(add(c,additive_identity)),d)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(add(add(c,additive_identity),d),additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(add(add(c,additive_identity),d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_20,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,additive_identity,_3), -product(_20,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,_20,_20), -product(_20,additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_20,_3,add(_1,c)), -sum(additive_identity,_20,_3), -product(_20,_20,_20), -product(_20,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -sum(_3,additive_identity,add(_1,c)), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,add(_1,c),_3), -sum(_3,additive_identity,add(_1,c)), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,_3), -sum(additive_identity,_3,add(_1,c)), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(add(_1,c),_20,_3), -sum(additive_identity,_3,add(_1,c)), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3), -sum(_3,_3,add(_1,c)), -product(_20,_20,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_20,_3), -sum(_3,_3,add(_1,c)), -product(_20,_20,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_3,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_20,_3,additive_identity), -product(_20,_20,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_20,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_20,add(_1,c),additive_identity), -sum(_20,_3,_3), -sum(add(_1,c),additive_identity,add(_1,c)), -product(_20,_3,additive_identity), -product(_20,_20,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),add(c,c),additive_identity), -sum(_3,_3,add(c,c)), -product(add(c,c),add(c,c),_3)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),add(c,c),additive_identity), -sum(_3,_3,add(c,c)), -product(add(c,c),add(c,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(add(additive_identity,c),d,d), -product(add(additive_identity,c),add(c,d),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(add(additive_identity,c),additive_identity,d), -product(add(additive_identity,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(add(additive_identity,c),additive_inverse(c),d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(add(additive_identity,c),c,d), -product(add(additive_identity,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),additive_inverse(c),add(additive_identity,c)), -product(add(additive_identity,c),c,d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(add(additive_identity,c),d,d), -product(add(additive_identity,c),add(c,d),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(add(additive_identity,c),additive_identity,d), -product(add(additive_identity,c),c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(add(_3,c),_1,c), -product(additive_identity,_3,c)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(add(additive_identity,c),additive_inverse(c),d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(add(c,c),c), -sum(c,additive_identity,add(c,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(add(c,c),_1,c), -product(additive_identity,c,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,d,_1), -product(add(_3,c),_1,d), -product(additive_identity,c,d)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(add(additive_identity,c),c,d), -product(add(additive_identity,c),c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(d,d,_1), -product(add(_3,c),_1,d), -product(additive_identity,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),additive_identity,d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),additive_inverse(c),add(additive_identity,c)), -product(add(additive_identity,c),c,d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),d,add(additive_identity,c)), -product(add(additive_identity,c),additive_identity,d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),additive_identity,add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d), -product(add(additive_identity,c),additive_identity,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(add(_1,c),add(_1,c),_1), -product(add(_3,c),_1,add(_1,c)), -sum(c,_3,_1), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_3,c), -product(_3,c,d), -equalish(add(_3,c),_3), -sum(_3,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(add(_1,c),add(_1,c),_1), -product(add(_3,c),_1,add(_1,c)), -sum(c,_3,_1), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(add(_1,c),add(_1,c),_1), -product(add(_3,c),_1,add(_1,c)), -sum(d,_3,_1), -product(additive_identity,c,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(add(_3,c),c), -sum(c,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(add(_1,c),add(_1,c),_1), -product(add(_3,c),_1,add(_1,c)), -sum(d,_3,_1), -product(additive_identity,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),add(_1,c)), -sum(add(_1,c),_3,add(_1,c)), -product(additive_identity,add(_1,c),_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(add(_1,c),_3,add(_1,c)), -sum(additive_identity,add(_1,c),_3), -product(additive_identity,add(_1,c),add(_1,c)), -product(add(_1,c),add(_1,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(d,c,d), -product(add(add(additive_identity,c),d),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(additive_identity,c,d), -product(add(additive_identity,c),c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(additive_inverse(add(additive_identity,c)),c,d), -product(additive_identity,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,add(additive_identity,c),add(additive_identity,c)), -product(c,add(additive_identity,c),d), -product(c,add(additive_identity,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_inverse(add(additive_identity,c)),c,add(additive_identity,c)), -product(add(additive_identity,c),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(d,c,d), -product(add(add(additive_identity,c),d),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(additive_identity,c,d), -product(add(additive_identity,c),c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(add(additive_identity,c),c,add(additive_identity,c)), -product(additive_inverse(add(additive_identity,c)),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,add(additive_identity,c),add(additive_identity,c)), -product(c,add(additive_identity,c),d), -product(c,add(additive_identity,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_inverse(add(additive_identity,c)),c,add(additive_identity,c)), -product(add(additive_identity,c),c,d), -product(additive_identity,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(add(c,c),_3), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),add(c,c),additive_identity), -sum(_3,_3,add(c,c)), -product(add(c,c),add(c,c),_3), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(add(c,c),_3), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),add(c,c),additive_identity), -sum(_3,_3,add(c,c)), -product(add(c,c),add(c,c),_3), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(add(_1,c),_3), -sum(add(_1,c),additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(_3,_3,add(_1,c)), -product(add(_1,c),add(_1,c),_3), -product(_3,add(_1,c),additive_identity), -product(_3,add(_1,c),add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-product(d,add(additive_identity,c),add(additive_identity,c)), -product(additive_identity,add(additive_identity,c),d), -product(additive_identity,add(additive_identity,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(d,add(additive_identity,c),add(additive_identity,c)), -product(additive_identity,add(additive_identity,c),d), -product(additive_identity,add(additive_identity,c),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-product(additive_identity,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d), -product(additive_identity,add(additive_identity,c),additive_identity)]]
Ag1 <------  Send Clauses : [[-product(additive_identity,add(additive_identity,c),add(additive_identity,c)), -product(add(additive_identity,c),add(additive_identity,c),d), -product(additive_identity,add(additive_identity,c),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,c,additive_identity), -sum(c,c,c), -product(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,additive_identity,add(c,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_3,_3,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,d,additive_identity), -sum(d,d,d), -product(d,d,d)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,additive_identity,add(d,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_3,_3,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(add(_1,c),add(_1,c),_26), -product(_26,_26,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(add(_1,c),add(_1,c),_26), -product(_26,_26,add(_1,c)), -product(add(_1,c),_3,add(_1,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(d),add(additive_identity,c))]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(d),add(additive_identity,c))]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_inverse(add(additive_identity,c)),d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(c,c,_26)]]
Ag1 <------  Send Clauses : [[-equalish(additive_inverse(add(additive_identity,c)),d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(c,c,_26)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_1,_1,additive_identity), -sum(_3,_3,_1), -product(_1,_1,_3), -sum(d,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_1,_1,additive_identity), -sum(_3,_3,_1), -product(_1,_1,_3), -sum(d,c,_1)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(add(add(additive_identity,c),d),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(_3,c,_26), -product(_3,_1,_3)]]
Ag1 <------  Send Clauses : [[-equalish(add(add(additive_identity,c),d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(_3,c,_26), -product(_3,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_1,_1,additive_identity), -sum(_3,_3,_1), -product(_1,_1,_3), -sum(c,d,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_1,_1,additive_identity), -sum(_3,_3,_1), -product(_1,_1,_3), -sum(c,d,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(c,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(d,d,_26)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(c,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(d,d,_26)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(c,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(_3,d,_26), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(c,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(_3,d,_26), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(c,_3,_26), -product(_3,_1,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(c,_3,_26), -product(_3,_1,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(c,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(d,_3,_26), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(c,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(_3,_3,_26), -product(_26,_26,_3), -sum(d,_3,_26), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(add(_1,c),add(_1,c),_26), -product(_26,_26,add(_1,c)), -sum(additive_identity,additive_identity,_26), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(add(_1,c),add(_1,c),_26), -product(_26,_26,add(_1,c)), -sum(additive_identity,additive_identity,_26), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(add(_1,c),add(_1,c),_26), -product(_26,_26,add(_1,c)), -sum(additive_identity,_26,_26), -product(add(_1,c),_3,_26), -product(add(_1,c),_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_26,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_26,_26,additive_identity), -sum(add(_1,c),add(_1,c),_26), -product(_26,_26,add(_1,c)), -sum(additive_identity,_26,_26), -product(add(_1,c),_3,_26), -product(add(_1,c),_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),add(c,c),additive_identity), -sum(_25,_25,add(c,c)), -product(_1,add(c,c),_25), -sum(_3,_3,_1), -product(_3,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(add(c,c),add(c,c),additive_identity), -sum(_25,_25,add(c,c)), -product(_1,add(c,c),_25), -sum(_3,_3,_1), -product(_3,c,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,_3,additive_identity), -product(additive_identity,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(add(_1,c),add(_1,c),add(_1,c)), -product(_25,add(_1,c),add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,_3,additive_identity), -product(additive_identity,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,_3,c), -sum(_3,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,_3,c), -sum(_3,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(_25,_1,c), -sum(_25,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(_25,_1,c), -sum(_25,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,_3,c), -sum(add(_1,c),_3,_25), -product(add(_1,c),_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,_3,c), -sum(add(_1,c),_3,_25), -product(add(_1,c),_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,_3,d), -sum(_3,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,_3,d), -sum(_3,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,c,additive_identity), -sum(d,d,c), -product(_25,c,d), -sum(_25,_3,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,c,additive_identity), -sum(d,d,c), -product(_25,c,d), -sum(_25,_3,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,_3,d), -sum(add(_1,c),_3,_25), -product(add(_1,c),c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,_3,d), -sum(add(_1,c),_3,_25), -product(add(_1,c),c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(_25,_1,c), -sum(_3,_25,_25)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(c,d), -product(c,d,c), -product(c,add(d,d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_1,_1,additive_identity), -sum(c,c,_1), -product(_25,_1,c), -sum(_3,_25,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,c,additive_identity), -sum(d,d,c), -product(_25,c,d), -sum(_3,_25,_25)]]
Ag1 <------  Send Clauses : [[-equalish(c,d), -product(c,d,c), -product(c,add(d,d),additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(c,c,additive_identity), -sum(d,d,c), -product(_25,c,d), -sum(_3,_25,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(_25,_25,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(_25,_25,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(additive_identity,_25,_25), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(additive_identity,_25,_25), -product(additive_identity,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,_3,c), -sum(_3,add(_1,c),_25), -product(add(_1,c),_1,c)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(c,c,_3), -product(_25,_3,c), -sum(_3,add(_1,c),_25), -product(add(_1,c),_1,c)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,_3,d), -sum(_3,add(_1,c),_25), -product(add(_1,c),c,d)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(d,d,_3), -product(_25,_3,d), -sum(_3,add(_1,c),_25), -product(add(_1,c),c,d)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(_25,additive_identity,_25), -product(additive_identity,_3,add(_1,c))]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(_25,additive_identity,_25), -product(additive_identity,_3,add(_1,c))]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_25,_25), -product(_25,_3,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,d), -product(additive_identity,additive_identity,c), -product(additive_identity,d,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,d), -product(additive_identity,additive_inverse(additive_identity),c), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_3,_25), -product(_3,_3,additive_identity), -product(_25,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,d), -product(additive_identity,additive_identity,c), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(add(_1,c),add(_1,c),additive_identity), -sum(additive_identity,additive_identity,add(_1,c)), -product(_25,add(_1,c),additive_identity), -sum(_25,_3,_25), -product(_3,_3,additive_identity), -product(_25,_3,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,d), -product(additive_identity,additive_inverse(additive_identity),c), -product(additive_identity,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,c,additive_identity), -sum(_1,_1,c), -product(c,c,_1), -sum(c,c,c)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,c,additive_identity), -sum(_1,_1,c), -product(c,c,_1), -sum(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,d,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(c,c), -sum(c,additive_identity,add(c,c)), -sum(c,c,additive_identity), -sum(_1,_1,c), -product(c,c,_1), -sum(c,c,c), -product(c,c,c)]]
Ag1 <------  Send Clauses : [[-equalish(additive_identity,d), -product(additive_identity,d,c), -product(additive_identity,d,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(c,c,c), -product(c,c,d), -equalish(_3,c), -sum(c,additive_identity,add(c,c)), -sum(_3,_3,additive_identity), -sum(_1,_1,_3), -product(_3,_3,_1), -sum(c,c,_3), -product(c,c,c)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,c,c), -product(d,additive_identity,_8), -product(d,add(c,additive_identity),additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,c,c), -product(d,additive_identity,_8), -product(d,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,c,c), -product(d,additive_inverse(c),_8), -product(d,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,additive_identity,c), -product(d,c,_8), -product(d,c,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,additive_inverse(c),c), -product(d,c,_8), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,c,c), -product(d,additive_identity,_8), -product(d,add(c,additive_identity),additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,d,additive_identity), -sum(_1,_1,d), -product(d,d,_1), -sum(d,d,d)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,c,c), -product(d,additive_identity,_8), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,d,additive_identity), -sum(_1,_1,d), -product(d,d,_1), -sum(d,d,d)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,c,c), -product(d,additive_inverse(c),_8), -product(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(d,d), -sum(c,additive_identity,add(d,c)), -sum(d,d,additive_identity), -sum(_1,_1,d), -product(d,d,_1), -sum(d,d,d), -product(d,c,d)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,additive_identity,c), -product(d,c,_8), -product(d,c,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(d,d,c), -product(d,c,d), -equalish(_3,d), -sum(c,additive_identity,add(d,c)), -sum(_3,_3,additive_identity), -sum(_1,_1,_3), -product(_3,_3,_1), -sum(d,d,_3), -product(d,c,d)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,_8,c), -product(d,additive_identity,_8), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,additive_inverse(c),c), -product(d,c,_8), -product(d,additive_identity,additive_identity)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(_8,d), -product(d,additive_identity,c), -product(d,c,_8), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,_8,c), -product(d,additive_identity,_8), -product(d,additive_identity,additive_identity)]]
Ag1 <------  Send Clauses : [[-equalish(_8,d), -product(d,additive_identity,c), -product(d,c,_8), -product(d,additive_identity,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(_25,_25,_1), -product(_1,_1,_25), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag0 <------  Send Clauses : [[-product(c,_3,c), -product(c,c,d), -equalish(_1,c), -sum(_3,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(_25,_25,_1), -product(_1,_1,_25), -sum(c,_3,_1), -product(_3,_3,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(_25,_25,_1), -product(_1,_1,_25), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag0 <------  Send Clauses : [[-product(d,_3,c), -product(d,c,d), -equalish(_1,d), -sum(c,additive_identity,add(_3,c)), -sum(_1,_1,additive_identity), -sum(_25,_25,_1), -product(_1,_1,_25), -sum(d,_3,_1), -product(_3,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_25,_25,additive_identity), -sum(add(_1,c),add(_1,c),_25), -product(_25,_25,add(_1,c)), -sum(additive_identity,additive_identity,_25), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_25,_25,additive_identity), -sum(add(_1,c),add(_1,c),_25), -product(_25,_25,add(_1,c)), -sum(additive_identity,additive_identity,_25), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_25,_25,additive_identity), -sum(add(_1,c),add(_1,c),_25), -product(_25,_25,add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,_3,_25), -product(additive_identity,_3,additive_identity)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_3,additive_identity,add(_1,c)), -sum(_25,_25,additive_identity), -sum(add(_1,c),add(_1,c),_25), -product(_25,_25,add(_1,c)), -sum(additive_identity,_25,_25), -product(_25,_3,_25), -product(additive_identity,_3,additive_identity)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(_3,_3,_25), -sum(c,c,_3)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_25,_3), -sum(c,additive_identity,add(c,c)), -sum(_3,_3,additive_identity), -sum(add(c,c),add(c,c),_3), -product(_25,_3,add(c,c)), -sum(_3,_3,_25), -sum(c,c,_3)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_25,_25,additive_identity), -sum(_3,_3,_25), -product(_1,_25,_3), -sum(_3,_3,_1), -sum(d,c,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_25,_25,additive_identity), -sum(_3,_3,_25), -product(_1,_25,_3), -sum(_3,_3,_1), -sum(d,c,_25)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_1,_1,additive_identity), -sum(_3,_3,_1), -product(_25,_1,_3), -sum(_25,_3,_25), -sum(_3,c,_1)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_1,_1,additive_identity), -sum(_3,_3,_1), -product(_25,_1,_3), -sum(_25,_3,_25), -sum(_3,c,_1)]]
Ag1 -> Ag0 : Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(additive_identity,_3,_25), -sum(_25,c,_3), -product(additive_identity,_1,_25)]]
Ag0 <------  Send Clauses : [[-product(_3,_1,c), -product(_3,c,d), -equalish(_25,_3), -sum(_1,additive_identity,add(_1,c)), -sum(_3,_3,additive_identity), -sum(add(_1,c),add(_1,c),_3), -product(_25,_3,add(_1,c)), -sum(additive_identity,_3,_25), -sum(_25,c,_3), -product(additive_identity,_1,_25)]]
Ag0 -> Ag1 : Send Clauses : [[-equalish(c,d), -product(c,d,c), -product(add(c,c),d,additive_identity)]]
Sys -> Sys : {Time up!}
Sys <------  {Time up!}
Sys -> Sys : {Finish}
Ag1 -> Ag0 : Send Clauses : [[-product(_3,c,c), -product(_3,c,d), -equalish(_1,_3), -sum(c,additive_identity,add(c,c)), -sum(_25,_25,additive_identity), -sum(_3,_3,_25), -product(_1,_25,_3), -sum(_3,_3,_1), -sum(c,d,_25)]]
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 601761 ms.

Execution time was 601595 ms.

---System Timeout---
DCIF PROBLEM NewASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-NewAsync
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
Time for creating graph: 0.123s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600459 ms.

Execution time was 600211 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-NewAsync
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
Time for creating graph: 0.127s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600419 ms.

Execution time was 600164 ms.

---System Timeout---
DCIF PROBLEM NewASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-NewAsync
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-1
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
Time for creating graph: 0.125s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600472 ms.

Execution time was 600224 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-1
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-2
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
Time for creating graph: 0.117s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600464 ms.

Execution time was 600225 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-2
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
0-1-2-3-
Time for creating graph: 0.118s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600480 ms.

Execution time was 600236 ms.

---System Timeout---
DCIF PROBLEM TOKEN
ORDER is: 
0-1-2-3-
len of order is 4
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Token
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Async
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
Time for creating graph: 0.116s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600447 ms.

Execution time was 600208 ms.

---System Timeout---
DCIF PROBLEM ASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Async
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-2-1-0
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
2-1-0-
Time for creating graph: 0.116s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-2-1-0
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
2-1-0-
Time for creating graph: 0.12s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-1-0-2
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
1-0-2-
Time for creating graph: 0.122s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-0-2-1
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
0-2-1-
Time for creating graph: 0.118s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-1-2-0
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
1-2-0-
Time for creating graph: 0.116s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-2-0-1
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
2-0-1-
Time for creating graph: 0.125s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-3-1-2
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet4
timout :600000
ORDER is: 
3-1-2-
Time for creating graph: 0.122s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Async
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.197s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600691 ms.

Execution time was 600271 ms.

---System Timeout---
DCIF PROBLEM ASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Async
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-NewAsync
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.116s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600489 ms.

Execution time was 600157 ms.

---System Timeout---
DCIF PROBLEM NewASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-NewAsync
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.117s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600505 ms.

Execution time was 600183 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-1
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.122s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600551 ms.

Execution time was 600215 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-1
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-2
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.119s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600531 ms.

Execution time was 600202 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-2
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-3
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.118s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600552 ms.

Execution time was 600227 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-3
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-4
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.148s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600585 ms.

Execution time was 600229 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-4
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-5
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.12s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600514 ms.

Execution time was 600186 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-5
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-6
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.128s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600540 ms.

Execution time was 600199 ms.

---System Timeout---
DCIF PROBLEM STAR
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Star-FixedRoot-6
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Star-FixedRoot-7
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.122s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
0-1-2-3-4-5-6-
Time for creating graph: 0.136s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600544 ms.

Execution time was 600194 ms.

---System Timeout---
DCIF PROBLEM TOKEN
ORDER is: 
0-1-2-3-4-5-6-
len of order is 7
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Token
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Async
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
Time for creating graph: 0.118s
0 (NEW) CHARACTERISTIC CLAUSES


Total execution time was 600521 ms.

Execution time was 600194 ms.

---System Timeout---
DCIF PROBLEM ASYNC
RNG005-2.C2i1_all_ld-1-4_DICF-PB-Async
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-7-6-5-4-3-2-1-0
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
7-6-5-4-3-2-1-0-
Time for creating graph: 0.122s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-4-5-2-1-0-3-6-7
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
4-5-2-1-0-3-6-7-
Time for creating graph: 0.128s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-1-6-7-0-4-5-3-2
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
1-6-7-0-4-5-3-2-
Time for creating graph: 0.152s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-5-0-3-6-7-2-1-4
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
5-0-3-6-7-2-1-4-
Time for creating graph: 0.134s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-6-1-5-4-2-7-3-0
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
6-1-5-4-2-7-3-0-
Time for creating graph: 0.13s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-4-2-3-5-0-1
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
4-2-3-5-0-1-
Time for creating graph: 0.146s
resultFilename :RNG005-2.C2i1
nethod:DICF-PB-Token-FixedOrder-3-5-4-0-1-2
pbBasename :RNG005-2.C2i1
variantSuffix:_all_ld-1-4
distr suff:_kmet8
timout :600000
ORDER is: 
3-5-4-0-1-2-
Time for creating graph: 0.119s
Dooone
